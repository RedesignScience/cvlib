name: Linux

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # The cookiecutter uses the "--initial-branch" flag when it runs git-init
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Weekly tests run on main by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      # More info on options: https://github.com/marketplace/actions/provision-with-micromamba
      - uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          environment-name: test
          channels: conda-forge,defaults
          extra-specs: |
            python=${{ matrix.python-version }}

      - name: Install package
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          python -m pip install . --no-deps
          micromamba list

      - name: Run tests
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          pytest -v --cov=cvpack --cov-report=xml --color=yes --doctest-modules cvpack/

      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

      - name: Conda Build and Upload
        # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        shell: bash -l {0}
        run: |
          dir=`mktemp -d`
          export CVPACK_VERSION=`git describe --tags | cut -d'-' -f 1)
          export PYTHON_VERSION={{ matrix.python-version }}
          export ANACONDA_API_TOKEN=${{ secrets.ANACONDA_TOKEN }}
          cd devtools/conda-recipes/anaconda
          conda mambabuild . --no-anaconda-upload -c conda-forge --output-folder $dir
          PACKAGE=`find $dir -name *.tar.bz2 | head -1`
          conda convert --platform all $PACKAGE -o $dir
          for filename in `find $dir -name *.tar.bz2`; do
            anaconda upload --user redesign-science --force --label main $filename
          done
