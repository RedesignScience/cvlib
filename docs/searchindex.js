Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CentroidFunction", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/NumberOfContacts", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/SheetRMSDContent", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CentroidFunction.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/NumberOfContacts.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/SheetRMSDContent.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CentroidFunction", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "NumberOfContacts", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "SheetRMSDContent", "Torsion", "TorsionSimilarity", "Python API", "Getting Started", "Collective Variable Package", "Bibliography", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "atom1": [0, 4, 14], "atom2": [0, 4, 14], "atom3": [0, 14], "pbc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "form": [0, 5, 7, 13, 14], "three": [0, 13], "atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "theta": [0, 5], "bf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], "mathrm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "aco": 0, "left": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "frac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "_": [0, 1, 3, 5, 6, 7, 13, 14, 15], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20], "cdot": [0, 14], "3": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 19], "right": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "where": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "j": [0, 1, 2, 3, 7, 9, 11, 12, 13, 14, 19], "_j": [0, 2, 7, 9, 11, 12, 14], "_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18], "first": [0, 1, 2, 4, 8, 9, 10, 14, 15], "second": [0, 1, 2, 4, 8, 9, 10, 14, 15], "third": [0, 14], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "whether": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19], "period": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15], "boundari": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15], "condit": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "addparticl": [0, 1, 4, 14], "rang": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "addforc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "integr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17], "verletintegr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "platform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "getplatformbynam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "vec3": [0, 4, 10, 14], "po": [0, 14], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "digit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "570796": [0, 14], "rad": [0, 14], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "classmethod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "getargu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "inspect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "construct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "instanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20], "dictionari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "annot": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "tupl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "ordereddict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "radiusofgyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 20], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "item": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "f": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "weighbymass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "geteffectivemass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "q": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "defin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "m_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "sum_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "m_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "dq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "round": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "precis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "after": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "decim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "scientif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "effici": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], "onli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "forc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], "should": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "evalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "alaninedipeptideimplicit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "peptid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "topologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "residu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "hoh": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "radius_of_gyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "setforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "30": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "94693": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "getunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "measur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "setunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "atomspergroup": 1, "function": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14], "indic": [1, 3, 9, 11, 12, 15], "gener": [1, 3], "coordin": [1, 10, 13], "m": [1, 5, 6, 8, 11, 12, 13], "dot": [1, 3], "user": [1, 3], "th": [1, 3, 7, 10, 13, 15], "string": [1, 3], "ani": [1, 2, 3, 10, 13, 20], "express": [1, 3], "support": [1, 5, 6, 8, 10], "customcompoundbondforc": 1, "contain": [1, 5, 8, 20], "thei": [1, 8, 10], "must": [1, 3, 5, 6, 7, 8, 10, 13], "pass": 1, "keyword": [1, 3], "constructor": 1, "scalar": 1, "arrai": 1, "length": 1, "In": [1, 3, 6, 7, 9, 11, 12, 13, 15], "latter": 1, "case": [1, 3, 7, 9, 11, 12, 13, 17], "each": [1, 3, 9, 13, 15], "assign": 1, "correspond": [1, 2, 7, 13], "str": [1, 3, 7, 9, 13], "It": [1, 3, 10], "valid": [1, 3], "2d": 1, "like": [1, 2], "object": [1, 2, 20], "shape": 1, "per": [1, 2], "1d": 1, "element": [1, 9], "ar": [1, 2, 6, 8, 9, 10, 13, 17], "next": [1, 13], "so": [1, 9], "mmunit": [1, 2, 15], "compat": [1, 3], "md": [1, 3], "dalton": [1, 3], "distanc": [1, 2, 3, 6, 7, 9, 13, 16, 18], "nanomet": [1, 3, 6, 7, 9, 13], "time": [1, 3, 14], "picosecond": [1, 3], "temperatur": [1, 3], "kelvin": [1, 3], "energi": [1, 2, 3, 19], "kilojoules_per_mol": [1, 2, 3], "angl": [1, 3, 5, 8, 14, 15, 16, 18], "radian": [1, 3], "doe": [1, 3, 5, 8], "have": [1, 3], "dimensionless": [1, 2, 3, 5, 6, 7, 8, 9, 13, 15, 17], "quantiti": [1, 2, 5, 6, 7, 8, 9, 10, 13], "entri": 1, "rais": [1, 3, 5, 8, 10], "valueerror": [1, 3, 5, 8, 10], "numpi": 1, "np": 1, "alaninedipeptidevacuum": [1, 3, 9, 11, 12], "angle1": 1, "5": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 19], "10": [1, 10, 13, 19], "angle2": 1, "15": [1, 5, 6, 7], "20": 1, "colvar": [1, 3], "k": [1, 6, 7, 13, 15], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 10], "pi": [1, 2], "7": [1, 10, 13, 17], "theta1": 1, "value_in_unit": 1, "theta2": 1, "500": 1, "429": 1, "479": 1, "kj": [1, 2], "mol": [1, 2], "fromopenmmforc": 1, "creat": [1, 10, 17], "convert": [1, 3], "typeerror": 1, "app": [1, 5, 6, 7, 8, 9, 10, 13, 17], "lysozymeimplicit": [1, 5, 6, 7, 8, 15, 17], "59": [1, 5, 6, 7, 8, 15, 17], "79": [1, 5, 6, 8, 15], "helix_cont": [1, 5, 6, 7, 8, 17], "helixtorsioncont": [1, 16, 17, 18], "num_atom": [1, 3, 9, 10, 11, 12, 17], "getnumparticl": [1, 3, 7, 11, 12, 13, 17], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 5, 6, 7, 8, 9, 13], "addglobalparamet": 1, "getnam": [1, 2, 17], "getforc": [1, 2], "copi": 1, "harmonicbondforc": 1, "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": 1, "start": [1, 9, 18], "state": 1, "getstat": 1, "getenergi": 1, "true": [1, 13, 17], "getpotentialenergi": 1, "copy_valu": 1, "origin": [1, 7, 13], "6f": 1, "2094": 1, "312483": 1, "312": 1, "3239": 1, "795215": 1, "795": 1, "4226": 1, "051934": 1, "052": 1, "021558": 1, "17": [1, 8], "452849": 1, "45285": [1, 8], "group1": [2, 9], "group2": [2, 9], "nonbondedforc": 2, "strength": 2, "attract": 2, "between": [2, 4, 7, 9, 10, 13, 15, 17], "two": [2, 4, 9], "s_": 2, "rm": [2, 5, 6, 7, 8, 10, 13, 14, 15], "attr": 2, "g": [2, 3, 7, 9, 13], "_1": [2, 3, 4, 9], "substack": 2, "_2": [2, 3, 4, 9], "neq": [2, 9], "epsilon_": 2, "ij": 2, "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "4": [2, 6, 7, 8, 10, 13, 14, 19], "varepsilon_0": 2, "r_": [2, 7, 9, 13], "c": [2, 5, 6, 7, 8, 13, 17, 19], "elec": 2, "cutoff": [2, 9, 10], "permitt": 2, "empti": 2, "space": 2, "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": 2, "sqrt": [2, 3, 7, 10, 11, 13], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "reduc": 2, "potenti": [2, 10, 19], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": 2, "text": [2, 20], "provid": 2, "coulomb": [2, 19], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 17], "consid": [2, 7, 8, 9, 13], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "interact": 2, "make": [2, 9], "exclus": 2, "non": 2, "neg": 2, "Its": 2, "upper": 2, "bound": 2, "depend": 2, "chosen": 2, "well": 2, "switch": [2, 9], "taken": 2, "except": 2, "involv": 2, "turn": 2, "necessari": 2, "mole": 2, "normal": [2, 5, 6, 7, 8, 13, 17], "becom": 2, "hostguestexplicit": 2, "b2": 2, "els": 2, "extend": 2, "attraction_strength": 2, "normalized_attraction_strength": 2, "100": [2, 10], "femtosecond": [2, 10, 17], "4912": 2, "514": 2, "163946e": 2, "07": 2, "nm": [2, 3, 4, 10, 11, 12], "49": 2, "12514": 2, "centroid": [3, 10], "_n": 3, "customcentroidbondforc": 3, "n_i": [3, 13], "weight": 3, "total": [3, 7, 9, 10, 11, 12, 13], "list": [3, 7, 10, 11, 12, 13, 15], "center": [3, 7, 10, 11, 12, 13], "instead": [3, 9, 11, 12, 13, 17], "geometr": [3, 11, 12], "ha": [3, 9, 10], "append": 3, "whole": 3, "molecul": [3, 10, 17], "sum_dist_sq": 3, "join": 3, "radiu": [3, 11, 12], "gyrat": [3, 11, 12], "2951431": [3, 11], "73205": 4, "thetarefer": 5, "88": 5, "degre": [5, 8, 15], "toler": [5, 8], "halfexpon": [5, 6, 8], "alpha": [5, 6, 7, 8, 13], "helix": [5, 6, 7, 8, 17], "content": [5, 6, 7, 8, 13, 17], "alpha_": [5, 6, 7, 8], "b_m": [5, 6, 8], "alpha_i": 5, "theta_": [5, 8], "ref": [5, 7, 8, 10, 13], "tol": [5, 8], "carbon": [5, 6, 9], "threshold": [5, 6, 7, 8, 9, 13], "around": [5, 8], "smooth": [5, 6, 7, 8, 13], "boxcar": [5, 8], "2m": [5, 6, 8], "integ": [5, 6, 8, 13], "control": [5, 6, 8], "steep": [5, 6, 8], "note": [5, 8], "elev": [5, 8], "even": [5, 8], "power": [5, 8, 17], "contigu": [5, 6, 7, 8, 13], "singl": [5, 6, 7, 8, 13], "chain": [5, 6, 7, 8, 13], "order": [5, 6, 7, 8, 10, 13], "terminu": [5, 6, 7, 8, 13], "due": [5, 6, 8], "limit": [5, 6, 7, 8, 13], "maximum": [5, 6, 8], "37": [5, 6, 8], "real": [5, 6, 7, 8, 9, 13], "some": [5, 8], "ly": [5, 6, 7, 8, 13], "asp": [5, 6, 7, 8], "glu": [5, 6, 7, 8, 13], "il": [5, 6, 7, 8], "leu": [5, 6, 7, 8, 13], "18": [5, 15, 19], "76058": 5, "thresholddist": [6, 9], "33": 6, "hydrogen": 6, "bond": [6, 10], "hb": 6, "h": [6, 7, 9, 13], "o": [6, 7, 13], "d_": [6, 10, 13], "_k": [6, 7, 13], "oxygen": 6, "respect": [6, 8, 11, 12], "backbon": [6, 15], "nitrogen": 6, "addit": [6, 13], "step": [6, 7, 9, 10, 13], "88038": 6, "numatom": [7, 9, 10, 13], "thresholdrmsd": [7, 13], "08": [7, 13], "stepfunct": [7, 9, 13], "8": [7, 8, 13], "rmsd": [7, 13, 16, 18], "r_0": [7, 9, 13], "repres": [7, 13], "select": [7, 13, 15], "same": [7, 10, 13], "ideal": [7, 13], "configur": [7, 10, 13], "root": [7, 10, 13], "mean": [7, 10, 13], "squar": [7, 10, 12, 13], "whose": [7, 13], "everi": [7, 13], "beta": [7, 13, 19], "six": [7, 13], "involvend": [7, 13], "thu": [7, 13], "compris": [7, 13], "glycin": [7, 13], "miss": [7, 13], "replac": [7, 11, 12, 13], "hat": [7, 10, 13], "rel": [7, 10, 13], "geometri": [7, 10, 13], "rotat": [7, 10, 13], "matrix": [7, 10, 13], "minim": [7, 10, 13], "done": [7, 13], "divid": [7, 13], "n_": [7, 13], "wa": [7, 13], "introduc": [7, 13], "shown": [7, 13], "abov": [7, 13, 14], "ident": [7, 13], "one": [7, 13, 17], "paper": [7, 13], "written": [7, 13], "numer": [7, 13, 14], "safe": [7, 13], "alpharmsd": 7, "plume": [7, 13, 15], "v2": [7, 13], "present": [7, 13], "implement": [7, 13], "leq": [7, 13], "1024": [7, 13], "calcul": [7, 13, 19], "requir": [7, 9, 10, 13], "close": [7, 13, 17], "match": [7, 13], "itertool": [7, 13], "islic": [7, 13], "80": [7, 17], "getnumresidueblock": [7, 13], "16": 7, "981": 7, "phirefer": 8, "63": 8, "psirefer": 8, "41": [8, 13], "25": 8, "ramachandran": 8, "phi": [8, 15], "psi": 8, "phi_i": 8, "phi_": 8, "psi_i": 8, "psi_": 8, "dihedr": 8, "refenr": 8, "last": [8, 13], "penultim": 8, "cutofffactor": 9, "switchfactor": 9, "contact": 9, "equal": 9, "made": 9, "otherwis": [9, 10], "For": [9, 13], "trajectori": [9, 15, 17], "analysi": [9, 17], "fine": 9, "heavisid": 9, "molecular": [9, 19], "dynam": [9, 19], "howev": [9, 13], "continu": 9, "approxim": 9, "geq": 9, "By": 9, "follow": [9, 17], "12": 9, "fact": 9, "r_c": 9, "x_c": 9, "typic": 9, "appli": 9, "To": [9, 17], "avoid": 9, "discontinu": 9, "also": 9, "smoothli": 9, "off": 9, "x_": 9, "do": 9, "abruptli": 9, "allow": 9, "both": [9, 13], "self": 9, "ignor": 9, "pair": [9, 15], "distinct": [9, 10], "count": 9, "onc": 9, "thereof": 9, "being": 9, "float": 9, "factor": 9, "multipli": 9, "getnumatom": [9, 10], "nc": 9, "customintegr": 9, "referenceposit": 10, "minimum": [10, 13], "deviat": 10, "current": 10, "structur": [10, 19], "belong": 10, "call": [10, 15], "getnullbondforc": 10, "ad": [10, 17], "result": 10, "might": [10, 11, 12], "circumv": 10, "issu": 10, "ndarrai": 10, "len": 10, "appear": 10, "below": 10, "sort": 10, "accordingli": 10, "criterion": 10, "preced": 10, "over": [10, 12], "when": [10, 11, 12], "neither": 10, "nor": 10, "1231383": 10, "null": 10, "connect": 10, "graph": 10, "waterbox": 10, "box_edg": 10, "angstrom": 10, "104363": 10, "r_g": [11, 12], "_c": [11, 12], "_m": [11, 12], "lack": 11, "parallel": [11, 12, 13], "slow": 11, "larg": [11, 12], "radiusofgyrationsq": [11, 16, 18], "prefer": [11, 12], "better": 12, "than": 12, "rgsq": 12, "0871": 12, "blocksiz": 13, "sheet": [13, 19], "beta_": 13, "min": 13, "subset": 13, "protein": [13, 17, 19], "antiparallel": 13, "differ": [13, 17], "minimim": 13, "choos": 13, "partit": 13, "block": 13, "n_1": 13, "n_2": 13, "ldot": 13, "n_m": 13, "compos": 13, "consecut": 13, "definit": 13, "modifi": 13, "l_": 13, "l_k": 13, "separ": [13, 14], "n_k": 13, "antibetarmsd": 13, "parabetarmsd": 13, "assum": 13, "srcimplicit": 13, "thr": 13, "sheet_cont": 13, "300": 13, "011": 13, "blockwise_sheet_cont": 13, "11": 13, "9": [13, 19], "144": 13, "reiniti": 13, "preservest": 13, "8748": 13, "atom4": 14, "four": [14, 15, 17], "varphi": 14, "atan2": 14, "u": 14, "arctang": 14, "receiv": 14, "denomin": 14, "fourth": 14, "firstlist": 15, "secondlist": 15, "similar": 15, "torsion": [15, 16, 18], "co": 15, "big": 15, "1st": 15, "2nd": 15, "kth": 15, "dihcor": 15, "mdtraj": 15, "traj": 15, "from_openmm": 15, "phi_atom": 15, "compute_phi": 15, "valid_atom": 15, "top": 15, "resid": 15, "torsion_similar": 15, "65992": 15, "atomicfunct": [16, 18], "attractionstrength": [16, 18], "centroidfunct": [16, 18], "helixanglecont": [16, 17, 18], "helixhbondcont": [16, 17, 18], "helixrmsdcont": [16, 17, 18], "numberofcontact": [16, 18], "sheetrmsdcont": [16, 18], "torsionsimilar": [16, 18], "python": [17, 18, 20], "packag": 17, "pre": 17, "cv": 17, "possibl": 17, "includ": 17, "customcvforc": 17, "biasvari": 17, "metadynam": 17, "simul": 17, "collectivevari": 17, "uf": 17, "har": 17, "conda": 17, "environ": 17, "run": 17, "command": 17, "forg": 17, "mdtool": 17, "Or": 17, "mamba": 17, "your": 17, "script": 17, "jupyt": 17, "notebook": 17, "show": 17, "how": 17, "quantifi": 17, "modul": [17, 18], "t4": 17, "lysozym": 17, "l99a": 17, "longest": 17, "occur": 17, "lys60": 17, "arg80": 17, "final": 17, "seven": 17, "place": 17, "output": 17, "9873989": 17, "93414": 17, "9946999": 17, "918571": 17, "expect": 17, "matter": 17, "star": 18, "introduct": 18, "instal": 18, "usag": 18, "api": 18, "serial": 18, "deseri": [18, 20], "bibliographi": 18, "search": 18, "page": 18, "christoph": 19, "chipot": 19, "andrew": 19, "pohoril": 19, "editor": 19, "free": 19, "springer": 19, "berlin": 19, "heidelberg": 19, "2007": 19, "url": 19, "http": 19, "doi": 19, "org": 19, "1007": 19, "978": 19, "540": 19, "38448": 19, "gabriela": 19, "b": 19, "correa": 19, "\u00e9": 19, "ssica": 19, "l": 19, "maciel": 19, "frederico": 19, "w": 19, "tavar": 19, "charll": 19, "abreu": 19, "new": 19, "formul": 19, "concert": 19, "alchem": 19, "van": 19, "der": 19, "waal": 19, "compon": 19, "solvat": 19, "journal": 19, "chemic": 19, "theori": 19, "5876": 19, "5889": 19, "octob": 19, "2022": 19, "1021": 19, "ac": 19, "jctc": 19, "2c00563": 19, "fabio": 19, "pietrucci": 19, "alessandro": 19, "laio": 19, "explor": 19, "applic": 19, "sh": 19, "gb": 19, "2197": 19, "2201": 19, "aug": 19, "2009": 19, "ct900202f": 19, "sven": 19, "hovm\u00f6ller": 19, "tupe": 19, "zhou": 19, "toma": 19, "ohlson": 19, "conform": 19, "amino": 19, "acid": 19, "acta": 19, "crystallographica": 19, "section": 19, "biolog": 19, "crystallographi": 19, "58": 19, "768": 19, "776": 19, "apr": 19, "2002": 19, "1107": 19, "s0907444902003359": 19, "marcella": 19, "iannuzzi": 19, "michel": 19, "parrinello": 19, "reactiv": 19, "surfac": 19, "car": 19, "physic": 19, "review": 19, "letter": 19, "jun": 19, "2003": 19, "1103": 19, "physrevlett": 19, "90": 19, "238302": 19, "obj": 20, "iostream": 20, "io": 20, "stream": 20, "write": 20, "mode": 20, "stringio": 20, "read": 20, "seek": 20, "new_object": 20}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [3, 0, 1, "", "CentroidFunction"], [4, 0, 1, "", "Distance"], [5, 0, 1, "", "HelixAngleContent"], [6, 0, 1, "", "HelixHBondContent"], [7, 0, 1, "", "HelixRMSDContent"], [8, 0, 1, "", "HelixTorsionContent"], [9, 0, 1, "", "NumberOfContacts"], [10, 0, 1, "", "RMSD"], [11, 0, 1, "", "RadiusOfGyration"], [12, 0, 1, "", "RadiusOfGyrationSq"], [13, 0, 1, "", "SheetRMSDContent"], [14, 0, 1, "", "Torsion"], [15, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "getArguments"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"], [0, 1, 1, "", "setUnit"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getArguments"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"], [1, 1, 1, "", "setUnit"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "getArguments"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"], [2, 1, 1, "", "setUnit"]], "cvpack.CentroidFunction": [[3, 1, 1, "", "getArguments"], [3, 1, 1, "", "getEffectiveMass"], [3, 1, 1, "", "getUnit"], [3, 1, 1, "", "getValue"], [3, 1, 1, "", "setUnit"]], "cvpack.Distance": [[4, 1, 1, "", "getArguments"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"], [4, 1, 1, "", "setUnit"]], "cvpack.HelixAngleContent": [[5, 1, 1, "", "getArguments"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"], [5, 1, 1, "", "setUnit"]], "cvpack.HelixHBondContent": [[6, 1, 1, "", "getArguments"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"], [6, 1, 1, "", "setUnit"]], "cvpack.HelixRMSDContent": [[7, 1, 1, "", "getArguments"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"], [7, 1, 1, "", "setUnit"]], "cvpack.HelixTorsionContent": [[8, 1, 1, "", "getArguments"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"], [8, 1, 1, "", "setUnit"]], "cvpack.NumberOfContacts": [[9, 1, 1, "", "getArguments"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"], [9, 1, 1, "", "setUnit"]], "cvpack.RMSD": [[10, 1, 1, "", "getArguments"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getNullBondForce"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"], [10, 1, 1, "", "setUnit"]], "cvpack.RadiusOfGyration": [[11, 1, 1, "", "getArguments"], [11, 1, 1, "", "getEffectiveMass"], [11, 1, 1, "", "getUnit"], [11, 1, 1, "", "getValue"], [11, 1, 1, "", "setUnit"]], "cvpack.RadiusOfGyrationSq": [[12, 1, 1, "", "getArguments"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"], [12, 1, 1, "", "setUnit"]], "cvpack.SheetRMSDContent": [[13, 1, 1, "", "getArguments"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"], [13, 1, 1, "", "setUnit"]], "cvpack.Torsion": [[14, 1, 1, "", "getArguments"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"], [14, 1, 1, "", "setUnit"]], "cvpack.TorsionSimilarity": [[15, 1, 1, "", "getArguments"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"], [15, 1, 1, "", "setUnit"]], "cvpack.serializer": [[20, 2, 1, "", "deserialize"], [20, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "centroidfunct": 3, "distanc": 4, "helixanglecont": 5, "helixhbondcont": 6, "helixrmsdcont": 7, "helixtorsioncont": 8, "numberofcontact": 9, "rmsd": 10, "radiusofgyr": 11, "radiusofgyrationsq": 12, "sheetrmsdcont": 13, "torsion": 14, "torsionsimilar": 15, "python": 16, "api": 16, "get": 17, "start": 17, "introduct": 17, "instal": 17, "usag": 17, "exampl": 17, "collect": 18, "variabl": 18, "packag": 18, "content": 18, "indic": 18, "tabl": 18, "bibliographi": 19, "serial": 20}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CentroidFunction": [[3, "centroidfunction"]], "Distance": [[4, "distance"]], "HelixAngleContent": [[5, "helixanglecontent"]], "HelixHBondContent": [[6, "helixhbondcontent"]], "HelixRMSDContent": [[7, "helixrmsdcontent"]], "HelixTorsionContent": [[8, "helixtorsioncontent"]], "NumberOfContacts": [[9, "numberofcontacts"]], "RMSD": [[10, "rmsd"]], "RadiusOfGyration": [[11, "radiusofgyration"]], "RadiusOfGyrationSq": [[12, "radiusofgyrationsq"]], "SheetRMSDContent": [[13, "sheetrmsdcontent"]], "Torsion": [[14, "torsion"]], "TorsionSimilarity": [[15, "torsionsimilarity"]], "Python API": [[16, "python-api"]], "Getting Started": [[17, "getting-started"]], "Introduction": [[17, "introduction"]], "Installation": [[17, "installation"]], "Usage": [[17, "usage"]], "Example": [[17, "example"]], "Collective Variable Package": [[18, "collective-variable-package"]], "Contents": [[18, "contents"]], "Indices and tables": [[18, "indices-and-tables"]], "Bibliography": [[19, "bibliography"]], "Serialization": [[20, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "getarguments() (cvpack.angle class method)": [[0, "cvpack.Angle.getArguments"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "setunit() (cvpack.angle method)": [[0, "cvpack.Angle.setUnit"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "getarguments() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.getArguments"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "setunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.setUnit"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "getarguments() (cvpack.attractionstrength class method)": [[2, "cvpack.AttractionStrength.getArguments"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "setunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.setUnit"]], "centroidfunction (class in cvpack)": [[3, "cvpack.CentroidFunction"]], "getarguments() (cvpack.centroidfunction class method)": [[3, "cvpack.CentroidFunction.getArguments"]], "geteffectivemass() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getEffectiveMass"]], "getunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getValue"]], "setunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.setUnit"]], "distance (class in cvpack)": [[4, "cvpack.Distance"]], "getarguments() (cvpack.distance class method)": [[4, "cvpack.Distance.getArguments"]], "geteffectivemass() (cvpack.distance method)": [[4, "cvpack.Distance.getEffectiveMass"]], "getunit() (cvpack.distance method)": [[4, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[4, "cvpack.Distance.getValue"]], "setunit() (cvpack.distance method)": [[4, "cvpack.Distance.setUnit"]], "helixanglecontent (class in cvpack)": [[5, "cvpack.HelixAngleContent"]], "getarguments() (cvpack.helixanglecontent class method)": [[5, "cvpack.HelixAngleContent.getArguments"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.getEffectiveMass"]], "getunit() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.getValue"]], "setunit() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.setUnit"]], "helixhbondcontent (class in cvpack)": [[6, "cvpack.HelixHBondContent"]], "getarguments() (cvpack.helixhbondcontent class method)": [[6, "cvpack.HelixHBondContent.getArguments"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.getEffectiveMass"]], "getunit() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.getValue"]], "setunit() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.setUnit"]], "helixrmsdcontent (class in cvpack)": [[7, "cvpack.HelixRMSDContent"]], "getarguments() (cvpack.helixrmsdcontent class method)": [[7, "cvpack.HelixRMSDContent.getArguments"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getunit() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.getValue"]], "setunit() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.setUnit"]], "helixtorsioncontent (class in cvpack)": [[8, "cvpack.HelixTorsionContent"]], "getarguments() (cvpack.helixtorsioncontent class method)": [[8, "cvpack.HelixTorsionContent.getArguments"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getunit() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.getValue"]], "setunit() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.setUnit"]], "numberofcontacts (class in cvpack)": [[9, "cvpack.NumberOfContacts"]], "getarguments() (cvpack.numberofcontacts class method)": [[9, "cvpack.NumberOfContacts.getArguments"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.getEffectiveMass"]], "getunit() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.getValue"]], "setunit() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.setUnit"]], "rmsd (class in cvpack)": [[10, "cvpack.RMSD"]], "getarguments() (cvpack.rmsd class method)": [[10, "cvpack.RMSD.getArguments"]], "geteffectivemass() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getEffectiveMass"]], "getnullbondforce() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getNullBondForce"]], "getunit() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getValue"]], "setunit() (cvpack.rmsd method)": [[10, "cvpack.RMSD.setUnit"]], "radiusofgyration (class in cvpack)": [[11, "cvpack.RadiusOfGyration"]], "getarguments() (cvpack.radiusofgyration class method)": [[11, "cvpack.RadiusOfGyration.getArguments"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getunit() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.getValue"]], "setunit() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.setUnit"]], "radiusofgyrationsq (class in cvpack)": [[12, "cvpack.RadiusOfGyrationSq"]], "getarguments() (cvpack.radiusofgyrationsq class method)": [[12, "cvpack.RadiusOfGyrationSq.getArguments"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getunit() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.getValue"]], "setunit() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.setUnit"]], "sheetrmsdcontent (class in cvpack)": [[13, "cvpack.SheetRMSDContent"]], "getarguments() (cvpack.sheetrmsdcontent class method)": [[13, "cvpack.SheetRMSDContent.getArguments"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[13, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getunit() (cvpack.sheetrmsdcontent method)": [[13, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[13, "cvpack.SheetRMSDContent.getValue"]], "setunit() (cvpack.sheetrmsdcontent method)": [[13, "cvpack.SheetRMSDContent.setUnit"]], "torsion (class in cvpack)": [[14, "cvpack.Torsion"]], "getarguments() (cvpack.torsion class method)": [[14, "cvpack.Torsion.getArguments"]], "geteffectivemass() (cvpack.torsion method)": [[14, "cvpack.Torsion.getEffectiveMass"]], "getunit() (cvpack.torsion method)": [[14, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[14, "cvpack.Torsion.getValue"]], "setunit() (cvpack.torsion method)": [[14, "cvpack.Torsion.setUnit"]], "torsionsimilarity (class in cvpack)": [[15, "cvpack.TorsionSimilarity"]], "getarguments() (cvpack.torsionsimilarity class method)": [[15, "cvpack.TorsionSimilarity.getArguments"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[15, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getunit() (cvpack.torsionsimilarity method)": [[15, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[15, "cvpack.TorsionSimilarity.getValue"]], "setunit() (cvpack.torsionsimilarity method)": [[15, "cvpack.TorsionSimilarity.setUnit"]], "deserialize() (in module cvpack.serializer)": [[20, "cvpack.serializer.deserialize"]], "serialize() (in module cvpack.serializer)": [[20, "cvpack.serializer.serialize"]]}})