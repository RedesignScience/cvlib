Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CentroidFunction", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/NumberOfContacts", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/ResidueCoordination", "api/SheetRMSDContent", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CentroidFunction.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/NumberOfContacts.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/ResidueCoordination.rst", "api/SheetRMSDContent.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CentroidFunction", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "NumberOfContacts", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "ResidueCoordination", "SheetRMSDContent", "Torsion", "TorsionSimilarity", "Python API", "Getting Started", "Collective Variable Package", "Bibliography", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "atom1": [0, 4, 15], "atom2": [0, 4, 15], "atom3": [0, 15], "pbc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "form": [0, 5, 7, 14, 15], "three": [0, 14], "atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "theta": [0, 5], "bf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "mathrm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "aco": 0, "left": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "frac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "_": [0, 1, 3, 5, 6, 7, 14, 15, 16], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21], "cdot": [0, 15], "3": [0, 1, 2, 5, 6, 7, 8, 9, 10, 14, 15, 20], "right": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "where": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "j": [0, 1, 2, 3, 7, 9, 11, 12, 13, 14, 15, 20], "_j": [0, 2, 7, 9, 11, 12, 13, 15], "_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19], "first": [0, 1, 2, 4, 8, 9, 10, 13, 15, 16], "second": [0, 1, 2, 4, 8, 9, 10, 13, 15, 16], "third": [0, 15], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "whether": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20], "period": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16], "boundari": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16], "condit": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "addparticl": [0, 1, 4, 15], "rang": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "addforc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "integr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18], "verletintegr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "platform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "getplatformbynam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "vec3": [0, 4, 10, 15], "po": [0, 15], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "digit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "570796": [0, 15], "rad": [0, 15], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "classmethod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "getargu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "inspect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "construct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "instanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21], "dictionari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "annot": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "tupl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "ordereddict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "radiusofgyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 21], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "item": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "f": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "weighbymass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "geteffectivemass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "q": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "defin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "m_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "sum_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "m_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "dq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "round": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "precis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "after": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "decim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "scientif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "effici": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "onli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "forc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "should": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "evalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "alaninedipeptideimplicit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "peptid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "topologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "residu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "hoh": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "radius_of_gyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21], "setforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "30": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "94693": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "getunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "measur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "setunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "atomspergroup": 1, "function": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 15], "indic": [1, 3, 9, 11, 12, 16], "gener": [1, 3], "coordin": [1, 10, 14], "m": [1, 5, 6, 8, 11, 12, 14], "dot": [1, 3], "user": [1, 3], "th": [1, 3, 7, 10, 14, 16], "string": [1, 3], "ani": [1, 2, 3, 10, 14, 21], "express": [1, 3], "support": [1, 5, 6, 8, 10], "customcompoundbondforc": 1, "contain": [1, 5, 8, 21], "thei": [1, 8, 10], "must": [1, 3, 5, 6, 7, 8, 10, 14], "pass": 1, "keyword": [1, 3], "constructor": 1, "scalar": 1, "arrai": 1, "length": 1, "In": [1, 3, 6, 7, 9, 11, 12, 14, 16], "latter": 1, "case": [1, 3, 7, 9, 11, 12, 14, 18], "each": [1, 3, 9, 13, 14, 16], "assign": 1, "correspond": [1, 2, 7, 14], "str": [1, 3, 7, 9, 13, 14], "It": [1, 3, 10], "valid": [1, 3], "2d": 1, "like": [1, 2], "object": [1, 2, 21], "shape": 1, "per": [1, 2], "1d": 1, "element": [1, 9], "ar": [1, 2, 6, 8, 9, 10, 13, 14, 18], "next": [1, 14], "so": [1, 9], "mmunit": [1, 2, 16], "compat": [1, 3], "md": [1, 3], "dalton": [1, 3], "distanc": [1, 2, 3, 6, 7, 9, 13, 14, 17, 19], "nanomet": [1, 3, 6, 7, 9, 13, 14], "time": [1, 3, 15], "picosecond": [1, 3], "temperatur": [1, 3], "kelvin": [1, 3], "energi": [1, 2, 3, 20], "kilojoules_per_mol": [1, 2, 3], "angl": [1, 3, 5, 8, 15, 16, 17, 19], "radian": [1, 3], "doe": [1, 3, 5, 8], "have": [1, 3], "dimensionless": [1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 18], "quantiti": [1, 2, 5, 6, 7, 8, 9, 10, 13, 14], "entri": 1, "rais": [1, 3, 5, 8, 10, 13], "valueerror": [1, 3, 5, 8, 10, 13], "numpi": 1, "np": 1, "alaninedipeptidevacuum": [1, 3, 9, 11, 12], "angle1": 1, "5": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 20], "10": [1, 10, 14, 20], "angle2": 1, "15": [1, 5, 6, 7], "20": 1, "colvar": [1, 3], "k": [1, 6, 7, 14, 16], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 10], "pi": [1, 2], "7": [1, 2, 10, 14, 18], "theta1": 1, "value_in_unit": 1, "theta2": 1, "500": 1, "429": 1, "479": 1, "kj": 1, "mol": 1, "fromopenmmforc": 1, "creat": [1, 10, 18], "convert": [1, 3], "typeerror": 1, "app": [1, 5, 6, 7, 8, 9, 10, 13, 14, 18], "lysozymeimplicit": [1, 5, 6, 7, 8, 13, 16, 18], "59": [1, 5, 6, 7, 8, 16, 18], "79": [1, 5, 6, 8, 16], "helix_cont": [1, 5, 6, 7, 8, 18], "helixtorsioncont": [1, 17, 18, 19], "num_atom": [1, 3, 9, 10, 11, 12, 18], "getnumparticl": [1, 3, 7, 11, 12, 14, 18], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 5, 6, 7, 8, 9, 13, 14], "addglobalparamet": 1, "getnam": [1, 2, 18], "getforc": [1, 2], "copi": 1, "harmonicbondforc": 1, "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": 1, "start": [1, 9, 19], "state": 1, "getstat": 1, "getenergi": 1, "true": [1, 2, 13, 14, 18], "getpotentialenergi": 1, "copy_valu": 1, "origin": [1, 7, 14], "6f": 1, "2094": 1, "312483": 1, "312": 1, "3239": 1, "795215": 1, "795": 1, "4226": 1, "051934": 1, "052": 1, "021558": 1, "17": [1, 8], "452849": 1, "45285": [1, 8], "group1": [2, 9, 13], "group2": [2, 9, 13], "nonbondedforc": 2, "kilojoul": 2, "mole": 2, "strength": 2, "attract": 2, "between": [2, 4, 7, 9, 10, 13, 14, 16, 18], "two": [2, 4, 9, 13], "s_": 2, "rm": [2, 5, 6, 7, 8, 10, 14, 15, 16], "attr": 2, "e_": 2, "ref": [2, 5, 7, 8, 10, 14], "bigg": 2, "g": [2, 3, 7, 9, 13, 14], "_1": [2, 3, 4, 9, 13], "substack": 2, "_2": [2, 3, 4, 9, 13], "neq": [2, 9], "epsilon_": 2, "ij": 2, "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "4": [2, 6, 7, 8, 10, 14, 15, 20], "varepsilon_0": 2, "r_": [2, 7, 9, 14], "c": [2, 5, 6, 7, 8, 14, 18, 20], "elec": 2, "cutoff": [2, 9, 10], "permitt": 2, "empti": 2, "space": 2, "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": 2, "sqrt": [2, 3, 7, 10, 11, 14], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "reduc": 2, "potenti": [2, 10, 20], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": 2, "text": [2, 21], "provid": 2, "coulomb": [2, 20], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 18], "consid": [2, 7, 8, 9, 13, 14], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "interact": 2, "give": 2, "lower": 2, "bound": 2, "zero": 2, "upper": 2, "depend": 2, "detail": 2, "chosen": 2, "adopt": 2, "well": 2, "switch": [2, 9], "taken": 2, "non": 2, "exclus": 2, "except": 2, "involv": 2, "turn": 2, "necessari": 2, "real": [2, 5, 6, 7, 8, 9, 13, 14], "normal": [2, 5, 6, 7, 8, 13, 14, 18], "One": 2, "also": [2, 9], "obtain": 2, "hostguestexplicit": 2, "b2": 2, "els": 2, "extend": 2, "cv1": 2, "cv2": 2, "100": [2, 10], "femtosecond": [2, 10, 18], "4912": 2, "1639e": 2, "07": 2, "nm": [2, 3, 4, 10, 11, 12], "49": 2, "125": [2, 13], "0021639": 2, "cv3": 2, "reiniti": [2, 14], "preservest": [2, 14], "2222": 2, "centroid": [3, 10, 13], "_n": 3, "customcentroidbondforc": 3, "n_i": [3, 14], "weight": [3, 13], "total": [3, 7, 9, 10, 11, 12, 13, 14], "list": [3, 7, 10, 11, 12, 13, 14, 16], "center": [3, 7, 10, 11, 12, 14], "instead": [3, 9, 11, 12, 14, 18], "geometr": [3, 11, 12], "ha": [3, 9, 10, 13], "append": 3, "whole": 3, "molecul": [3, 10, 18], "sum_dist_sq": 3, "join": 3, "radiu": [3, 11, 12], "gyrat": [3, 11, 12], "2951431": [3, 11], "73205": 4, "thetarefer": 5, "88": 5, "degre": [5, 8, 16], "toler": [5, 8], "halfexpon": [5, 6, 8], "alpha": [5, 6, 7, 8, 14], "helix": [5, 6, 7, 8, 18], "content": [5, 6, 7, 8, 14, 18], "alpha_": [5, 6, 7, 8], "b_m": [5, 6, 8], "alpha_i": 5, "theta_": [5, 8], "tol": [5, 8], "carbon": [5, 6, 9], "threshold": [5, 6, 7, 8, 9, 13, 14], "around": [5, 8], "smooth": [5, 6, 7, 8, 14], "boxcar": [5, 8], "2m": [5, 6, 8], "integ": [5, 6, 8, 14], "control": [5, 6, 8], "steep": [5, 6, 8], "note": [5, 8], "elev": [5, 8], "even": [5, 8], "power": [5, 8, 18], "contigu": [5, 6, 7, 8, 14], "singl": [5, 6, 7, 8, 14], "chain": [5, 6, 7, 8, 14], "order": [5, 6, 7, 8, 10, 14], "terminu": [5, 6, 7, 8, 14], "due": [5, 6, 8], "limit": [5, 6, 7, 8, 14], "maximum": [5, 6, 8], "37": [5, 6, 8], "some": [5, 8], "ly": [5, 6, 7, 8, 14], "asp": [5, 6, 7, 8, 13], "glu": [5, 6, 7, 8, 13, 14], "il": [5, 6, 7, 8], "leu": [5, 6, 7, 8, 14], "18": [5, 16, 20], "76058": 5, "thresholddist": [6, 9, 13], "33": 6, "hydrogen": 6, "bond": [6, 10], "hb": 6, "h": [6, 7, 9, 13, 14], "o": [6, 7, 14], "d_": [6, 10, 14], "_k": [6, 7, 14], "oxygen": 6, "respect": [6, 8, 11, 12], "backbon": [6, 16], "nitrogen": 6, "addit": [6, 14], "step": [6, 7, 9, 10, 13, 14], "88038": 6, "numatom": [7, 9, 10, 14], "thresholdrmsd": [7, 14], "08": [7, 14], "stepfunct": [7, 9, 13, 14], "8": [7, 8, 14], "rmsd": [7, 14, 17, 19], "r_0": [7, 9, 13, 14], "repres": [7, 14], "select": [7, 14, 16], "same": [7, 10, 14], "ideal": [7, 14], "configur": [7, 10, 14], "root": [7, 10, 14], "mean": [7, 10, 14], "squar": [7, 10, 12, 14], "whose": [7, 14], "everi": [7, 14], "beta": [7, 14, 20], "six": [7, 14], "involvend": [7, 14], "thu": [7, 14], "compris": [7, 14], "glycin": [7, 14], "miss": [7, 14], "replac": [7, 11, 12, 14], "hat": [7, 10, 14], "rel": [7, 10, 14], "geometri": [7, 10, 14], "rotat": [7, 10, 14], "matrix": [7, 10, 14], "minim": [7, 10, 14], "done": [7, 14], "divid": [7, 14], "n_": [7, 14], "wa": [7, 14], "introduc": [7, 14], "shown": [7, 14], "abov": [7, 14, 15], "ident": [7, 14], "one": [7, 14, 18], "paper": [7, 14], "written": [7, 14], "numer": [7, 14, 15], "safe": [7, 14], "alpharmsd": 7, "plume": [7, 14, 16], "v2": [7, 14], "present": [7, 14], "implement": [7, 14], "leq": [7, 14], "1024": [7, 14], "calcul": [7, 14, 20], "requir": [7, 9, 10, 14], "close": [7, 14, 18], "match": [7, 14], "itertool": [7, 13, 14], "islic": [7, 13, 14], "80": [7, 18], "getnumresidueblock": [7, 14], "16": 7, "981": 7, "phirefer": 8, "63": 8, "psirefer": 8, "41": [8, 14], "25": 8, "ramachandran": 8, "phi": [8, 16], "psi": 8, "phi_i": 8, "phi_": 8, "psi_i": 8, "psi_": 8, "dihedr": 8, "refenr": 8, "last": [8, 14], "penultim": 8, "cutofffactor": 9, "switchfactor": 9, "contact": [9, 13], "equal": [9, 13], "made": [9, 13], "otherwis": [9, 10, 13], "For": [9, 13, 14], "trajectori": [9, 13, 16, 18], "analysi": [9, 13, 18], "fine": [9, 13], "make": [9, 13], "heavisid": [9, 13], "molecular": [9, 13, 20], "dynam": [9, 13, 20], "howev": [9, 13, 14], "continu": [9, 13], "approxim": [9, 13], "geq": [9, 13], "By": [9, 13], "follow": [9, 13, 18], "12": [9, 13], "fact": 9, "r_c": 9, "x_c": 9, "typic": 9, "appli": 9, "To": [9, 18], "avoid": 9, "discontinu": 9, "smoothli": 9, "off": 9, "x_": 9, "do": 9, "abruptli": 9, "allow": 9, "both": [9, 14], "self": 9, "ignor": 9, "pair": [9, 16], "distinct": [9, 10], "count": 9, "onc": 9, "thereof": [9, 13], "being": [9, 13], "float": 9, "factor": 9, "multipli": 9, "getnumatom": [9, 10], "nc": 9, "customintegr": [9, 13], "referenceposit": 10, "minimum": [10, 14], "deviat": 10, "current": 10, "structur": [10, 20], "belong": 10, "call": [10, 16], "getnullbondforc": 10, "ad": [10, 18], "result": 10, "might": [10, 11, 12], "circumv": 10, "issu": 10, "ndarrai": 10, "len": 10, "appear": 10, "below": 10, "sort": 10, "accordingli": 10, "criterion": 10, "preced": 10, "over": [10, 12], "when": [10, 11, 12], "neither": 10, "nor": 10, "1231383": 10, "null": 10, "connect": 10, "graph": 10, "waterbox": 10, "box_edg": 10, "angstrom": 10, "104363": 10, "r_g": [11, 12], "_c": [11, 12], "_m": [11, 12], "lack": 11, "parallel": [11, 12, 14], "slow": 11, "larg": [11, 12], "radiusofgyrationsq": [11, 17, 19], "prefer": [11, 12], "better": 12, "than": 12, "rgsq": 12, "0871": 12, "residuegroup1": 13, "residuegroup2": 13, "disjoint": 13, "possibl": [13, 18], "142": 13, "trp": 13, "asn": 13, "gln": 13, "thr": [13, 14], "156": 13, "pro": 13, "gly": 13, "residue_coordin": 13, "26": 13, "blocksiz": 14, "sheet": [14, 20], "beta_": 14, "min": 14, "subset": 14, "protein": [14, 18, 20], "antiparallel": 14, "differ": [14, 18], "minimim": 14, "choos": 14, "partit": 14, "block": 14, "n_1": 14, "n_2": 14, "ldot": 14, "n_m": 14, "compos": 14, "consecut": 14, "definit": 14, "modifi": 14, "l_": 14, "l_k": 14, "separ": [14, 15], "n_k": 14, "antibetarmsd": 14, "parabetarmsd": 14, "assum": 14, "srcimplicit": 14, "sheet_cont": 14, "300": 14, "011": 14, "blockwise_sheet_cont": 14, "11": 14, "9": [14, 20], "144": 14, "8748": 14, "atom4": 15, "four": [15, 16, 18], "varphi": 15, "atan2": 15, "u": 15, "arctang": 15, "receiv": 15, "denomin": 15, "fourth": 15, "firstlist": 16, "secondlist": 16, "similar": 16, "torsion": [16, 17, 19], "co": 16, "big": 16, "1st": 16, "2nd": 16, "kth": 16, "dihcor": 16, "mdtraj": 16, "traj": 16, "from_openmm": 16, "phi_atom": 16, "compute_phi": 16, "valid_atom": 16, "top": 16, "resid": 16, "torsion_similar": 16, "65992": 16, "atomicfunct": [17, 19], "attractionstrength": [17, 19], "centroidfunct": [17, 19], "helixanglecont": [17, 18, 19], "helixhbondcont": [17, 18, 19], "helixrmsdcont": [17, 18, 19], "numberofcontact": [17, 19], "residuecoordin": [17, 19], "sheetrmsdcont": [17, 19], "torsionsimilar": [17, 19], "python": [18, 19, 21], "packag": 18, "pre": 18, "cv": 18, "includ": 18, "customcvforc": 18, "biasvari": 18, "metadynam": 18, "simul": 18, "collectivevari": 18, "uf": 18, "har": 18, "conda": 18, "environ": 18, "run": 18, "command": 18, "forg": 18, "mdtool": 18, "Or": 18, "mamba": 18, "your": 18, "script": 18, "jupyt": 18, "notebook": 18, "show": 18, "how": 18, "quantifi": 18, "modul": [18, 19], "t4": 18, "lysozym": 18, "l99a": 18, "longest": 18, "occur": 18, "lys60": 18, "arg80": 18, "final": 18, "seven": 18, "place": 18, "output": 18, "9873989": 18, "93414": 18, "9946999": 18, "918571": 18, "expect": 18, "matter": 18, "star": 19, "introduct": 19, "instal": 19, "usag": 19, "api": 19, "serial": 19, "deseri": [19, 21], "bibliographi": 19, "search": 19, "page": 19, "christoph": 20, "chipot": 20, "andrew": 20, "pohoril": 20, "editor": 20, "free": 20, "springer": 20, "berlin": 20, "heidelberg": 20, "2007": 20, "url": 20, "http": 20, "doi": 20, "org": 20, "1007": 20, "978": 20, "540": 20, "38448": 20, "gabriela": 20, "b": 20, "correa": 20, "\u00e9": 20, "ssica": 20, "l": 20, "maciel": 20, "frederico": 20, "w": 20, "tavar": 20, "charll": 20, "abreu": 20, "new": 20, "formul": 20, "concert": 20, "alchem": 20, "van": 20, "der": 20, "waal": 20, "compon": 20, "solvat": 20, "journal": 20, "chemic": 20, "theori": 20, "5876": 20, "5889": 20, "octob": 20, "2022": 20, "1021": 20, "ac": 20, "jctc": 20, "2c00563": 20, "fabio": 20, "pietrucci": 20, "alessandro": 20, "laio": 20, "explor": 20, "applic": 20, "sh": 20, "gb": 20, "2197": 20, "2201": 20, "aug": 20, "2009": 20, "ct900202f": 20, "sven": 20, "hovm\u00f6ller": 20, "tupe": 20, "zhou": 20, "toma": 20, "ohlson": 20, "conform": 20, "amino": 20, "acid": 20, "acta": 20, "crystallographica": 20, "section": 20, "biolog": 20, "crystallographi": 20, "58": 20, "768": 20, "776": 20, "apr": 20, "2002": 20, "1107": 20, "s0907444902003359": 20, "marcella": 20, "iannuzzi": 20, "michel": 20, "parrinello": 20, "reactiv": 20, "surfac": 20, "car": 20, "physic": 20, "review": 20, "letter": 20, "jun": 20, "2003": 20, "1103": 20, "physrevlett": 20, "90": 20, "238302": 20, "obj": 21, "iostream": 21, "io": 21, "stream": 21, "write": 21, "mode": 21, "stringio": 21, "read": 21, "seek": 21, "new_object": 21}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [3, 0, 1, "", "CentroidFunction"], [4, 0, 1, "", "Distance"], [5, 0, 1, "", "HelixAngleContent"], [6, 0, 1, "", "HelixHBondContent"], [7, 0, 1, "", "HelixRMSDContent"], [8, 0, 1, "", "HelixTorsionContent"], [9, 0, 1, "", "NumberOfContacts"], [10, 0, 1, "", "RMSD"], [11, 0, 1, "", "RadiusOfGyration"], [12, 0, 1, "", "RadiusOfGyrationSq"], [13, 0, 1, "", "ResidueCoordination"], [14, 0, 1, "", "SheetRMSDContent"], [15, 0, 1, "", "Torsion"], [16, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "getArguments"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"], [0, 1, 1, "", "setUnit"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getArguments"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"], [1, 1, 1, "", "setUnit"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "getArguments"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"], [2, 1, 1, "", "setUnit"]], "cvpack.CentroidFunction": [[3, 1, 1, "", "getArguments"], [3, 1, 1, "", "getEffectiveMass"], [3, 1, 1, "", "getUnit"], [3, 1, 1, "", "getValue"], [3, 1, 1, "", "setUnit"]], "cvpack.Distance": [[4, 1, 1, "", "getArguments"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"], [4, 1, 1, "", "setUnit"]], "cvpack.HelixAngleContent": [[5, 1, 1, "", "getArguments"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"], [5, 1, 1, "", "setUnit"]], "cvpack.HelixHBondContent": [[6, 1, 1, "", "getArguments"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"], [6, 1, 1, "", "setUnit"]], "cvpack.HelixRMSDContent": [[7, 1, 1, "", "getArguments"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"], [7, 1, 1, "", "setUnit"]], "cvpack.HelixTorsionContent": [[8, 1, 1, "", "getArguments"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"], [8, 1, 1, "", "setUnit"]], "cvpack.NumberOfContacts": [[9, 1, 1, "", "getArguments"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"], [9, 1, 1, "", "setUnit"]], "cvpack.RMSD": [[10, 1, 1, "", "getArguments"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getNullBondForce"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"], [10, 1, 1, "", "setUnit"]], "cvpack.RadiusOfGyration": [[11, 1, 1, "", "getArguments"], [11, 1, 1, "", "getEffectiveMass"], [11, 1, 1, "", "getUnit"], [11, 1, 1, "", "getValue"], [11, 1, 1, "", "setUnit"]], "cvpack.RadiusOfGyrationSq": [[12, 1, 1, "", "getArguments"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"], [12, 1, 1, "", "setUnit"]], "cvpack.ResidueCoordination": [[13, 1, 1, "", "getArguments"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"], [13, 1, 1, "", "setUnit"]], "cvpack.SheetRMSDContent": [[14, 1, 1, "", "getArguments"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"], [14, 1, 1, "", "setUnit"]], "cvpack.Torsion": [[15, 1, 1, "", "getArguments"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"], [15, 1, 1, "", "setUnit"]], "cvpack.TorsionSimilarity": [[16, 1, 1, "", "getArguments"], [16, 1, 1, "", "getEffectiveMass"], [16, 1, 1, "", "getUnit"], [16, 1, 1, "", "getValue"], [16, 1, 1, "", "setUnit"]], "cvpack.serializer": [[21, 2, 1, "", "deserialize"], [21, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "centroidfunct": 3, "distanc": 4, "helixanglecont": 5, "helixhbondcont": 6, "helixrmsdcont": 7, "helixtorsioncont": 8, "numberofcontact": 9, "rmsd": 10, "radiusofgyr": 11, "radiusofgyrationsq": 12, "residuecoordin": 13, "sheetrmsdcont": 14, "torsion": 15, "torsionsimilar": 16, "python": 17, "api": 17, "get": 18, "start": 18, "introduct": 18, "instal": 18, "usag": 18, "exampl": 18, "collect": 19, "variabl": 19, "packag": 19, "content": 19, "indic": 19, "tabl": 19, "bibliographi": 20, "serial": 21}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CentroidFunction": [[3, "centroidfunction"]], "Distance": [[4, "distance"]], "HelixAngleContent": [[5, "helixanglecontent"]], "HelixHBondContent": [[6, "helixhbondcontent"]], "HelixRMSDContent": [[7, "helixrmsdcontent"]], "HelixTorsionContent": [[8, "helixtorsioncontent"]], "NumberOfContacts": [[9, "numberofcontacts"]], "RMSD": [[10, "rmsd"]], "RadiusOfGyration": [[11, "radiusofgyration"]], "RadiusOfGyrationSq": [[12, "radiusofgyrationsq"]], "ResidueCoordination": [[13, "residuecoordination"]], "SheetRMSDContent": [[14, "sheetrmsdcontent"]], "Torsion": [[15, "torsion"]], "TorsionSimilarity": [[16, "torsionsimilarity"]], "Python API": [[17, "python-api"]], "Getting Started": [[18, "getting-started"]], "Introduction": [[18, "introduction"]], "Installation": [[18, "installation"]], "Usage": [[18, "usage"]], "Example": [[18, "example"]], "Collective Variable Package": [[19, "collective-variable-package"]], "Contents": [[19, "contents"]], "Indices and tables": [[19, "indices-and-tables"]], "Bibliography": [[20, "bibliography"]], "Serialization": [[21, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "getarguments() (cvpack.angle class method)": [[0, "cvpack.Angle.getArguments"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "setunit() (cvpack.angle method)": [[0, "cvpack.Angle.setUnit"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "getarguments() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.getArguments"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "setunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.setUnit"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "getarguments() (cvpack.attractionstrength class method)": [[2, "cvpack.AttractionStrength.getArguments"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "setunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.setUnit"]], "centroidfunction (class in cvpack)": [[3, "cvpack.CentroidFunction"]], "getarguments() (cvpack.centroidfunction class method)": [[3, "cvpack.CentroidFunction.getArguments"]], "geteffectivemass() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getEffectiveMass"]], "getunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getValue"]], "setunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.setUnit"]], "distance (class in cvpack)": [[4, "cvpack.Distance"]], "getarguments() (cvpack.distance class method)": [[4, "cvpack.Distance.getArguments"]], "geteffectivemass() (cvpack.distance method)": [[4, "cvpack.Distance.getEffectiveMass"]], "getunit() (cvpack.distance method)": [[4, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[4, "cvpack.Distance.getValue"]], "setunit() (cvpack.distance method)": [[4, "cvpack.Distance.setUnit"]], "helixanglecontent (class in cvpack)": [[5, "cvpack.HelixAngleContent"]], "getarguments() (cvpack.helixanglecontent class method)": [[5, "cvpack.HelixAngleContent.getArguments"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.getEffectiveMass"]], "getunit() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.getValue"]], "setunit() (cvpack.helixanglecontent method)": [[5, "cvpack.HelixAngleContent.setUnit"]], "helixhbondcontent (class in cvpack)": [[6, "cvpack.HelixHBondContent"]], "getarguments() (cvpack.helixhbondcontent class method)": [[6, "cvpack.HelixHBondContent.getArguments"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.getEffectiveMass"]], "getunit() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.getValue"]], "setunit() (cvpack.helixhbondcontent method)": [[6, "cvpack.HelixHBondContent.setUnit"]], "helixrmsdcontent (class in cvpack)": [[7, "cvpack.HelixRMSDContent"]], "getarguments() (cvpack.helixrmsdcontent class method)": [[7, "cvpack.HelixRMSDContent.getArguments"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getunit() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.getValue"]], "setunit() (cvpack.helixrmsdcontent method)": [[7, "cvpack.HelixRMSDContent.setUnit"]], "helixtorsioncontent (class in cvpack)": [[8, "cvpack.HelixTorsionContent"]], "getarguments() (cvpack.helixtorsioncontent class method)": [[8, "cvpack.HelixTorsionContent.getArguments"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getunit() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.getValue"]], "setunit() (cvpack.helixtorsioncontent method)": [[8, "cvpack.HelixTorsionContent.setUnit"]], "numberofcontacts (class in cvpack)": [[9, "cvpack.NumberOfContacts"]], "getarguments() (cvpack.numberofcontacts class method)": [[9, "cvpack.NumberOfContacts.getArguments"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.getEffectiveMass"]], "getunit() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.getValue"]], "setunit() (cvpack.numberofcontacts method)": [[9, "cvpack.NumberOfContacts.setUnit"]], "rmsd (class in cvpack)": [[10, "cvpack.RMSD"]], "getarguments() (cvpack.rmsd class method)": [[10, "cvpack.RMSD.getArguments"]], "geteffectivemass() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getEffectiveMass"]], "getnullbondforce() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getNullBondForce"]], "getunit() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[10, "cvpack.RMSD.getValue"]], "setunit() (cvpack.rmsd method)": [[10, "cvpack.RMSD.setUnit"]], "radiusofgyration (class in cvpack)": [[11, "cvpack.RadiusOfGyration"]], "getarguments() (cvpack.radiusofgyration class method)": [[11, "cvpack.RadiusOfGyration.getArguments"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getunit() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.getValue"]], "setunit() (cvpack.radiusofgyration method)": [[11, "cvpack.RadiusOfGyration.setUnit"]], "radiusofgyrationsq (class in cvpack)": [[12, "cvpack.RadiusOfGyrationSq"]], "getarguments() (cvpack.radiusofgyrationsq class method)": [[12, "cvpack.RadiusOfGyrationSq.getArguments"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getunit() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.getValue"]], "setunit() (cvpack.radiusofgyrationsq method)": [[12, "cvpack.RadiusOfGyrationSq.setUnit"]], "residuecoordination (class in cvpack)": [[13, "cvpack.ResidueCoordination"]], "getarguments() (cvpack.residuecoordination class method)": [[13, "cvpack.ResidueCoordination.getArguments"]], "geteffectivemass() (cvpack.residuecoordination method)": [[13, "cvpack.ResidueCoordination.getEffectiveMass"]], "getunit() (cvpack.residuecoordination method)": [[13, "cvpack.ResidueCoordination.getUnit"]], "getvalue() (cvpack.residuecoordination method)": [[13, "cvpack.ResidueCoordination.getValue"]], "setunit() (cvpack.residuecoordination method)": [[13, "cvpack.ResidueCoordination.setUnit"]], "sheetrmsdcontent (class in cvpack)": [[14, "cvpack.SheetRMSDContent"]], "getarguments() (cvpack.sheetrmsdcontent class method)": [[14, "cvpack.SheetRMSDContent.getArguments"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[14, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getunit() (cvpack.sheetrmsdcontent method)": [[14, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[14, "cvpack.SheetRMSDContent.getValue"]], "setunit() (cvpack.sheetrmsdcontent method)": [[14, "cvpack.SheetRMSDContent.setUnit"]], "torsion (class in cvpack)": [[15, "cvpack.Torsion"]], "getarguments() (cvpack.torsion class method)": [[15, "cvpack.Torsion.getArguments"]], "geteffectivemass() (cvpack.torsion method)": [[15, "cvpack.Torsion.getEffectiveMass"]], "getunit() (cvpack.torsion method)": [[15, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[15, "cvpack.Torsion.getValue"]], "setunit() (cvpack.torsion method)": [[15, "cvpack.Torsion.setUnit"]], "torsionsimilarity (class in cvpack)": [[16, "cvpack.TorsionSimilarity"]], "getarguments() (cvpack.torsionsimilarity class method)": [[16, "cvpack.TorsionSimilarity.getArguments"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[16, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getunit() (cvpack.torsionsimilarity method)": [[16, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[16, "cvpack.TorsionSimilarity.getValue"]], "setunit() (cvpack.torsionsimilarity method)": [[16, "cvpack.TorsionSimilarity.setUnit"]], "deserialize() (in module cvpack.serializer)": [[21, "cvpack.serializer.deserialize"]], "serialize() (in module cvpack.serializer)": [[21, "cvpack.serializer.serialize"]]}})