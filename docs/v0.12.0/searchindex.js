Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CVWriter", "api/CentroidFunction", "api/CompositeRMSD", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/MetaCVWriter", "api/MetaCollectiveVariable", "api/NumberOfContacts", "api/OpenMMForceWrapper", "api/PathInCVSpace", "api/PathInRMSDSpace", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/ResidueCoordination", "api/SheetRMSDContent", "api/ShortestDistance", "api/StateDataReporter", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "reporting", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CVWriter.rst", "api/CentroidFunction.rst", "api/CompositeRMSD.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/MetaCVWriter.rst", "api/MetaCollectiveVariable.rst", "api/NumberOfContacts.rst", "api/OpenMMForceWrapper.rst", "api/PathInCVSpace.rst", "api/PathInRMSDSpace.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/ResidueCoordination.rst", "api/SheetRMSDContent.rst", "api/ShortestDistance.rst", "api/StateDataReporter.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "reporting.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CVWriter", "CentroidFunction", "CompositeRMSD", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "MetaCVWriter", "MetaCollectiveVariable", "NumberOfContacts", "OpenMMForceWrapper", "PathInCVSpace", "PathInRMSDSpace", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "ResidueCoordination", "SheetRMSDContent", "ShortestDistance", "StateDataReporter", "Torsion", "TorsionSimilarity", "Collective Variables", "Getting Started", "Collective Variable Package", "Bibliography", "Reporting", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31], "atom1": [0, 6, 16, 24], "atom2": [0, 6, 16, 24], "atom3": [0, 24], "pbc": [0, 1, 4, 6, 7, 8, 10, 18, 19, 20, 22, 24, 25, 31], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31], "form": [0, 7, 9, 21, 24], "three": [0, 1, 4, 21], "atom": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "theta": [0, 7, 14], "bf": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "r": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29], "mathrm": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "aco": 0, "left": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "frac": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "_": [0, 1, 4, 7, 8, 9, 14, 16, 17, 21, 24, 25], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31], "cdot": [0, 24], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29], "right": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "where": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "j": [0, 1, 2, 4, 5, 9, 13, 18, 19, 20, 21, 22, 24, 29], "_j": [0, 2, 4, 5, 9, 13, 18, 19, 20, 22, 24], "_i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31], "int": [0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 21, 22, 23, 24, 25], "index": [0, 1, 2, 4, 5, 6, 13, 15, 16, 17, 21, 22, 24, 28], "first": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "second": [0, 2, 6, 10, 13, 20, 22, 24, 25], "third": [0, 2, 24], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "whether": [0, 1, 2, 4, 6, 7, 8, 9, 10, 13, 18, 19, 20, 21, 22, 24, 25], "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29], "period": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "boundari": [0, 1, 2, 4, 6, 7, 8, 10, 13, 15, 17, 18, 19, 20, 22, 24, 25], "condit": [0, 1, 2, 4, 6, 7, 8, 10, 13, 15, 17, 18, 19, 20, 22, 24, 25], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 31], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "addparticl": [0, 1, 6, 24], "rang": [0, 1, 4, 6, 7, 8, 9, 10, 16, 17, 18, 19, 21, 24], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31], "addforc": [0, 1, 6, 17, 24, 27], "integr": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 27], "verletintegr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "platform": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 27], "getplatformbynam": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 27], "refer": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "vec3": [0, 1, 4, 5, 6, 14, 15, 16, 17, 24], "po": [0, 24], "print": [1, 2, 7, 8, 9, 10, 19, 20, 21, 27, 31], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31], "570796": 0, "rad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "addtosystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "setunusedforcegroup": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "add": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "thi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29], "an": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31], "which": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "should": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "ad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "forc": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "group": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31], "set": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "avail": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "geteffectivemass": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "comput": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "given": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "q": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "defin": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "m_": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "eff": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "sum_": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "n": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "m_i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "dq": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "d": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29], "more": [], "effici": 29, "onli": [1, 2, 5, 13, 17, 20, 21, 22], "its": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "see": [5, 17], "": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29], "evalu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "quantiti": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "In": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "we": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "backbon": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "dihedr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "radiu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "gyrat": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "alanin": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "dipeptid": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "molecul": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "water": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "alaninedipeptideexplicit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "top": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "mdtraj_topologi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "backbone_atom": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "select": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31], "c": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29], "ca": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "resid": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "phi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "torsion": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28], "4": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29], "psi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "5": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29], "radius_of_gyr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 31], "radiusofgyr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 28, 31], "cv": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "05119": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "nm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "05186": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "30": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "946": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "getperiod": [], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "getunit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "measur": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "1415": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "29514": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "function": [1, 2, 4, 7, 8, 9, 10, 12, 13, 20, 21, 22, 24], "A": [1, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 25, 29, 31], "gener": [1, 4], "coordin": [1, 4, 5, 16, 17, 20, 21], "split": 4, "m": [1, 4, 5, 7, 8, 10, 18, 19, 21], "each": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "f": [1, 2, 4, 11, 12, 13, 15, 23, 27], "dot": [1, 4], "user": [1, 4, 12], "th": [1, 4, 9, 12, 15, 16, 17, 21, 25], "string": [1, 4, 12, 14, 23], "can": [1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23], "ani": [1, 2, 4, 12, 13, 16, 21, 22, 23, 31], "express": [1, 4, 12], "support": [1, 4, 7, 8, 10, 12, 17], "customcompoundbondforc": [1, 4, 12], "contain": [1, 3, 4, 5, 7, 10, 11, 12, 14, 17, 23, 31], "thei": [10, 12, 17], "must": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "pass": [1, 4, 12, 14, 23], "keyword": [1, 4, 12, 23], "argument": [1, 4, 5, 12, 17, 23, 24], "constructor": [1, 4, 12, 23], "scalar": [1, 4, 12], "arrai": [1, 4, 15], "length": [1, 4], "latter": [1, 4], "case": [1, 2, 4, 9, 12, 13, 18, 19, 21, 22, 27], "assign": [1, 4], "correspond": [2, 5, 9, 15, 17, 21], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "It": [1, 4, 5, 12, 14, 17, 23], "valid": [1, 4, 12], "arraylik": 1, "indic": [1, 4, 5, 13, 16, 17, 18, 19, 22, 25], "2d": [1, 4], "like": [1, 2, 4], "object": [1, 2, 3, 4, 11, 12, 13, 14, 23, 31], "shape": [1, 4], "number": [1, 4, 5, 7, 8, 9, 10, 13, 15, 16, 17, 20, 21, 22], "per": [1, 2, 4], "1d": [1, 4], "assum": [1, 4, 15, 21], "mmunit": [1, 2, 12, 13, 20, 22, 25], "compat": [1, 4, 12, 14], "md": [1, 4, 12, 14, 15], "dalton": [1, 4, 12, 14], "distanc": [1, 2, 4, 8, 9, 12, 13, 14, 16, 20, 21, 22, 24, 25, 26, 28], "nanomet": [1, 4, 5, 12, 14, 16, 20, 22], "time": [1, 4, 12, 14, 23, 24], "picosecond": [1, 3, 4, 11, 12, 14, 23], "temperatur": [1, 4, 12, 14], "kelvin": [1, 3, 4, 11, 12, 14, 23], "energi": [1, 2, 4, 12, 14, 29], "kilojoules_per_mol": [1, 4, 11, 12, 14, 23], "angl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28], "radian": [1, 4, 11, 12, 14, 23], "doe": [1, 4, 5, 7, 10, 12, 14, 17, 22], "have": [1, 4, 12, 14, 23], "dimensionless": [1, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 20, 21, 25, 27], "t": [1, 12, 15, 31], "option": [1, 2, 4, 7, 8, 9, 10, 12, 13, 18, 19, 21, 23], "scalarquant": [], "when": [1, 12, 18, 19], "entri": [1, 4], "rais": [1, 4, 5, 7, 10, 15, 16, 20], "valueerror": [1, 4, 5, 7, 10, 15, 16, 20], "ar": [1, 2, 4, 5, 8, 10, 12, 13, 15, 16, 17, 20, 21, 22, 27], "specifi": [1, 4], "numpi": [1, 4, 14, 15, 16, 22], "np": [1, 4, 14, 15, 16, 22], "alaninedipeptidevacuum": [1, 3, 11, 12, 14, 15, 16, 18, 19, 23], "angle1": 1, "10": [1, 17, 29], "angle2": 1, "15": [1, 7, 8, 9], "20": 1, "colvar": [1, 4], "k": [4, 8, 9, 21, 25], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 3, 11, 12, 17, 23], "pi": [1, 2, 3, 11, 12, 14, 15, 16, 23], "theta1": 1, "value_in_unit": 22, "theta2": 1, "500": [1, 3, 11, 23], "429": 1, "479": 1, "kj": [1, 2, 11, 12, 14, 23], "mol": [1, 2, 11, 12, 14, 23], "classmethod": 1, "fromopenmmforc": 1, "creat": [1, 17, 27], "convert": [1, 12], "typeerror": 1, "app": [1, 3, 7, 8, 9, 10, 11, 17, 20, 21, 23, 27], "lysozymeimplicit": [1, 4, 7, 8, 9, 10, 20, 25, 27], "residu": [1, 2, 4, 5, 7, 8, 9, 10, 13, 15, 17, 20, 21, 22, 27], "topologi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 15, 17, 20, 21, 22, 23, 25, 27], "59": [1, 7, 8, 9, 10, 25, 27], "79": [1, 25], "helix_cont": [1, 7, 8, 9, 10, 27], "helixtorsioncont": [1, 26, 27, 28], "6": [1, 2, 3, 11, 12, 13, 15, 16, 20, 23, 29], "num_atom": [1, 17, 18, 19, 22, 27], "getnumparticl": [1, 9, 18, 19, 21, 22, 27], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 4, 7, 8, 9, 10, 13, 15, 16, 20, 21], "addglobalparamet": 1, "7": [1, 15, 23], "getnam": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "getforc": [1, 2, 13], "copi": [1, 16], "item": 1, "harmonicbondforc": [1, 17], "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": [1, 16], "start": [1, 13, 22, 28], "setforcegroup": 1, "state": [1, 16], "getstat": 1, "getenergi": 1, "getpotentialenergi": 1, "copy_valu": 1, "origin": [1, 9, 21], "6f": 1, "2094": 1, "312": 1, "3239": 1, "795": 1, "4226": 1, "05": 1, "02155": 1, "17": [1, 2, 10], "4528": 1, "group1": [2, 13, 20, 22], "group2": [2, 13, 20, 22], "nonbondedforc": [2, 13], "contrastgroup": 2, "kilojoul": [], "mole": 2, "contrastsc": 2, "strength": 2, "attract": 2, "between": [2, 4, 5, 6, 9, 13, 16, 17, 20, 21, 22, 25, 27], "two": [2, 4, 6, 12, 13, 20, 22], "s_": 2, "rm": [2, 5, 7, 8, 9, 10, 16, 17, 21, 22, 24, 25], "attr": 2, "e_": 2, "ref": [2, 5, 7, 9, 10, 15, 16, 17, 21], "bigg": 2, "g": [2, 4, 5, 9, 13, 20, 21, 22], "_1": [2, 6, 13, 20, 22], "substack": 2, "_2": [2, 6, 13, 20, 22], "neq": [2, 13], "epsilon_": 2, "ij": [2, 22], "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "varepsilon_0": 2, "r_": [2, 9, 13, 21, 22], "elec": 2, "cutoff": [2, 13, 17, 22], "permitt": 2, "empti": 2, "space": [2, 15, 29], "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": [2, 15, 16, 22], "sqrt": [2, 5, 9, 15, 16, 17, 18, 21], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "one": [1, 2, 4, 9, 12, 21, 27], "provid": [2, 13, 15, 16], "_3": 2, "contrast": 2, "One": [2, 13], "also": [2, 13, 22], "scale": [2, 15], "factor": [2, 13], "alpha": [2, 7, 8, 9, 10, 21], "balanc": 2, "contribut": 2, "interact": 2, "becom": [1, 2, 4, 12], "overlap": 2, "even": [2, 7, 10], "same": [1, 2, 4, 9, 12, 17, 21], "self": [2, 13, 23], "On": 2, "other": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "hand": 2, "cannot": 2, "neither": 2, "nor": 2, "reduc": 2, "potenti": [2, 14, 29], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": [2, 15, 16], "text": [2, 15, 16, 31], "coulomb": [2, 29], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 27], "consid": [1, 2, 9, 10, 13, 20, 21, 22], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "give": 2, "lower": [1, 2], "bound": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "zero": 2, "upper": [1, 2], "depend": [2, 12, 15, 16], "detail": 2, "chosen": 2, "adopt": 2, "well": 2, "switch": [2, 13, 22], "taken": [2, 13], "non": [2, 13], "exclus": [2, 13], "except": [2, 5, 13], "involv": [2, 13], "either": [2, 5, 17], "turn": [2, 13, 22], "iter": [2, 4, 5, 12, 15, 18, 19, 20], "necessari": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "real": [2, 7, 8, 9, 10, 13, 15, 20, 21], "normal": [2, 7, 8, 9, 10, 13, 20, 21, 27], "extract": 2, "regardless": 2, "hostguestexplicit": [2, 13], "guest": 2, "b2": [2, 13, 22], "host": 2, "cuc": 2, "cv1": 2, "femtosecond": [2, 3, 5, 11, 13, 17, 22, 23, 27], "4912": 2, "hoh": [2, 13], "cv2": 2, "reiniti": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "preservest": [2, 4, 13, 20, 21], "2063": 2, "cv3": 2, "2849": 2, "cv4": 2, "3880": 2, "8": [2, 3, 9, 10, 11, 12, 16, 21, 23], "weighbymass": [4, 18, 19, 20, 31], "centroid": [4, 5, 17, 20], "big": [4, 25], "i_1": 4, "i_2": 4, "i_n": 4, "customcentroidbondforc": 4, "n_j": [4, 5], "weight": [4, 20], "redefin": 4, "m_j": 4, "total": [4, 5, 9, 13, 16, 17, 18, 19, 20, 21, 22], "list": [1, 3, 4, 7, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 23, 25], "arbitrari": 4, "_supportsarrai": [4, 25], "dtype": [4, 25], "_nestedsequ": [4, 25], "float": [2, 3, 4, 11, 13, 15, 23, 25], "complex": [4, 25], "byte": [4, 25], "center": [4, 9, 15, 16, 17, 18, 19, 21], "instead": [4, 13, 18, 19, 21, 27], "geometr": [4, 18, 19], "out": 4, "itertool": [9, 20, 21], "helic": 4, "res_coord": 4, "residuecoordin": [4, 26, 28], "115": 4, "124": 4, "126": [4, 29], "135": 4, "stepfunct": [4, 9, 13, 20, 21], "step": [3, 4, 8, 9, 11, 13, 17, 20, 21, 23], "33": [4, 8], "recomput": 4, "product": [], "9": [4, 15, 21, 29], "18": [3, 4, 7, 11, 23, 25, 29], "g1": 4, "g2": 4, "referenceposit": [5, 17], "numatom": [5, 9, 16, 17, 21, 22], "composit": 5, "root": [5, 9, 16, 17, 21], "mean": [5, 9, 16, 17, 21], "squar": [5, 9, 15, 16, 17, 19, 21], "deviat": [5, 15, 16, 17], "rmsd": [5, 9, 21, 26, 28], "current": [5, 16, 17], "d_": [5, 8, 16, 17, 21], "crm": 5, "min_": [5, 17], "mathbb": [5, 17], "atop": [5, 17], "rotat": [5, 9, 16, 17, 21], "matrix": [5, 9, 15, 17, 21], "quaternion": [5, 17], "structur": [5, 16, 17, 29], "respect": [5, 8, 10, 11, 15, 16, 18, 19], "analog": 5, "To": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "you": 5, "instal": [5, 28], "cpp": 5, "conda": [5, 27], "packag": [5, 27], "ndarrai": [1, 4, 5, 14, 15, 16, 17], "sequenc": [5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 21, 22, 23, 27], "dict": [5, 12, 16, 17], "map": [5, 16, 17], "vector": [5, 15, 16, 17], "all": [1, 4, 5, 12, 17, 21, 25], "need": [5, 7, 10, 17], "below": [5, 17], "disjoint": [5, 20], "includ": [5, 16, 17, 20, 22, 23, 27], "those": [5, 16, 17, 22], "importerror": 5, "mm": 5, "pytest": 5, "hostguestvacuum": [5, 22], "host_atom": 5, "guest_atom": 5, "try": 5, "composite_rmsd": 5, "skip": 5, "7320": 6, "thetarefer": 7, "88": 7, "degre": [12, 22, 25], "toler": [7, 10], "halfexpon": [7, 8, 10], "helix": [7, 8, 9, 10, 27], "content": [7, 8, 9, 10, 21, 27], "alpha_": [7, 8, 9, 10], "b_m": [7, 8, 10], "alpha_i": 7, "theta_": [7, 10], "tol": [7, 10], "carbon": [7, 8], "threshold": [7, 8, 9, 10, 13, 20, 21], "around": [7, 10], "smooth": [7, 8, 9, 10, 21, 22], "boxcar": [7, 10], "2m": [7, 8, 10], "integ": [7, 8, 10, 21], "control": [7, 8, 10, 22], "steep": [7, 8, 10], "note": [7, 10], "elev": [7, 10], "power": [7, 10, 27], "contigu": [7, 8, 9, 10, 21], "singl": [7, 8, 9, 10, 21], "chain": [7, 8, 9, 10, 21], "order": [7, 8, 9, 10, 21, 22], "terminu": [7, 8, 9, 10, 21], "due": [7, 8, 10], "limit": [7, 8, 9, 10, 21], "maximum": [7, 8, 10], "37": [7, 8, 10, 11, 23], "some": [7, 10], "ly": [7, 8, 9, 10], "asp": [7, 8, 9, 10, 20], "glu": [7, 8, 9, 10, 20, 21], "il": [7, 8, 9, 10], "leu": [7, 8, 9, 10], "arg": [7, 8, 9, 10, 20], "7605": 7, "thresholddist": [8, 13, 20], "hydrogen": [8, 20], "bond": [8, 17], "hb": 8, "h": [8, 9, 13, 20, 21], "o": [8, 9, 21], "_k": [8, 9, 21], "oxygen": 8, "nitrogen": 8, "addit": [8, 21, 23], "880": 8, "thresholdrmsd": [9, 21], "08": [9, 21], "r_0": [9, 13, 20, 21], "repres": [9, 12, 16, 21], "ideal": [9, 21], "configur": [9, 12, 21], "whose": [3, 9, 11, 14, 15, 21], "default": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "everi": [9, 21], "beta": [9, 21, 29], "six": [9, 21], "involvend": [9, 21], "thu": [9, 21], "compris": [9, 21], "glycin": [9, 21], "miss": [9, 21], "replac": [9, 18, 19, 21], "hat": [9, 15, 17, 21], "rel": [9, 17, 21], "geometri": [9, 17, 21], "minim": [9, 21], "done": [9, 21], "divid": [9, 21], "n_": [9, 21], "wa": [9, 21], "introduc": [9, 21], "shown": [9, 21], "abov": [9, 21, 24], "ident": [9, 21], "paper": [9, 21], "written": [9, 21], "numer": [9, 14, 21, 22, 24], "safe": [9, 21], "alpharmsd": 9, "plume": [9, 21, 25], "v2": [9, 21], "present": [9, 21, 23], "implement": [9, 21], "leq": [9, 21], "1024": [9, 21], "calcul": [9, 12, 20, 21, 22, 24, 25, 29], "requir": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "close": [9, 21, 27], "match": [9, 12, 21], "islic": [9, 20, 21], "80": [7, 8, 9, 10, 27], "getnumresidueblock": [9, 21], "16": [3, 9, 11, 12, 23], "98": 9, "phirefer": 10, "63": 10, "psirefer": 10, "41": [10, 11, 23], "25": [10, 11, 23], "ramachandran": 10, "phi_i": 10, "phi_": 10, "psi_i": 10, "psi_": 10, "refenr": 10, "last": [10, 21], "penultim": 10, "452": 10, "cutofffactor": 13, "switchfactor": 13, "contact": [13, 20], "equal": [1, 4, 12, 13, 15, 20], "made": [13, 20], "otherwis": [13, 20], "For": [13, 20, 21], "trajectori": [13, 20, 25, 27], "analysi": [13, 20, 27], "fine": [13, 20], "make": [13, 15, 20], "heavisid": [13, 20], "molecular": [13, 20, 29], "dynam": [13, 20, 29], "howev": [13, 20, 21], "continu": [13, 20], "approxim": [13, 20, 22], "geq": [13, 20], "By": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "follow": [13, 20, 23, 27], "12": [11, 13, 20, 23], "fact": 13, "r_c": [13, 22], "x_c": 13, "typic": 13, "appli": [1, 4, 12, 13, 16, 22], "so": [13, 22], "avoid": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "discontinu": 13, "smoothli": [13, 22], "off": [13, 22], "x_": 13, "do": 13, "abruptli": 13, "allow": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "both": [13, 21, 22], "ignor": [13, 22], "pair": [13, 22, 25], "distinct": [13, 17], "count": 13, "onc": 13, "obtain": 13, "thereof": [13, 20], "being": [13, 15, 16, 20], "multipli": 13, "els": [13, 22], "extend": [13, 22, 23], "nc": 13, "nc_normal": 13, "99999": [13, 20], "openmmforc": 14, "instanc": [12, 14, 27, 31], "xml": 14, "serial": [14, 28], "customangleforc": 14, "addangl": 14, "assert": [], "isinst": [], "911": 14, "00538": 14, "metric": [15, 16], "mileston": [15, 16], "sigma": [15, 16, 22], "progress": [15, 16], "z": [15, 16], "path": [15, 16], "dfrac": [15, 16], "w_i": [15, 16], "ln": [15, 16], "gaussian": [15, 16], "kernel": [15, 16], "exp": [15, 16], "locat": 15, "width": [15, 16], "norm": [15, 16, 22], "diagon": 15, "element": 15, "characterist": 15, "appropri": 15, "relat": [15, 16], "lambda": [15, 16], "basecollectivevari": [], "row": [15, 16], "column": 15, "standard": 15, "less": [15, 16, 22], "than": [15, 16, 19, 22], "differ": [1, 4, 15, 21, 27], "phi_atom": [15, 25], "ac": [15, 29], "ala": [15, 21], "psi_atom": 15, "nme": 15, "path_var": 15, "var": 15, "append": [3, 11, 15, 16, 23], "50": [], "superscript": 17, "denot": 17, "problem": 17, "belong": 17, "possibl": [17, 20, 27], "circumv": 17, "issu": 17, "call": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "getnullbondforc": 17, "result": 17, "alaninedipeptideimplicit": 17, "getnumatom": 17, "round": 27, "1231383": [], "null": 17, "connect": 17, "graph": [16, 17], "waterbox": 17, "box_edg": 17, "angstrom": [16, 17], "100": [3, 11, 17, 23], "10436": 17, "r_g": [18, 19], "_c": [18, 19], "_m": [18, 19], "lack": 18, "parallel": [18, 19, 21], "might": [18, 19], "slow": 18, "larg": [18, 19], "radiusofgyrationsq": [18, 26, 28], "prefer": [18, 19], "2951": 18, "better": 19, "over": 19, "rgsq": 19, "0871": 19, "residuegroup1": 20, "residuegroup2": 20, "includehydrogen": 20, "ha": 20, "125": 20, "142": 20, "trp": 20, "asn": 20, "gln": 20, "thr": [20, 21], "156": 20, "pro": 20, "gly": 20, "residue_coordin": 20, "customintegr": 20, "26": [20, 23], "setreferencevalu": 20, "getreferencevalu": 20, "blocksiz": 21, "sheet": [21, 29], "beta_": 21, "min": [11, 12, 21, 22, 23], "minimum": 21, "subset": 21, "protein": [21, 27, 29], "antiparallel": 21, "minimim": 21, "choos": 21, "partit": 21, "block": 21, "n_1": 21, "n_2": 21, "ldot": [12, 21], "n_m": 21, "compos": 21, "consecut": 21, "next": 21, "definit": [1, 4, 12, 21], "modifi": 21, "l_": 21, "l_k": 21, "n_i": 21, "separ": [1, 4, 12, 21, 22, 24], "n_k": 21, "antibetarmsd": 21, "parabetarmsd": 21, "srcimplicit": 21, "68": 21, "82": 21, "tyr": 21, "val": 21, "sheet_cont": 21, "28": 21, "0465": 21, "blockwise_sheet_cont": 21, "9859": 21, "atom4": 24, "four": [24, 25, 27], "varphi": 24, "atan2": 24, "u": 24, "arctang": 24, "receiv": 24, "denomin": 24, "fourth": 24, "5707": 24, "firstlist": 25, "secondlist": 25, "similar": 25, "co": 25, "1st": 25, "2nd": 25, "kth": 25, "dihcor": 25, "tupl": [12, 25], "mdtraj": 25, "traj": 25, "from_openmm": 25, "compute_phi": 25, "valid_atom": 25, "torsion_similar": 25, "659": 25, "atomicfunct": [4, 12, 26, 28], "attractionstrength": [26, 28], "centroidfunct": [26, 28], "compositermsd": [26, 28], "helixanglecont": [26, 27, 28], "helixhbondcont": [26, 27, 28], "helixrmsdcont": [26, 27, 28], "numberofcontact": [26, 28], "openmmforcewrapp": [26, 28], "pathincvspac": [26, 28], "sheetrmsdcont": [26, 28], "torsionsimilar": [26, 28], "python": 27, "pre": 27, "customcvforc": [12, 27], "biasvari": 27, "metadynam": 27, "simul": [1, 3, 4, 11, 12, 23, 27], "collectivevari": [3, 12, 15, 27], "uf": 27, "har": 27, "environ": 27, "run": 27, "command": 27, "forg": 27, "mdtool": 27, "Or": 27, "mamba": 27, "your": 27, "script": 27, "jupyt": 27, "notebook": 27, "show": 27, "how": 27, "quantifi": 27, "modul": [27, 28], "t4": 27, "lysozym": 27, "l99a": 27, "longest": 27, "occur": 27, "lys60": 27, "arg80": 27, "final": 27, "seven": 27, "decim": 27, "place": 27, "output": 27, "9873989": 27, "93414": 27, "9946999": 27, "918571": 27, "expect": [22, 27], "matter": 27, "star": 28, "introduct": 28, "usag": 28, "api": [], "deseri": [28, 31], "bibliographi": 28, "search": 28, "page": 28, "christoph": 29, "chipot": 29, "andrew": 29, "pohoril": 29, "editor": 29, "free": 29, "springer": 29, "berlin": 29, "heidelberg": 29, "2007": 29, "url": 29, "http": 29, "doi": 29, "org": 29, "1007": 29, "978": 29, "540": 29, "38448": 29, "gabriela": 29, "b": 29, "correa": 29, "\u00e9": 29, "ssica": 29, "l": 29, "maciel": 29, "frederico": 29, "w": 29, "tavar": 29, "charll": 29, "abreu": 29, "new": 29, "formul": 29, "concert": 29, "alchem": 29, "van": 29, "der": 29, "waal": 29, "compon": 29, "solvat": 29, "journal": 29, "chemic": 29, "theori": 29, "5876": 29, "5889": 29, "octob": 29, "2022": 29, "1021": 29, "jctc": 29, "2c00563": 29, "fabio": 29, "pietrucci": 29, "alessandro": 29, "laio": 29, "explor": 29, "applic": 29, "sh": 29, "gb": 29, "2197": 29, "2201": 29, "aug": 29, "2009": 29, "ct900202f": 29, "sven": 29, "hovm\u00f6ller": 29, "tupe": 29, "zhou": 29, "toma": 29, "ohlson": 29, "conform": 29, "amino": 29, "acid": 29, "acta": 29, "crystallographica": 29, "section": 29, "biolog": 29, "crystallographi": 29, "58": 29, "768": 29, "776": 29, "apr": 29, "2002": 29, "1107": 29, "s0907444902003359": 29, "marcella": 29, "iannuzzi": 29, "michel": 29, "parrinello": 29, "reactiv": 29, "surfac": 29, "car": 29, "physic": 29, "review": 29, "letter": 29, "jun": 29, "2003": 29, "1103": 29, "physrevlett": 29, "90": 29, "238302": 29, "david": 29, "branduardi": 29, "francesco": 29, "luigi": 29, "gervasio": 29, "054103": 29, "februari": 29, "1063": 29, "2432340": 29, "obj": 31, "iostream": 31, "io": 31, "stream": 31, "write": [23, 31], "mode": 31, "stringio": 31, "read": 31, "seek": 31, "new_object": 31, "atomic_funct": 1, "identifi": [], "123138": 17, "attraction_strength": 2, "centroid_funct": 4, "helix_angle_cont": 7, "helix_hbond_cont": 8, "helix_rmsd_cont": 9, "helix_torsion_cont": 10, "number_of_contact": 13, "openmm_force_wrapp": 14, "path_progress_in_cv_spac": 15, "path_deviation_in_cv_spac": 15, "radius_of_gyration_sq": 19, "sheet_rmsd_cont": 21, "getmassunit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "normalized_helix_cont": 9, "998": 9, "collective_vari": [], "meta_collective_vari": 12, "c_1": 12, "c_2": 12, "c_n": 12, "c_i": 12, "meta": [11, 12], "uniqu": 12, "symbol": 12, "math": [3, 11, 12, 23], "14": [3, 11, 12, 16, 23], "driving_forc": 12, "kappa": [1, 11, 12, 23], "delta": 12, "ab": [11, 12, 23], "phi0": [11, 12, 23], "120": 12, "548": 12, "getinnervalu": 12, "getinnereffectivemass": 12, "act": 12, "particl": 12, "dictionari": [12, 16], "kei": 12, "metacollectivevari": [11, 23, 26, 28], "getperiodicbound": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "union": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "periodicbound": [1, 4, 12, 14], "vectorquant": [1, 12], "former": [1, 4], "fly": [1, 4, 12], "modif": [1, 4, 12], "dure": [1, 4, 12], "via": [1, 4, 12], "setparamet": [1, 4, 12], "custom": [1, 3, 11, 23], "global": [1, 4], "share": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "specif": [], "semicolon": [1, 4, 12], "wai": [1, 4, 12], "phase": [], "describ": [1, 4, 12], "document": [1, 4, 12], "warn": [1, 4, 12], "2000": 1, "858": 1, "959": [], "958": 1, "kwarg": 23, "abstract": [], "common": [], "attribut": [], "allowreiniti": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "ineffici": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "whenev": [], "behavior": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "delibar": [], "author": [], "twice": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "getinnervari": 12, "report": [3, 11, 23, 28], "collectivevariablereport": [], "file": 23, "reportinterv": 23, "effectivemass": [], "excludeinnervari": [], "data": [3, 11, 23], "boolean": [], "flag": [], "comma": [], "csv": [], "format": [], "textiobas": 23, "interv": 23, "frame": 16, "exclud": [], "inner": 11, "omit": [], "header": [3, 11, 23], "line": [], "exist": [], "mmapp": [], "sy": [3, 11, 23], "stdout": [3, 11, 23], "umbrella": [11, 23], "langevinintegr": [3, 11, 23], "300": [3, 11, 23], "setrandomnumberse": [3, 11, 23], "1234": [3, 11, 23], "setvelocitiestotemperatur": [3, 11, 23], "5678": [3, 11, 23], "13": [], "049": [], "885": [], "1288": [], "04920": [], "247": [], "962": [], "1129": [], "04807": [], "11": [11, 23], "420": [], "093": [], "0959": [], "04782": [], "612": [], "287": [], "0786": [], "04854": [], "7988": [], "550": [], "0606": [], "04999": [], "0313": [], "852": [], "0429": [], "05153": [], "3753": [], "141": [], "0272": [], "05262": [], "7821": [], "415": [], "0125": [], "05316": [], "2126": [], "665": [], "9978": [], "05287": [], "563": [], "967": [], "9803": [], "05208": [], "html": [], "These": [], "dphi": [11, 23], "dpsi": [11, 23], "2618": [], "8774": [], "3684": [], "04388": [], "0217": [], "05552": [], "200": [3, 11, 23], "46382": [], "8803": [], "8851": [], "04968": [], "8971": [], "05230": [], "55804": [], "9086": [], "4311": [], "04637": [], "4905": [], "03721": [], "400": [3, 11, 23], "19945": [], "6824": [], "9678": [], "05449": [], "6577": [], "04840": [], "82728": [], "0253": [], "5838": [], "04584": [], "0367": [], "05485": [], "600": [3, 11, 23], "76160": [], "9099": [], "7248": [], "04772": [], "8706": [], "05212": [], "700": [3, 11, 23], "38895": [], "3273": [], "5583": [], "8714": [], "04674": [], "800": [3, 11, 23], "07166": [], "00028746": [], "7104": [], "05321": [], "7314": [], "05418": [], "900": [3, 11, 23], "58602": [], "4899": [], "4391": [], "04096": [], "9917": [], "04675": [], "8404": [], "1011": [], "7584": 11, "04951": [], "9295": [], "05030": [], "regular": [], "metacv": 11, "globalparamet": [], "actual": [], "immut": [], "without": [], "convers": [], "mutabl": [], "setvalu": [], "141592653589793": [], "perform": 23, "settabl": 12, "Their": 12, "serv": 12, "1e3": 12, "getparameterdefaultvalu": 12, "094": 12, "getparametervalu": 12, "getparameterderiv": 12, "1047": [3, 12], "19": 12, "deriv": [11, 12, 23], "contextparamet": [], "metacollectivevariablereport": [], "been": [], "ones": [], "restrict": [], "7102": 3, "1221": 3, "04970": 3, "05386": 3, "1573": 3, "9959": 3, "04481": 3, "05664": 3, "0859": 3, "001": [3, 16], "04035": 3, "04506": 3, "8061": 3, "0792": 3, "05399": 3, "04992": 3, "654": 3, "1139": 3, "04784": 3, "05592": 3, "1390": 3, "071": [3, 23], "05137": 3, "05063": 3, "1133": 3, "04145": 3, "04724": 3, "7348": 3, "004": [3, 16], "04123": 3, "05548": 3, "6273": 3, "1277": 3, "03007": 3, "05271": 3, "680": 3, "9692": 3, "03749": 3, "04450": 3, "innervalu": 11, "innermass": 11, "parametervalu": [], "parameterderiv": [], "associ": 11, "psi0": [11, 23], "diff": [], "36849": 11, "40": [11, 23], "3718": 11, "88515": 11, "27": [11, 23], "9109": 11, "43112": 11, "743": 11, "96786": 11, "97688": 11, "58383": 11, "8782": 11, "72482": 11, "2626": 11, "55836": 11, "3424": 11, "71046": 11, "3498": 11, "43913": 11, "3804": 11, "31": [11, 23], "1599": 11, "cvreport": [], "metacvreport": [], "cvwriter": [23, 28, 30], "metacvwrit": [23, 28, 30], "statedatareport": [3, 11, 28, 30], "emass": [3, 11, 23], "writer": [3, 11, 23], "gethead": [3, 11, 23], "strig": [3, 11], "getreportvalu": [], "version": 23, "particular": [], "signatur": 23, "def": 23, "accept": [], "customwrit": 23, "371": 23, "463": 23, "910": 23, "558": 23, "74": 23, "199": 23, "9768": 23, "827": 23, "878": 23, "761": 23, "262": 23, "388": 23, "342": 23, "349": 23, "586": 23, "380": 23, "84": 23, "159": 23, "initi": 23, "setup": 23, "befor": 23, "softmindist": [], "pathinrmsdspac": [26, 28], "2_": 16, "shift": [], "path_progress_in_rmsd_spac": 16, "path_deviation_in_rmsd_spac": 16, "networkx": 16, "nx": 16, "scipi": 16, "spatial": 16, "transform": 16, "to_bondgraph": 16, "node": 16, "remove_edg": 16, "movabl": 16, "connected_compon": 16, "x0": 16, "linalg": [16, 22], "from_rotvec": 16, "len": 16, "172": 16, "shortest": 22, "shortestdist": [26, 28], "01": 22, "shortest_dist": 22, "dsum_": [], "softmin": [], "larger": [], "smoother": [], "sum": [], "ensur": [], "magnitud": 22, "cutoffdist": 22, "switchdist": 22, "smaller": 22, "closer": 22, "affect": 22, "good": 22, "estim": 22, "improv": 22, "stabil": 22, "coord": 22, "axi": 22, "17573": 22, "practic": 22, "term": 22, "min_dist": 22, "deg": [7, 10]}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [4, 0, 1, "", "CentroidFunction"], [5, 0, 1, "", "CompositeRMSD"], [6, 0, 1, "", "Distance"], [7, 0, 1, "", "HelixAngleContent"], [8, 0, 1, "", "HelixHBondContent"], [9, 0, 1, "", "HelixRMSDContent"], [10, 0, 1, "", "HelixTorsionContent"], [12, 0, 1, "", "MetaCollectiveVariable"], [13, 0, 1, "", "NumberOfContacts"], [14, 0, 1, "", "OpenMMForceWrapper"], [15, 0, 1, "", "PathInCVSpace"], [16, 0, 1, "", "PathInRMSDSpace"], [17, 0, 1, "", "RMSD"], [18, 0, 1, "", "RadiusOfGyration"], [19, 0, 1, "", "RadiusOfGyrationSq"], [20, 0, 1, "", "ResidueCoordination"], [21, 0, 1, "", "SheetRMSDContent"], [22, 0, 1, "", "ShortestDistance"], [24, 0, 1, "", "Torsion"], [25, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "addToSystem"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getMassUnit"], [0, 1, 1, "", "getName"], [0, 1, 1, "", "getPeriodicBounds"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "addToSystem"], [1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getMassUnit"], [1, 1, 1, "", "getName"], [1, 1, 1, "", "getPeriodicBounds"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "addToSystem"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getMassUnit"], [2, 1, 1, "", "getName"], [2, 1, 1, "", "getPeriodicBounds"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"]], "cvpack.CentroidFunction": [[4, 1, 1, "", "addToSystem"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getMassUnit"], [4, 1, 1, "", "getName"], [4, 1, 1, "", "getPeriodicBounds"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"]], "cvpack.CompositeRMSD": [[5, 1, 1, "", "addToSystem"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getMassUnit"], [5, 1, 1, "", "getName"], [5, 1, 1, "", "getPeriodicBounds"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"]], "cvpack.Distance": [[6, 1, 1, "", "addToSystem"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getMassUnit"], [6, 1, 1, "", "getName"], [6, 1, 1, "", "getPeriodicBounds"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"]], "cvpack.HelixAngleContent": [[7, 1, 1, "", "addToSystem"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getMassUnit"], [7, 1, 1, "", "getName"], [7, 1, 1, "", "getPeriodicBounds"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"]], "cvpack.HelixHBondContent": [[8, 1, 1, "", "addToSystem"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getMassUnit"], [8, 1, 1, "", "getName"], [8, 1, 1, "", "getPeriodicBounds"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"]], "cvpack.HelixRMSDContent": [[9, 1, 1, "", "addToSystem"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getMassUnit"], [9, 1, 1, "", "getName"], [9, 1, 1, "", "getPeriodicBounds"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"]], "cvpack.HelixTorsionContent": [[10, 1, 1, "", "addToSystem"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getMassUnit"], [10, 1, 1, "", "getName"], [10, 1, 1, "", "getPeriodicBounds"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"]], "cvpack.MetaCollectiveVariable": [[12, 1, 1, "", "addToSystem"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getInnerEffectiveMasses"], [12, 1, 1, "", "getInnerValues"], [12, 1, 1, "", "getInnerVariables"], [12, 1, 1, "", "getMassUnit"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getParameterDefaultValues"], [12, 1, 1, "", "getParameterDerivatives"], [12, 1, 1, "", "getParameterValues"], [12, 1, 1, "", "getPeriodicBounds"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"]], "cvpack.NumberOfContacts": [[13, 1, 1, "", "addToSystem"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getMassUnit"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getPeriodicBounds"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"]], "cvpack.OpenMMForceWrapper": [[14, 1, 1, "", "addToSystem"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getMassUnit"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getPeriodicBounds"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"]], "cvpack.PathInCVSpace": [[15, 1, 1, "", "addToSystem"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getMassUnit"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getPeriodicBounds"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"]], "cvpack.PathInRMSDSpace": [[16, 1, 1, "", "addToSystem"], [16, 1, 1, "", "getEffectiveMass"], [16, 1, 1, "", "getMassUnit"], [16, 1, 1, "", "getName"], [16, 1, 1, "", "getPeriodicBounds"], [16, 1, 1, "", "getUnit"], [16, 1, 1, "", "getValue"]], "cvpack.RMSD": [[17, 1, 1, "", "addToSystem"], [17, 1, 1, "", "getEffectiveMass"], [17, 1, 1, "", "getMassUnit"], [17, 1, 1, "", "getName"], [17, 1, 1, "", "getNullBondForce"], [17, 1, 1, "", "getPeriodicBounds"], [17, 1, 1, "", "getUnit"], [17, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyration": [[18, 1, 1, "", "addToSystem"], [18, 1, 1, "", "getEffectiveMass"], [18, 1, 1, "", "getMassUnit"], [18, 1, 1, "", "getName"], [18, 1, 1, "", "getPeriodicBounds"], [18, 1, 1, "", "getUnit"], [18, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyrationSq": [[19, 1, 1, "", "addToSystem"], [19, 1, 1, "", "getEffectiveMass"], [19, 1, 1, "", "getMassUnit"], [19, 1, 1, "", "getName"], [19, 1, 1, "", "getPeriodicBounds"], [19, 1, 1, "", "getUnit"], [19, 1, 1, "", "getValue"]], "cvpack.ResidueCoordination": [[20, 1, 1, "", "addToSystem"], [20, 1, 1, "", "getEffectiveMass"], [20, 1, 1, "", "getMassUnit"], [20, 1, 1, "", "getName"], [20, 1, 1, "", "getPeriodicBounds"], [20, 1, 1, "", "getReferenceValue"], [20, 1, 1, "", "getUnit"], [20, 1, 1, "", "getValue"], [20, 1, 1, "", "setReferenceValue"]], "cvpack.SheetRMSDContent": [[21, 1, 1, "", "addToSystem"], [21, 1, 1, "", "getEffectiveMass"], [21, 1, 1, "", "getMassUnit"], [21, 1, 1, "", "getName"], [21, 1, 1, "", "getPeriodicBounds"], [21, 1, 1, "", "getUnit"], [21, 1, 1, "", "getValue"]], "cvpack.ShortestDistance": [[22, 1, 1, "", "addToSystem"], [22, 1, 1, "", "getEffectiveMass"], [22, 1, 1, "", "getMassUnit"], [22, 1, 1, "", "getName"], [22, 1, 1, "", "getPeriodicBounds"], [22, 1, 1, "", "getUnit"], [22, 1, 1, "", "getValue"]], "cvpack.Torsion": [[24, 1, 1, "", "addToSystem"], [24, 1, 1, "", "getEffectiveMass"], [24, 1, 1, "", "getMassUnit"], [24, 1, 1, "", "getName"], [24, 1, 1, "", "getPeriodicBounds"], [24, 1, 1, "", "getUnit"], [24, 1, 1, "", "getValue"]], "cvpack.TorsionSimilarity": [[25, 1, 1, "", "addToSystem"], [25, 1, 1, "", "getEffectiveMass"], [25, 1, 1, "", "getMassUnit"], [25, 1, 1, "", "getName"], [25, 1, 1, "", "getPeriodicBounds"], [25, 1, 1, "", "getUnit"], [25, 1, 1, "", "getValue"]], "cvpack.reporting": [[3, 0, 1, "", "CVWriter"], [11, 0, 1, "", "MetaCVWriter"], [23, 0, 1, "", "StateDataReporter"]], "cvpack.reporting.CVWriter": [[3, 1, 1, "", "getHeaders"], [3, 1, 1, "", "getValues"]], "cvpack.reporting.MetaCVWriter": [[11, 1, 1, "", "getHeaders"], [11, 1, 1, "", "getValues"]], "cvpack.serialization": [[31, 2, 1, "", "deserialize"], [31, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "centroidfunct": 4, "compositermsd": 5, "distanc": 6, "helixanglecont": 7, "helixhbondcont": 8, "helixrmsdcont": 9, "helixtorsioncont": 10, "numberofcontact": 13, "openmmforcewrapp": 14, "pathincvspac": 15, "rmsd": 17, "radiusofgyr": 18, "radiusofgyrationsq": 19, "residuecoordin": 20, "sheetrmsdcont": 21, "torsion": 24, "torsionsimilar": 25, "python": [], "api": [], "get": 27, "start": 27, "introduct": 27, "instal": 27, "usag": 27, "exampl": 27, "collect": [26, 28], "variabl": [26, 28], "packag": 28, "content": 28, "indic": 28, "tabl": 28, "bibliographi": 29, "serial": 31, "metacollectivevari": 12, "collectivevari": [], "report": 30, "globalparamet": [], "other": [], "class": [], "collectivevariablereport": [], "metacollectivevariablereport": [], "cvreport": [], "metacvreport": [], "cvwriter": 3, "metacvwrit": 11, "statedatareport": 23, "softmindist": [], "pathinrmsdspac": 16, "shortestdist": 22}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CVWriter": [[3, "cvwriter"]], "CentroidFunction": [[4, "centroidfunction"]], "CompositeRMSD": [[5, "compositermsd"]], "Distance": [[6, "distance"]], "HelixAngleContent": [[7, "helixanglecontent"]], "HelixHBondContent": [[8, "helixhbondcontent"]], "HelixRMSDContent": [[9, "helixrmsdcontent"]], "HelixTorsionContent": [[10, "helixtorsioncontent"]], "MetaCVWriter": [[11, "metacvwriter"]], "MetaCollectiveVariable": [[12, "metacollectivevariable"]], "NumberOfContacts": [[13, "numberofcontacts"]], "OpenMMForceWrapper": [[14, "openmmforcewrapper"]], "PathInCVSpace": [[15, "pathincvspace"]], "PathInRMSDSpace": [[16, "pathinrmsdspace"]], "RMSD": [[17, "rmsd"]], "RadiusOfGyration": [[18, "radiusofgyration"]], "RadiusOfGyrationSq": [[19, "radiusofgyrationsq"]], "ResidueCoordination": [[20, "residuecoordination"]], "SheetRMSDContent": [[21, "sheetrmsdcontent"]], "ShortestDistance": [[22, "shortestdistance"]], "StateDataReporter": [[23, "statedatareporter"]], "Torsion": [[24, "torsion"]], "TorsionSimilarity": [[25, "torsionsimilarity"]], "Collective Variables": [[26, "collective-variables"]], "Getting Started": [[27, "getting-started"]], "Introduction": [[27, "introduction"]], "Installation": [[27, "installation"]], "Usage": [[27, "usage"]], "Example": [[27, "example"]], "Collective Variable Package": [[28, "collective-variable-package"]], "Contents": [[28, "contents"]], "Indices and tables": [[28, "indices-and-tables"]], "Bibliography": [[29, "bibliography"]], "Reporting": [[30, "reporting"]], "Serialization": [[31, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "addtosystem() (cvpack.angle method)": [[0, "cvpack.Angle.addToSystem"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getmassunit() (cvpack.angle method)": [[0, "cvpack.Angle.getMassUnit"]], "getname() (cvpack.angle method)": [[0, "cvpack.Angle.getName"]], "getperiodicbounds() (cvpack.angle method)": [[0, "cvpack.Angle.getPeriodicBounds"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "addtosystem() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.addToSystem"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getmassunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getMassUnit"]], "getname() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getName"]], "getperiodicbounds() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getPeriodicBounds"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "addtosystem() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.addToSystem"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getmassunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getMassUnit"]], "getname() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getName"]], "getperiodicbounds() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getPeriodicBounds"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "cvwriter (class in cvpack.reporting)": [[3, "cvpack.reporting.CVWriter"]], "getheaders() (cvpack.reporting.cvwriter method)": [[3, "cvpack.reporting.CVWriter.getHeaders"]], "getvalues() (cvpack.reporting.cvwriter method)": [[3, "cvpack.reporting.CVWriter.getValues"]], "centroidfunction (class in cvpack)": [[4, "cvpack.CentroidFunction"]], "addtosystem() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.addToSystem"]], "geteffectivemass() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getEffectiveMass"]], "getmassunit() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getMassUnit"]], "getname() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getName"]], "getperiodicbounds() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getPeriodicBounds"]], "getunit() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getValue"]], "compositermsd (class in cvpack)": [[5, "cvpack.CompositeRMSD"]], "addtosystem() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.addToSystem"]], "geteffectivemass() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getEffectiveMass"]], "getmassunit() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getMassUnit"]], "getname() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getName"]], "getperiodicbounds() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getPeriodicBounds"]], "getunit() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getUnit"]], "getvalue() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getValue"]], "distance (class in cvpack)": [[6, "cvpack.Distance"]], "addtosystem() (cvpack.distance method)": [[6, "cvpack.Distance.addToSystem"]], "geteffectivemass() (cvpack.distance method)": [[6, "cvpack.Distance.getEffectiveMass"]], "getmassunit() (cvpack.distance method)": [[6, "cvpack.Distance.getMassUnit"]], "getname() (cvpack.distance method)": [[6, "cvpack.Distance.getName"]], "getperiodicbounds() (cvpack.distance method)": [[6, "cvpack.Distance.getPeriodicBounds"]], "getunit() (cvpack.distance method)": [[6, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[6, "cvpack.Distance.getValue"]], "helixanglecontent (class in cvpack)": [[7, "cvpack.HelixAngleContent"]], "addtosystem() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.addToSystem"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getEffectiveMass"]], "getmassunit() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getMassUnit"]], "getname() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getName"]], "getperiodicbounds() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getPeriodicBounds"]], "getunit() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getValue"]], "helixhbondcontent (class in cvpack)": [[8, "cvpack.HelixHBondContent"]], "addtosystem() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.addToSystem"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getEffectiveMass"]], "getmassunit() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getMassUnit"]], "getname() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getName"]], "getperiodicbounds() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getPeriodicBounds"]], "getunit() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getValue"]], "helixrmsdcontent (class in cvpack)": [[9, "cvpack.HelixRMSDContent"]], "addtosystem() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getMassUnit"]], "getname() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getName"]], "getperiodicbounds() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getPeriodicBounds"]], "getunit() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getValue"]], "helixtorsioncontent (class in cvpack)": [[10, "cvpack.HelixTorsionContent"]], "addtosystem() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.addToSystem"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getmassunit() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getMassUnit"]], "getname() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getName"]], "getperiodicbounds() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getPeriodicBounds"]], "getunit() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getValue"]], "metacvwriter (class in cvpack.reporting)": [[11, "cvpack.reporting.MetaCVWriter"]], "getheaders() (cvpack.reporting.metacvwriter method)": [[11, "cvpack.reporting.MetaCVWriter.getHeaders"]], "getvalues() (cvpack.reporting.metacvwriter method)": [[11, "cvpack.reporting.MetaCVWriter.getValues"]], "metacollectivevariable (class in cvpack)": [[12, "cvpack.MetaCollectiveVariable"]], "addtosystem() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.addToSystem"]], "geteffectivemass() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getEffectiveMass"]], "getinnereffectivemasses() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getInnerEffectiveMasses"]], "getinnervalues() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getInnerValues"]], "getinnervariables() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getInnerVariables"]], "getmassunit() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getMassUnit"]], "getname() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getName"]], "getparameterdefaultvalues() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getParameterDefaultValues"]], "getparameterderivatives() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getParameterDerivatives"]], "getparametervalues() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getParameterValues"]], "getperiodicbounds() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getPeriodicBounds"]], "getunit() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getUnit"]], "getvalue() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getValue"]], "numberofcontacts (class in cvpack)": [[13, "cvpack.NumberOfContacts"]], "addtosystem() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.addToSystem"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getEffectiveMass"]], "getmassunit() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getMassUnit"]], "getname() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getName"]], "getperiodicbounds() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getPeriodicBounds"]], "getunit() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getValue"]], "openmmforcewrapper (class in cvpack)": [[14, "cvpack.OpenMMForceWrapper"]], "addtosystem() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.addToSystem"]], "geteffectivemass() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getEffectiveMass"]], "getmassunit() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getMassUnit"]], "getname() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getName"]], "getperiodicbounds() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getPeriodicBounds"]], "getunit() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getUnit"]], "getvalue() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getValue"]], "pathincvspace (class in cvpack)": [[15, "cvpack.PathInCVSpace"]], "addtosystem() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.addToSystem"]], "geteffectivemass() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getEffectiveMass"]], "getmassunit() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getMassUnit"]], "getname() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getName"]], "getperiodicbounds() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getPeriodicBounds"]], "getunit() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getUnit"]], "getvalue() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getValue"]], "pathinrmsdspace (class in cvpack)": [[16, "cvpack.PathInRMSDSpace"]], "addtosystem() (cvpack.pathinrmsdspace method)": [[16, "cvpack.PathInRMSDSpace.addToSystem"]], "geteffectivemass() (cvpack.pathinrmsdspace method)": [[16, "cvpack.PathInRMSDSpace.getEffectiveMass"]], "getmassunit() (cvpack.pathinrmsdspace method)": [[16, "cvpack.PathInRMSDSpace.getMassUnit"]], "getname() (cvpack.pathinrmsdspace method)": [[16, "cvpack.PathInRMSDSpace.getName"]], "getperiodicbounds() (cvpack.pathinrmsdspace method)": [[16, "cvpack.PathInRMSDSpace.getPeriodicBounds"]], "getunit() (cvpack.pathinrmsdspace method)": [[16, "cvpack.PathInRMSDSpace.getUnit"]], "getvalue() (cvpack.pathinrmsdspace method)": [[16, "cvpack.PathInRMSDSpace.getValue"]], "rmsd (class in cvpack)": [[17, "cvpack.RMSD"]], "addtosystem() (cvpack.rmsd method)": [[17, "cvpack.RMSD.addToSystem"]], "geteffectivemass() (cvpack.rmsd method)": [[17, "cvpack.RMSD.getEffectiveMass"]], "getmassunit() (cvpack.rmsd method)": [[17, "cvpack.RMSD.getMassUnit"]], "getname() (cvpack.rmsd method)": [[17, "cvpack.RMSD.getName"]], "getnullbondforce() (cvpack.rmsd method)": [[17, "cvpack.RMSD.getNullBondForce"]], "getperiodicbounds() (cvpack.rmsd method)": [[17, "cvpack.RMSD.getPeriodicBounds"]], "getunit() (cvpack.rmsd method)": [[17, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[17, "cvpack.RMSD.getValue"]], "radiusofgyration (class in cvpack)": [[18, "cvpack.RadiusOfGyration"]], "addtosystem() (cvpack.radiusofgyration method)": [[18, "cvpack.RadiusOfGyration.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[18, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyration method)": [[18, "cvpack.RadiusOfGyration.getMassUnit"]], "getname() (cvpack.radiusofgyration method)": [[18, "cvpack.RadiusOfGyration.getName"]], "getperiodicbounds() (cvpack.radiusofgyration method)": [[18, "cvpack.RadiusOfGyration.getPeriodicBounds"]], "getunit() (cvpack.radiusofgyration method)": [[18, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[18, "cvpack.RadiusOfGyration.getValue"]], "radiusofgyrationsq (class in cvpack)": [[19, "cvpack.RadiusOfGyrationSq"]], "addtosystem() (cvpack.radiusofgyrationsq method)": [[19, "cvpack.RadiusOfGyrationSq.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[19, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyrationsq method)": [[19, "cvpack.RadiusOfGyrationSq.getMassUnit"]], "getname() (cvpack.radiusofgyrationsq method)": [[19, "cvpack.RadiusOfGyrationSq.getName"]], "getperiodicbounds() (cvpack.radiusofgyrationsq method)": [[19, "cvpack.RadiusOfGyrationSq.getPeriodicBounds"]], "getunit() (cvpack.radiusofgyrationsq method)": [[19, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[19, "cvpack.RadiusOfGyrationSq.getValue"]], "residuecoordination (class in cvpack)": [[20, "cvpack.ResidueCoordination"]], "addtosystem() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.addToSystem"]], "geteffectivemass() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.getEffectiveMass"]], "getmassunit() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.getMassUnit"]], "getname() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.getName"]], "getperiodicbounds() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.getPeriodicBounds"]], "getreferencevalue() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.getReferenceValue"]], "getunit() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.getUnit"]], "getvalue() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.getValue"]], "setreferencevalue() (cvpack.residuecoordination method)": [[20, "cvpack.ResidueCoordination.setReferenceValue"]], "sheetrmsdcontent (class in cvpack)": [[21, "cvpack.SheetRMSDContent"]], "addtosystem() (cvpack.sheetrmsdcontent method)": [[21, "cvpack.SheetRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[21, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.sheetrmsdcontent method)": [[21, "cvpack.SheetRMSDContent.getMassUnit"]], "getname() (cvpack.sheetrmsdcontent method)": [[21, "cvpack.SheetRMSDContent.getName"]], "getperiodicbounds() (cvpack.sheetrmsdcontent method)": [[21, "cvpack.SheetRMSDContent.getPeriodicBounds"]], "getunit() (cvpack.sheetrmsdcontent method)": [[21, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[21, "cvpack.SheetRMSDContent.getValue"]], "shortestdistance (class in cvpack)": [[22, "cvpack.ShortestDistance"]], "addtosystem() (cvpack.shortestdistance method)": [[22, "cvpack.ShortestDistance.addToSystem"]], "geteffectivemass() (cvpack.shortestdistance method)": [[22, "cvpack.ShortestDistance.getEffectiveMass"]], "getmassunit() (cvpack.shortestdistance method)": [[22, "cvpack.ShortestDistance.getMassUnit"]], "getname() (cvpack.shortestdistance method)": [[22, "cvpack.ShortestDistance.getName"]], "getperiodicbounds() (cvpack.shortestdistance method)": [[22, "cvpack.ShortestDistance.getPeriodicBounds"]], "getunit() (cvpack.shortestdistance method)": [[22, "cvpack.ShortestDistance.getUnit"]], "getvalue() (cvpack.shortestdistance method)": [[22, "cvpack.ShortestDistance.getValue"]], "statedatareporter (class in cvpack.reporting)": [[23, "cvpack.reporting.StateDataReporter"]], "torsion (class in cvpack)": [[24, "cvpack.Torsion"]], "addtosystem() (cvpack.torsion method)": [[24, "cvpack.Torsion.addToSystem"]], "geteffectivemass() (cvpack.torsion method)": [[24, "cvpack.Torsion.getEffectiveMass"]], "getmassunit() (cvpack.torsion method)": [[24, "cvpack.Torsion.getMassUnit"]], "getname() (cvpack.torsion method)": [[24, "cvpack.Torsion.getName"]], "getperiodicbounds() (cvpack.torsion method)": [[24, "cvpack.Torsion.getPeriodicBounds"]], "getunit() (cvpack.torsion method)": [[24, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[24, "cvpack.Torsion.getValue"]], "torsionsimilarity (class in cvpack)": [[25, "cvpack.TorsionSimilarity"]], "addtosystem() (cvpack.torsionsimilarity method)": [[25, "cvpack.TorsionSimilarity.addToSystem"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[25, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getmassunit() (cvpack.torsionsimilarity method)": [[25, "cvpack.TorsionSimilarity.getMassUnit"]], "getname() (cvpack.torsionsimilarity method)": [[25, "cvpack.TorsionSimilarity.getName"]], "getperiodicbounds() (cvpack.torsionsimilarity method)": [[25, "cvpack.TorsionSimilarity.getPeriodicBounds"]], "getunit() (cvpack.torsionsimilarity method)": [[25, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[25, "cvpack.TorsionSimilarity.getValue"]], "deserialize() (in module cvpack.serialization)": [[31, "cvpack.serialization.deserialize"]], "serialize() (in module cvpack.serialization)": [[31, "cvpack.serialization.serialize"]]}})