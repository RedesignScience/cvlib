Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CentroidFunction", "api/CompositeRMSD", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/NumberOfContacts", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/ResidueCoordination", "api/SheetRMSDContent", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CentroidFunction.rst", "api/CompositeRMSD.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/NumberOfContacts.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/ResidueCoordination.rst", "api/SheetRMSDContent.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CentroidFunction", "CompositeRMSD", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "NumberOfContacts", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "ResidueCoordination", "SheetRMSDContent", "Torsion", "TorsionSimilarity", "Python API", "Getting Started", "Collective Variable Package", "Bibliography", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "atom1": [0, 5, 16], "atom2": [0, 5, 16], "atom3": [0, 16], "pbc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "form": [0, 6, 8, 15, 16], "three": [0, 15], "atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "theta": [0, 6], "bf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], "mathrm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "aco": 0, "left": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "frac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "_": [0, 1, 3, 6, 7, 8, 15, 16, 17], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22], "cdot": [0, 16], "3": [0, 1, 2, 6, 7, 8, 9, 10, 11, 15, 16, 21], "right": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "where": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "j": [0, 1, 2, 3, 4, 8, 10, 12, 13, 14, 15, 16, 21], "_j": [0, 2, 3, 4, 8, 10, 12, 13, 14, 16], "_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20], "first": [0, 2, 5, 9, 10, 14, 16, 17], "second": [0, 2, 5, 9, 10, 14, 16, 17], "third": [0, 16], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "whether": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21], "period": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17], "boundari": [0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17], "condit": [0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "addparticl": [0, 1, 5, 16], "rang": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "addforc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "integr": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19], "verletintegr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "platform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "getplatformbynam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "vec3": [0, 4, 5, 11, 16], "po": [0, 16], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "digit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "570796": [0, 16], "rad": [0, 16], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "classmethod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "getargu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "inspect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "construct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "instanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22], "dictionari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "annot": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "tupl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "ordereddict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "radiusofgyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "item": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "f": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "iter": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "weighbymass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "geteffectivemass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "q": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "defin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "m_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "sum_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "m_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "dq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "round": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "precis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "after": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "decim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "scientif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "effici": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], "onli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "forc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], "should": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "evalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "alaninedipeptideimplicit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "peptid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "topologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "residu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "hoh": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "radius_of_gyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "setforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "setunusedforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "30": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "94693": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "getunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "measur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "setunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "ascend": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "order": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "unus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "own": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "search": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20], "wa": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "rais": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "runtimeerror": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "alreadi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "yaml_tag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "bytes_or_buff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "encod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "error": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "creat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "must": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "expos": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "buffer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "decod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "handler": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "otherwis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "result": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "__str__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "repr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "sy": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "getdefaultencod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "strict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "function": [1, 2, 3, 6, 7, 8, 9, 10, 14, 15, 16], "true": [1, 2, 3, 10, 14, 15, 19], "gener": [1, 3], "coordin": [1, 3, 4, 11, 14, 15], "split": [1, 3], "m": [1, 3, 4, 6, 7, 9, 12, 13, 15], "each": [1, 3, 4, 10, 14, 15, 17], "dot": [1, 3], "user": [1, 3], "th": [1, 3, 8, 11, 15, 17], "ani": [1, 2, 3, 10, 15, 22], "express": [1, 3], "support": [1, 3, 6, 7, 9, 11], "customcompoundbondforc": 1, "contain": [1, 3, 4, 6, 9, 11, 22], "thei": [1, 3, 9, 11], "pass": [1, 3], "keyword": [1, 3], "constructor": [1, 3], "scalar": [1, 3], "arrai": [1, 3], "length": [1, 3], "In": [1, 3, 7, 8, 10, 12, 13, 15, 17], "latter": [1, 3], "case": [1, 3, 8, 10, 12, 13, 15, 19], "assign": [1, 3], "correspond": [1, 2, 3, 4, 8, 11, 15], "It": [1, 3, 4, 11], "valid": [1, 3], "arraylik": 1, "indic": [1, 3, 4, 10, 11, 12, 13, 17], "2d": [1, 3], "like": [1, 2, 3], "shape": [1, 3], "per": [1, 2, 3], "1d": [1, 3], "assum": [1, 3, 15], "mmunit": [1, 2, 10, 14, 17], "compat": [1, 3], "md": [1, 3], "dalton": [1, 3], "distanc": [1, 2, 3, 7, 8, 10, 14, 15, 18, 20], "nanomet": [1, 3, 4, 7, 8, 10, 14, 15], "time": [1, 3, 16], "picosecond": [1, 3], "temperatur": [1, 3], "kelvin": [1, 3], "energi": [1, 2, 3, 21], "kilojoules_per_mol": [1, 2, 3], "angl": [1, 3, 6, 9, 16, 17, 18, 20], "radian": [1, 3], "doe": [1, 3, 4, 6, 9, 11], "have": [1, 3], "dimensionless": [1, 2, 3, 6, 7, 8, 9, 10, 14, 15, 17, 19], "t": 1, "scalarquant": 1, "quantiti": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15], "entri": [1, 3], "valueerror": [1, 3, 4, 6, 9, 14], "numpi": [1, 3], "np": [1, 3], "alaninedipeptidevacuum": [1, 12, 13], "angle1": 1, "5": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 21], "10": [1, 11, 21], "angle2": 1, "15": [1, 6, 7, 8], "20": 1, "colvar": [1, 3], "k": [1, 3, 7, 8, 15, 17], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 11], "pi": [1, 2], "7": [1, 2, 3, 11, 15, 19], "theta1": 1, "value_in_unit": 1, "theta2": 1, "500": 1, "429": 1, "479": 1, "kj": 1, "mol": 1, "fromopenmmforc": 1, "convert": 1, "typeerror": 1, "app": [1, 6, 7, 8, 9, 11, 14, 15, 19], "lysozymeimplicit": [1, 3, 6, 7, 8, 9, 14, 17, 19], "59": [1, 6, 7, 8, 9, 17, 19], "79": [1, 6, 7, 9, 17], "helix_cont": [1, 6, 7, 8, 9, 19], "helixtorsioncont": [1, 18, 19, 20], "num_atom": [1, 11, 12, 13, 19], "getnumparticl": [1, 8, 12, 13, 15, 19], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 3, 6, 7, 8, 9, 10, 14, 15], "addglobalparamet": 1, "getnam": [1, 2, 10, 19], "getforc": [1, 2, 10], "copi": 1, "harmonicbondforc": 1, "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": 1, "start": [1, 10, 20], "state": 1, "getstat": 1, "getenergi": 1, "getpotentialenergi": 1, "copy_valu": 1, "origin": [1, 8, 15], "6f": 1, "2094": 1, "312483": 1, "312": 1, "3239": 1, "795215": 1, "795": 1, "4226": 1, "051934": 1, "052": 1, "021558": 1, "17": [1, 9], "452849": 1, "45285": [1, 9], "group1": [2, 10, 14], "group2": [2, 10, 14], "nonbondedforc": [2, 10], "kilojoul": 2, "mole": 2, "strength": 2, "attract": 2, "between": [2, 3, 4, 5, 8, 10, 11, 14, 15, 17, 19], "two": [2, 3, 5, 10, 14], "s_": 2, "rm": [2, 4, 6, 7, 8, 9, 11, 15, 16, 17], "attr": 2, "e_": 2, "ref": [2, 4, 6, 8, 9, 11, 15], "bigg": 2, "g": [2, 3, 4, 8, 10, 14, 15], "_1": [2, 5, 10, 14], "substack": 2, "_2": [2, 5, 10, 14], "neq": [2, 10], "epsilon_": 2, "ij": 2, "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "4": [2, 4, 7, 8, 9, 10, 11, 15, 16, 21], "varepsilon_0": 2, "r_": [2, 8, 10, 15], "c": [2, 4, 6, 7, 8, 9, 15, 19, 21], "elec": 2, "cutoff": [2, 10, 11], "permitt": 2, "empti": 2, "space": 2, "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": 2, "sqrt": [2, 4, 8, 11, 12, 15], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "reduc": 2, "potenti": [2, 21], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": 2, "text": [2, 22], "provid": [2, 10], "coulomb": [2, 21], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 19], "consid": [2, 8, 9, 10, 14, 15], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "interact": 2, "give": 2, "lower": 2, "bound": [2, 3], "zero": 2, "upper": 2, "depend": 2, "detail": 2, "chosen": 2, "adopt": 2, "well": 2, "switch": [2, 10], "taken": [2, 10], "non": [2, 10], "exclus": [2, 10], "except": [2, 4, 10], "involv": [2, 10], "turn": [2, 10], "necessari": [2, 4, 11], "real": [2, 3, 6, 7, 8, 9, 10, 14, 15], "normal": [2, 6, 7, 8, 9, 10, 14, 15, 19], "One": [2, 10], "also": [2, 10], "obtain": [2, 10], "hostguestexplicit": [2, 10], "b2": [2, 10], "els": [2, 10], "extend": [2, 10], "cv1": 2, "cv2": 2, "100": [2, 11], "femtosecond": [2, 4, 10, 11, 19], "4912": 2, "1639e": 2, "07": 2, "nm": [2, 4, 5, 11, 12, 13], "49": 2, "125": [2, 14], "0021639": 2, "cv3": 2, "reiniti": [2, 3, 10, 14, 15], "preservest": [2, 3, 10, 14, 15], "2222": 2, "centroid": [3, 4, 11, 14], "big": [3, 17], "i_1": 3, "i_2": 3, "i_n": 3, "customcentroidbondforc": 3, "n_j": [3, 4], "weight": [3, 14], "redefin": 3, "m_j": 3, "total": [3, 4, 8, 10, 11, 12, 13, 14, 15], "arbitrari": 3, "_supportsarrai": 3, "dtype": 3, "_nestedsequ": 3, "float": [3, 10], "complex": 3, "byte": 3, "center": [3, 8, 11, 12, 13, 15], "instead": [3, 10, 12, 13, 15, 19], "geometr": [3, 12, 13], "out": 3, "itertool": [3, 8, 14, 15], "helic": 3, "res_coord": 3, "residuecoordin": [3, 18, 20], "115": 3, "124": 3, "126": 3, "135": 3, "stepfunct": [3, 8, 10, 14, 15], "step": [3, 7, 8, 10, 11, 14, 15], "33": [3, 7], "recomput": 3, "product": 3, "9": [3, 15, 21], "18": [3, 6, 17, 21], "g1": 3, "g2": 3, "referenceposit": [4, 11], "numatom": [4, 8, 11, 15], "composit": 4, "root": [4, 8, 11, 15], "mean": [4, 8, 11, 15], "squar": [4, 8, 11, 13, 15], "deviat": [4, 11], "rmsd": [4, 8, 15, 18, 20], "current": [4, 11], "d_": [4, 7, 11, 15], "crm": 4, "min_": [4, 11], "mathbb": [4, 11], "atop": [4, 11], "rotat": [4, 8, 11, 15], "matrix": [4, 8, 11, 15], "quaternion": [4, 11], "structur": [4, 11, 21], "respect": [4, 7, 9, 12, 13], "analog": 4, "To": [4, 10, 19], "you": 4, "instal": [4, 20], "cpp": 4, "conda": [4, 19], "packag": [4, 19], "http": [4, 21], "anaconda": 4, "org": [4, 21], "mdtool": [4, 19], "ndarrai": [4, 11], "sequenc": [4, 6, 7, 8, 9, 10, 11, 15, 19], "dict": [4, 11], "either": [4, 11], "map": [4, 11], "vector": [4, 11], "below": [4, 11], "disjoint": [4, 14], "includ": [4, 11, 14, 19], "those": [4, 11], "importerror": 4, "mm": 4, "pytest": 4, "hostguestvacuum": 4, "host_atom": 4, "guest_atom": 4, "try": 4, "composite_rmsd": 4, "skip": 4, "73205": 5, "thetarefer": 6, "88": 6, "degre": [6, 9, 17], "toler": [6, 9], "halfexpon": [6, 7, 9], "alpha": [6, 7, 8, 9, 15], "helix": [6, 7, 8, 9, 19], "content": [6, 7, 8, 9, 15, 19], "alpha_": [6, 7, 8, 9], "b_m": [6, 7, 9], "alpha_i": 6, "theta_": [6, 9], "tol": [6, 9], "carbon": [6, 7], "threshold": [6, 7, 8, 9, 10, 14, 15], "around": [6, 9], "smooth": [6, 7, 8, 9, 15], "boxcar": [6, 9], "2m": [6, 7, 9], "integ": [6, 7, 9, 15], "control": [6, 7, 9], "steep": [6, 7, 9], "note": [6, 9], "elev": [6, 9], "even": [6, 9], "power": [6, 9, 19], "contigu": [6, 7, 8, 9, 15], "singl": [6, 7, 8, 9, 15], "chain": [6, 7, 8, 9, 15], "terminu": [6, 7, 8, 9, 15], "due": [6, 7, 9], "limit": [6, 7, 8, 9, 15], "maximum": [6, 7, 9], "37": [6, 7, 9], "some": [6, 9], "ly": [6, 7, 8, 9], "asp": [6, 7, 8, 9, 14], "glu": [6, 7, 8, 9, 14, 15], "il": [6, 7, 8, 9], "leu": [6, 7, 8, 9], "76058": 6, "thresholddist": [7, 10, 14], "hydrogen": [7, 14], "bond": [7, 11], "hb": 7, "h": [7, 8, 10, 14, 15], "o": [7, 8, 15], "_k": [7, 8, 15], "oxygen": 7, "backbon": [7, 17], "nitrogen": 7, "addit": [7, 15], "88038": 7, "thresholdrmsd": [8, 15], "08": [8, 15], "8": [8, 9, 15], "r_0": [8, 10, 14, 15], "repres": [8, 15], "select": [8, 15, 17], "same": [8, 11, 15], "ideal": [8, 15], "configur": [8, 15], "whose": [8, 15], "everi": [8, 15], "beta": [8, 15, 21], "six": [8, 15], "involvend": [8, 15], "thu": [8, 15], "compris": [8, 15], "glycin": [8, 15], "miss": [8, 15], "replac": [8, 12, 13, 15], "hat": [8, 11, 15], "rel": [8, 11, 15], "geometri": [8, 11, 15], "minim": [8, 15], "done": [8, 15], "divid": [8, 15], "n_": [8, 15], "introduc": [8, 15], "shown": [8, 15], "abov": [8, 15, 16], "ident": [8, 15], "paper": [8, 15], "written": [8, 15], "numer": [8, 15, 16], "safe": [8, 15], "alpharmsd": 8, "plume": [8, 15, 17], "v2": [8, 15], "present": [8, 15], "implement": [8, 15], "leq": [8, 15], "1024": [8, 15], "calcul": [8, 14, 15, 21], "requir": [8, 15], "close": [8, 15, 19], "match": [8, 15], "islic": [8, 14, 15], "80": [8, 19], "getnumresidueblock": [8, 15], "16": 8, "981": 8, "phirefer": 9, "63": 9, "psirefer": 9, "41": 9, "25": 9, "ramachandran": 9, "phi": [9, 17], "psi": 9, "phi_i": 9, "phi_": 9, "psi_i": 9, "psi_": 9, "dihedr": 9, "refenr": 9, "last": [9, 15], "penultim": 9, "cutofffactor": 10, "switchfactor": 10, "contact": [10, 14], "equal": [10, 14], "made": [10, 14], "For": [10, 14, 15], "trajectori": [10, 14, 17, 19], "analysi": [10, 14, 19], "fine": [10, 14], "make": [10, 14], "heavisid": [10, 14], "molecular": [10, 14, 21], "dynam": [10, 14, 21], "howev": [10, 14, 15], "continu": [10, 14], "approxim": [10, 14], "geq": [10, 14], "By": [10, 14], "follow": [10, 14, 19], "12": [10, 14], "fact": 10, "r_c": 10, "x_c": 10, "typic": 10, "appli": 10, "so": 10, "avoid": 10, "discontinu": 10, "smoothli": 10, "off": 10, "x_": 10, "do": 10, "abruptli": 10, "allow": 10, "both": [10, 15], "self": 10, "ignor": 10, "pair": [10, 17], "distinct": [10, 11], "count": 10, "onc": 10, "thereof": [10, 14], "being": [10, 14], "factor": 10, "multipli": 10, "nc": 10, "nc_normal": 10, "superscript": 11, "denot": 11, "problem": 11, "belong": 11, "molecul": [11, 19], "possibl": [11, 14, 19], "circumv": 11, "issu": 11, "call": [11, 17], "getnullbondforc": 11, "ad": [11, 19], "getnumatom": 11, "1231383": 11, "null": 11, "connect": 11, "graph": 11, "waterbox": 11, "box_edg": 11, "angstrom": 11, "104363": 11, "radiu": [12, 13], "gyrat": [12, 13], "r_g": [12, 13], "_c": [12, 13], "_m": [12, 13], "lack": 12, "parallel": [12, 13, 15], "might": [12, 13], "slow": 12, "larg": [12, 13], "radiusofgyrationsq": [12, 18, 20], "prefer": [12, 13], "2951431": 12, "better": 13, "than": 13, "over": 13, "rgsq": 13, "0871": 13, "residuegroup1": 14, "residuegroup2": 14, "includehydrogen": 14, "ha": 14, "142": 14, "trp": 14, "asn": 14, "gln": 14, "thr": [14, 15], "156": 14, "pro": 14, "gly": 14, "residue_coordin": 14, "customintegr": 14, "26": 14, "setreferencevalu": 14, "getreferencevalu": 14, "blocksiz": 15, "sheet": [15, 21], "beta_": 15, "min": 15, "minimum": 15, "subset": 15, "protein": [15, 19, 21], "antiparallel": 15, "differ": [15, 19], "minimim": 15, "choos": 15, "partit": 15, "block": 15, "n_1": 15, "n_2": 15, "ldot": 15, "n_m": 15, "compos": 15, "consecut": 15, "next": 15, "definit": 15, "modifi": 15, "l_": 15, "l_k": 15, "n_i": 15, "separ": [15, 16], "n_k": 15, "antibetarmsd": 15, "parabetarmsd": 15, "srcimplicit": 15, "68": 15, "82": 15, "tyr": 15, "ala": 15, "val": 15, "sheet_cont": 15, "28": 15, "0466": 15, "blockwise_sheet_cont": 15, "98594": 15, "atom4": 16, "four": [16, 17, 19], "varphi": 16, "atan2": 16, "u": 16, "arctang": 16, "receiv": 16, "denomin": 16, "fourth": 16, "firstlist": 17, "secondlist": 17, "similar": 17, "torsion": [17, 18, 20], "co": 17, "1st": 17, "2nd": 17, "kth": 17, "dihcor": 17, "mdtraj": 17, "traj": 17, "from_openmm": 17, "phi_atom": 17, "compute_phi": 17, "valid_atom": 17, "top": 17, "resid": 17, "torsion_similar": 17, "65992": 17, "atomicfunct": [18, 20], "attractionstrength": [18, 20], "centroidfunct": [18, 20], "compositermsd": [18, 20], "helixanglecont": [18, 19, 20], "helixhbondcont": [18, 19, 20], "helixrmsdcont": [18, 19, 20], "numberofcontact": [18, 20], "sheetrmsdcont": [18, 20], "torsionsimilar": [18, 20], "python": [19, 20], "pre": 19, "cv": 19, "customcvforc": 19, "biasvari": 19, "metadynam": 19, "simul": 19, "collectivevari": 19, "uf": 19, "har": 19, "environ": 19, "run": 19, "command": 19, "forg": 19, "Or": 19, "mamba": 19, "your": 19, "script": 19, "jupyt": 19, "notebook": 19, "show": 19, "how": 19, "quantifi": 19, "modul": [19, 20], "t4": 19, "lysozym": 19, "l99a": 19, "longest": 19, "occur": 19, "lys60": 19, "arg80": 19, "final": 19, "seven": 19, "place": 19, "output": 19, "9873989": 19, "93414": 19, "9946999": 19, "918571": 19, "expect": 19, "matter": 19, "star": 20, "introduct": 20, "usag": 20, "api": 20, "serial": 20, "deseri": [20, 22], "bibliographi": 20, "page": 20, "christoph": 21, "chipot": 21, "andrew": 21, "pohoril": 21, "editor": 21, "free": 21, "springer": 21, "berlin": 21, "heidelberg": 21, "2007": 21, "url": 21, "doi": 21, "1007": 21, "978": 21, "540": 21, "38448": 21, "gabriela": 21, "b": 21, "correa": 21, "\u00e9": 21, "ssica": 21, "l": 21, "maciel": 21, "frederico": 21, "w": 21, "tavar": 21, "charll": 21, "abreu": 21, "formul": 21, "concert": 21, "alchem": 21, "van": 21, "der": 21, "waal": 21, "compon": 21, "solvat": 21, "journal": 21, "chemic": 21, "theori": 21, "5876": 21, "5889": 21, "octob": 21, "2022": 21, "1021": 21, "ac": 21, "jctc": 21, "2c00563": 21, "fabio": 21, "pietrucci": 21, "alessandro": 21, "laio": 21, "explor": 21, "applic": 21, "sh": 21, "gb": 21, "2197": 21, "2201": 21, "aug": 21, "2009": 21, "ct900202f": 21, "sven": 21, "hovm\u00f6ller": 21, "tupe": 21, "zhou": 21, "toma": 21, "ohlson": 21, "conform": 21, "amino": 21, "acid": 21, "acta": 21, "crystallographica": 21, "section": 21, "biolog": 21, "crystallographi": 21, "58": 21, "768": 21, "776": 21, "apr": 21, "2002": 21, "1107": 21, "s0907444902003359": 21, "marcella": 21, "iannuzzi": 21, "michel": 21, "parrinello": 21, "reactiv": 21, "surfac": 21, "car": 21, "physic": 21, "review": 21, "letter": 21, "jun": 21, "2003": 21, "1103": 21, "physrevlett": 21, "90": 21, "238302": 21, "obj": 22, "iostream": 22, "io": 22, "stream": 22, "write": 22, "mode": 22, "stringio": 22, "read": 22, "seek": 22, "new_object": 22}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [3, 0, 1, "", "CentroidFunction"], [4, 0, 1, "", "CompositeRMSD"], [5, 0, 1, "", "Distance"], [6, 0, 1, "", "HelixAngleContent"], [7, 0, 1, "", "HelixHBondContent"], [8, 0, 1, "", "HelixRMSDContent"], [9, 0, 1, "", "HelixTorsionContent"], [10, 0, 1, "", "NumberOfContacts"], [11, 0, 1, "", "RMSD"], [12, 0, 1, "", "RadiusOfGyration"], [13, 0, 1, "", "RadiusOfGyrationSq"], [14, 0, 1, "", "ResidueCoordination"], [15, 0, 1, "", "SheetRMSDContent"], [16, 0, 1, "", "Torsion"], [17, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "getArguments"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"], [0, 1, 1, "", "setUnit"], [0, 1, 1, "", "setUnusedForceGroup"], [0, 1, 1, "", "yaml_tag"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getArguments"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"], [1, 1, 1, "", "setUnit"], [1, 1, 1, "", "setUnusedForceGroup"], [1, 1, 1, "", "yaml_tag"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "getArguments"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"], [2, 1, 1, "", "setUnit"], [2, 1, 1, "", "setUnusedForceGroup"], [2, 1, 1, "", "yaml_tag"]], "cvpack.CentroidFunction": [[3, 1, 1, "", "getArguments"], [3, 1, 1, "", "getEffectiveMass"], [3, 1, 1, "", "getUnit"], [3, 1, 1, "", "getValue"], [3, 1, 1, "", "setUnit"], [3, 1, 1, "", "setUnusedForceGroup"], [3, 1, 1, "", "yaml_tag"]], "cvpack.CompositeRMSD": [[4, 1, 1, "", "getArguments"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"], [4, 1, 1, "", "setUnit"], [4, 1, 1, "", "setUnusedForceGroup"], [4, 1, 1, "", "yaml_tag"]], "cvpack.Distance": [[5, 1, 1, "", "getArguments"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"], [5, 1, 1, "", "setUnit"], [5, 1, 1, "", "setUnusedForceGroup"], [5, 1, 1, "", "yaml_tag"]], "cvpack.HelixAngleContent": [[6, 1, 1, "", "getArguments"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"], [6, 1, 1, "", "setUnit"], [6, 1, 1, "", "setUnusedForceGroup"], [6, 1, 1, "", "yaml_tag"]], "cvpack.HelixHBondContent": [[7, 1, 1, "", "getArguments"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"], [7, 1, 1, "", "setUnit"], [7, 1, 1, "", "setUnusedForceGroup"], [7, 1, 1, "", "yaml_tag"]], "cvpack.HelixRMSDContent": [[8, 1, 1, "", "getArguments"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"], [8, 1, 1, "", "setUnit"], [8, 1, 1, "", "setUnusedForceGroup"], [8, 1, 1, "", "yaml_tag"]], "cvpack.HelixTorsionContent": [[9, 1, 1, "", "getArguments"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"], [9, 1, 1, "", "setUnit"], [9, 1, 1, "", "setUnusedForceGroup"], [9, 1, 1, "", "yaml_tag"]], "cvpack.NumberOfContacts": [[10, 1, 1, "", "getArguments"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"], [10, 1, 1, "", "setUnit"], [10, 1, 1, "", "setUnusedForceGroup"], [10, 1, 1, "", "yaml_tag"]], "cvpack.RMSD": [[11, 1, 1, "", "getArguments"], [11, 1, 1, "", "getEffectiveMass"], [11, 1, 1, "", "getNullBondForce"], [11, 1, 1, "", "getUnit"], [11, 1, 1, "", "getValue"], [11, 1, 1, "", "setUnit"], [11, 1, 1, "", "setUnusedForceGroup"], [11, 1, 1, "", "yaml_tag"]], "cvpack.RadiusOfGyration": [[12, 1, 1, "", "getArguments"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"], [12, 1, 1, "", "setUnit"], [12, 1, 1, "", "setUnusedForceGroup"], [12, 1, 1, "", "yaml_tag"]], "cvpack.RadiusOfGyrationSq": [[13, 1, 1, "", "getArguments"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"], [13, 1, 1, "", "setUnit"], [13, 1, 1, "", "setUnusedForceGroup"], [13, 1, 1, "", "yaml_tag"]], "cvpack.ResidueCoordination": [[14, 1, 1, "", "getArguments"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getReferenceValue"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"], [14, 1, 1, "", "setReferenceValue"], [14, 1, 1, "", "setUnit"], [14, 1, 1, "", "setUnusedForceGroup"], [14, 1, 1, "", "yaml_tag"]], "cvpack.SheetRMSDContent": [[15, 1, 1, "", "getArguments"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"], [15, 1, 1, "", "setUnit"], [15, 1, 1, "", "setUnusedForceGroup"], [15, 1, 1, "", "yaml_tag"]], "cvpack.Torsion": [[16, 1, 1, "", "getArguments"], [16, 1, 1, "", "getEffectiveMass"], [16, 1, 1, "", "getUnit"], [16, 1, 1, "", "getValue"], [16, 1, 1, "", "setUnit"], [16, 1, 1, "", "setUnusedForceGroup"], [16, 1, 1, "", "yaml_tag"]], "cvpack.TorsionSimilarity": [[17, 1, 1, "", "getArguments"], [17, 1, 1, "", "getEffectiveMass"], [17, 1, 1, "", "getUnit"], [17, 1, 1, "", "getValue"], [17, 1, 1, "", "setUnit"], [17, 1, 1, "", "setUnusedForceGroup"], [17, 1, 1, "", "yaml_tag"]], "cvpack.serializer": [[22, 2, 1, "", "deserialize"], [22, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "centroidfunct": 3, "compositermsd": 4, "distanc": 5, "helixanglecont": 6, "helixhbondcont": 7, "helixrmsdcont": 8, "helixtorsioncont": 9, "numberofcontact": 10, "rmsd": 11, "radiusofgyr": 12, "radiusofgyrationsq": 13, "residuecoordin": 14, "sheetrmsdcont": 15, "torsion": 16, "torsionsimilar": 17, "python": 18, "api": 18, "get": 19, "start": 19, "introduct": 19, "instal": 19, "usag": 19, "exampl": 19, "collect": 20, "variabl": 20, "packag": 20, "content": 20, "indic": 20, "tabl": 20, "bibliographi": 21, "serial": 22}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CentroidFunction": [[3, "centroidfunction"]], "CompositeRMSD": [[4, "compositermsd"]], "Distance": [[5, "distance"]], "HelixAngleContent": [[6, "helixanglecontent"]], "HelixHBondContent": [[7, "helixhbondcontent"]], "HelixRMSDContent": [[8, "helixrmsdcontent"]], "HelixTorsionContent": [[9, "helixtorsioncontent"]], "NumberOfContacts": [[10, "numberofcontacts"]], "RMSD": [[11, "rmsd"]], "RadiusOfGyration": [[12, "radiusofgyration"]], "RadiusOfGyrationSq": [[13, "radiusofgyrationsq"]], "ResidueCoordination": [[14, "residuecoordination"]], "SheetRMSDContent": [[15, "sheetrmsdcontent"]], "Torsion": [[16, "torsion"]], "TorsionSimilarity": [[17, "torsionsimilarity"]], "Python API": [[18, "python-api"]], "Getting Started": [[19, "getting-started"]], "Introduction": [[19, "introduction"]], "Installation": [[19, "installation"]], "Usage": [[19, "usage"]], "Example": [[19, "example"]], "Collective Variable Package": [[20, "collective-variable-package"]], "Contents": [[20, "contents"]], "Indices and tables": [[20, "indices-and-tables"]], "Bibliography": [[21, "bibliography"]], "Serialization": [[22, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "getarguments() (cvpack.angle class method)": [[0, "cvpack.Angle.getArguments"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "setunit() (cvpack.angle method)": [[0, "cvpack.Angle.setUnit"]], "setunusedforcegroup() (cvpack.angle method)": [[0, "cvpack.Angle.setUnusedForceGroup"]], "yaml_tag() (cvpack.angle method)": [[0, "cvpack.Angle.yaml_tag"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "getarguments() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.getArguments"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "setunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.setUnit"]], "setunusedforcegroup() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.setUnusedForceGroup"]], "yaml_tag() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.yaml_tag"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "getarguments() (cvpack.attractionstrength class method)": [[2, "cvpack.AttractionStrength.getArguments"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "setunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.setUnit"]], "setunusedforcegroup() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.setUnusedForceGroup"]], "yaml_tag() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.yaml_tag"]], "centroidfunction (class in cvpack)": [[3, "cvpack.CentroidFunction"]], "getarguments() (cvpack.centroidfunction class method)": [[3, "cvpack.CentroidFunction.getArguments"]], "geteffectivemass() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getEffectiveMass"]], "getunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getValue"]], "setunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.setUnit"]], "setunusedforcegroup() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.setUnusedForceGroup"]], "yaml_tag() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.yaml_tag"]], "compositermsd (class in cvpack)": [[4, "cvpack.CompositeRMSD"]], "getarguments() (cvpack.compositermsd class method)": [[4, "cvpack.CompositeRMSD.getArguments"]], "geteffectivemass() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getEffectiveMass"]], "getunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getUnit"]], "getvalue() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getValue"]], "setunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.setUnit"]], "setunusedforcegroup() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.setUnusedForceGroup"]], "yaml_tag() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.yaml_tag"]], "distance (class in cvpack)": [[5, "cvpack.Distance"]], "getarguments() (cvpack.distance class method)": [[5, "cvpack.Distance.getArguments"]], "geteffectivemass() (cvpack.distance method)": [[5, "cvpack.Distance.getEffectiveMass"]], "getunit() (cvpack.distance method)": [[5, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[5, "cvpack.Distance.getValue"]], "setunit() (cvpack.distance method)": [[5, "cvpack.Distance.setUnit"]], "setunusedforcegroup() (cvpack.distance method)": [[5, "cvpack.Distance.setUnusedForceGroup"]], "yaml_tag() (cvpack.distance method)": [[5, "cvpack.Distance.yaml_tag"]], "helixanglecontent (class in cvpack)": [[6, "cvpack.HelixAngleContent"]], "getarguments() (cvpack.helixanglecontent class method)": [[6, "cvpack.HelixAngleContent.getArguments"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getEffectiveMass"]], "getunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getValue"]], "setunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.setUnit"]], "setunusedforcegroup() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.setUnusedForceGroup"]], "yaml_tag() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.yaml_tag"]], "helixhbondcontent (class in cvpack)": [[7, "cvpack.HelixHBondContent"]], "getarguments() (cvpack.helixhbondcontent class method)": [[7, "cvpack.HelixHBondContent.getArguments"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getEffectiveMass"]], "getunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getValue"]], "setunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.setUnit"]], "setunusedforcegroup() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.setUnusedForceGroup"]], "yaml_tag() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.yaml_tag"]], "helixrmsdcontent (class in cvpack)": [[8, "cvpack.HelixRMSDContent"]], "getarguments() (cvpack.helixrmsdcontent class method)": [[8, "cvpack.HelixRMSDContent.getArguments"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getValue"]], "setunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.setUnit"]], "setunusedforcegroup() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.setUnusedForceGroup"]], "yaml_tag() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.yaml_tag"]], "helixtorsioncontent (class in cvpack)": [[9, "cvpack.HelixTorsionContent"]], "getarguments() (cvpack.helixtorsioncontent class method)": [[9, "cvpack.HelixTorsionContent.getArguments"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getValue"]], "setunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.setUnit"]], "setunusedforcegroup() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.setUnusedForceGroup"]], "yaml_tag() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.yaml_tag"]], "numberofcontacts (class in cvpack)": [[10, "cvpack.NumberOfContacts"]], "getarguments() (cvpack.numberofcontacts class method)": [[10, "cvpack.NumberOfContacts.getArguments"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.getEffectiveMass"]], "getunit() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.getValue"]], "setunit() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.setUnit"]], "setunusedforcegroup() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.setUnusedForceGroup"]], "yaml_tag() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.yaml_tag"]], "rmsd (class in cvpack)": [[11, "cvpack.RMSD"]], "getarguments() (cvpack.rmsd class method)": [[11, "cvpack.RMSD.getArguments"]], "geteffectivemass() (cvpack.rmsd method)": [[11, "cvpack.RMSD.getEffectiveMass"]], "getnullbondforce() (cvpack.rmsd method)": [[11, "cvpack.RMSD.getNullBondForce"]], "getunit() (cvpack.rmsd method)": [[11, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[11, "cvpack.RMSD.getValue"]], "setunit() (cvpack.rmsd method)": [[11, "cvpack.RMSD.setUnit"]], "setunusedforcegroup() (cvpack.rmsd method)": [[11, "cvpack.RMSD.setUnusedForceGroup"]], "yaml_tag() (cvpack.rmsd method)": [[11, "cvpack.RMSD.yaml_tag"]], "radiusofgyration (class in cvpack)": [[12, "cvpack.RadiusOfGyration"]], "getarguments() (cvpack.radiusofgyration class method)": [[12, "cvpack.RadiusOfGyration.getArguments"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[12, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getunit() (cvpack.radiusofgyration method)": [[12, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[12, "cvpack.RadiusOfGyration.getValue"]], "setunit() (cvpack.radiusofgyration method)": [[12, "cvpack.RadiusOfGyration.setUnit"]], "setunusedforcegroup() (cvpack.radiusofgyration method)": [[12, "cvpack.RadiusOfGyration.setUnusedForceGroup"]], "yaml_tag() (cvpack.radiusofgyration method)": [[12, "cvpack.RadiusOfGyration.yaml_tag"]], "radiusofgyrationsq (class in cvpack)": [[13, "cvpack.RadiusOfGyrationSq"]], "getarguments() (cvpack.radiusofgyrationsq class method)": [[13, "cvpack.RadiusOfGyrationSq.getArguments"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[13, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getunit() (cvpack.radiusofgyrationsq method)": [[13, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[13, "cvpack.RadiusOfGyrationSq.getValue"]], "setunit() (cvpack.radiusofgyrationsq method)": [[13, "cvpack.RadiusOfGyrationSq.setUnit"]], "setunusedforcegroup() (cvpack.radiusofgyrationsq method)": [[13, "cvpack.RadiusOfGyrationSq.setUnusedForceGroup"]], "yaml_tag() (cvpack.radiusofgyrationsq method)": [[13, "cvpack.RadiusOfGyrationSq.yaml_tag"]], "residuecoordination (class in cvpack)": [[14, "cvpack.ResidueCoordination"]], "getarguments() (cvpack.residuecoordination class method)": [[14, "cvpack.ResidueCoordination.getArguments"]], "geteffectivemass() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.getEffectiveMass"]], "getreferencevalue() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.getReferenceValue"]], "getunit() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.getUnit"]], "getvalue() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.getValue"]], "setreferencevalue() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.setReferenceValue"]], "setunit() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.setUnit"]], "setunusedforcegroup() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.setUnusedForceGroup"]], "yaml_tag() (cvpack.residuecoordination method)": [[14, "cvpack.ResidueCoordination.yaml_tag"]], "sheetrmsdcontent (class in cvpack)": [[15, "cvpack.SheetRMSDContent"]], "getarguments() (cvpack.sheetrmsdcontent class method)": [[15, "cvpack.SheetRMSDContent.getArguments"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[15, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getunit() (cvpack.sheetrmsdcontent method)": [[15, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[15, "cvpack.SheetRMSDContent.getValue"]], "setunit() (cvpack.sheetrmsdcontent method)": [[15, "cvpack.SheetRMSDContent.setUnit"]], "setunusedforcegroup() (cvpack.sheetrmsdcontent method)": [[15, "cvpack.SheetRMSDContent.setUnusedForceGroup"]], "yaml_tag() (cvpack.sheetrmsdcontent method)": [[15, "cvpack.SheetRMSDContent.yaml_tag"]], "torsion (class in cvpack)": [[16, "cvpack.Torsion"]], "getarguments() (cvpack.torsion class method)": [[16, "cvpack.Torsion.getArguments"]], "geteffectivemass() (cvpack.torsion method)": [[16, "cvpack.Torsion.getEffectiveMass"]], "getunit() (cvpack.torsion method)": [[16, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[16, "cvpack.Torsion.getValue"]], "setunit() (cvpack.torsion method)": [[16, "cvpack.Torsion.setUnit"]], "setunusedforcegroup() (cvpack.torsion method)": [[16, "cvpack.Torsion.setUnusedForceGroup"]], "yaml_tag() (cvpack.torsion method)": [[16, "cvpack.Torsion.yaml_tag"]], "torsionsimilarity (class in cvpack)": [[17, "cvpack.TorsionSimilarity"]], "getarguments() (cvpack.torsionsimilarity class method)": [[17, "cvpack.TorsionSimilarity.getArguments"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[17, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getunit() (cvpack.torsionsimilarity method)": [[17, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[17, "cvpack.TorsionSimilarity.getValue"]], "setunit() (cvpack.torsionsimilarity method)": [[17, "cvpack.TorsionSimilarity.setUnit"]], "setunusedforcegroup() (cvpack.torsionsimilarity method)": [[17, "cvpack.TorsionSimilarity.setUnusedForceGroup"]], "yaml_tag() (cvpack.torsionsimilarity method)": [[17, "cvpack.TorsionSimilarity.yaml_tag"]], "deserialize() (in module cvpack.serializer)": [[22, "cvpack.serializer.deserialize"]], "serialize() (in module cvpack.serializer)": [[22, "cvpack.serializer.serialize"]]}})