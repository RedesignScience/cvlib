Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CVWriter", "api/CentroidFunction", "api/CompositeRMSD", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/MetaCVWriter", "api/MetaCollectiveVariable", "api/NumberOfContacts", "api/OpenMMForceWrapper", "api/PathInCVSpace", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/ResidueCoordination", "api/SheetRMSDContent", "api/StateDataReporter", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "reporting", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CVWriter.rst", "api/CentroidFunction.rst", "api/CompositeRMSD.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/MetaCVWriter.rst", "api/MetaCollectiveVariable.rst", "api/NumberOfContacts.rst", "api/OpenMMForceWrapper.rst", "api/PathInCVSpace.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/ResidueCoordination.rst", "api/SheetRMSDContent.rst", "api/StateDataReporter.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "reporting.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CVWriter", "CentroidFunction", "CompositeRMSD", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "MetaCVWriter", "MetaCollectiveVariable", "NumberOfContacts", "OpenMMForceWrapper", "PathInCVSpace", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "ResidueCoordination", "SheetRMSDContent", "StateDataReporter", "Torsion", "TorsionSimilarity", "Collective Variables", "Getting Started", "Collective Variable Package", "Bibliography", "Reporting", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29], "atom1": [0, 6, 22], "atom2": [0, 6, 22], "atom3": [0, 22], "pbc": [0, 1, 4, 6, 7, 8, 10, 17, 18, 19, 22, 23, 29], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 29], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29], "form": [0, 7, 9, 20, 22], "three": [0, 1, 4, 20], "atom": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23], "theta": [0, 7, 14], "bf": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "r": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27], "mathrm": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "aco": 0, "left": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "frac": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "_": [0, 1, 4, 7, 8, 9, 14, 16, 20, 22, 23], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29], "cdot": [0, 22], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27], "right": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "where": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "j": [0, 1, 2, 4, 5, 9, 13, 17, 18, 19, 20, 22, 27], "_j": [0, 2, 4, 5, 9, 13, 17, 18, 19, 22], "_i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29], "int": [0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 16, 17, 18, 20, 21, 22, 23], "index": [0, 1, 2, 4, 5, 6, 13, 15, 16, 20, 22, 26], "first": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "second": [0, 2, 6, 10, 13, 19, 22, 23], "third": [0, 2, 22], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "whether": [0, 1, 2, 4, 6, 7, 8, 9, 10, 13, 17, 18, 19, 20, 22, 23], "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27], "period": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "boundari": [0, 1, 2, 4, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 22, 23], "condit": [0, 1, 2, 4, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 22, 23], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "addparticl": [0, 1, 6, 22], "rang": [0, 1, 4, 6, 7, 8, 9, 10, 16, 17, 18, 20, 22], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29], "addforc": [0, 1, 6, 16, 22, 25], "integr": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 25], "verletintegr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "platform": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25], "getplatformbynam": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25], "refer": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "vec3": [0, 1, 4, 5, 6, 14, 15, 16, 22], "po": [0, 22], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29], "570796": 0, "rad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "addtosystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "setunusedforcegroup": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "add": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "thi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "an": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29], "which": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "should": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "ad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "forc": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "group": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 29], "set": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "avail": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "geteffectivemass": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "allowreiniti": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "comput": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "given": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "q": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "defin": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "m_": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "eff": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "sum_": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "n": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "m_i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "dq": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "d": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27], "share": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "other": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "evalu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "its": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "requir": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "reiniti": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "twice": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "each": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "call": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "ineffici": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "avoid": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "To": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "allow": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "behavior": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "must": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "By": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "default": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27], "necessari": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 29], "quantiti": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "In": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "we": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "backbon": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "dihedr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "radiu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "gyrat": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "alanin": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "dipeptid": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "molecul": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "water": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "alaninedipeptideexplicit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "top": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "mdtraj_topologi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "backbone_atom": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "select": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "c": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27], "ca": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "resid": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "phi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "torsion": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26], "4": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27], "psi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "5": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27], "radius_of_gyr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 29], "radiusofgyr": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 29], "cv": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "05119": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "nm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "05186": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "30": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "946": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "getmassunit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "measur": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "getnam": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25], "getperiodicbound": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "bound": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "union": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "getunit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "1415": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "29514": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "function": [1, 2, 4, 7, 8, 9, 10, 12, 13, 19, 20, 22], "periodicbound": [1, 4, 12, 14], "atomic_funct": 1, "A": [1, 2, 3, 4, 5, 9, 11, 12, 13, 14, 15, 16, 20, 21, 23, 27, 29], "gener": [1, 4], "coordin": [1, 4, 5, 16, 19, 20], "m": [1, 4, 5, 7, 8, 10, 17, 18, 20], "f": [1, 2, 4, 11, 12, 13, 15, 21, 25], "dot": [1, 4], "user": [1, 4, 12], "th": [1, 4, 9, 12, 15, 16, 20, 23], "string": [1, 4, 12, 14, 21], "can": [1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21], "ani": [1, 2, 4, 12, 13, 20, 21, 23, 29], "express": [1, 4, 12], "support": [1, 4, 7, 8, 10, 12, 16], "customcompoundbondforc": [1, 4, 12], "contain": [1, 3, 4, 5, 7, 10, 11, 12, 14, 16, 21, 29], "pass": [1, 4, 12, 14, 21], "one": [1, 2, 4, 9, 12, 20, 25], "wai": [1, 4, 12], "semicolon": [1, 4, 12], "separ": [1, 4, 12, 20, 22], "definit": [1, 4, 12, 20], "describ": [1, 4, 12], "document": [1, 4, 12], "case": [1, 2, 4, 9, 12, 13, 17, 18, 20, 25], "same": [1, 2, 4, 9, 12, 16, 20], "all": [1, 4, 5, 12, 16, 20, 23], "1d": [1, 4], "arrai": [1, 4, 15], "list": [1, 3, 4, 7, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 23], "length": [1, 4], "keyword": [1, 4, 12, 21], "argument": [1, 4, 5, 12, 16, 21, 22], "constructor": [1, 4, 12, 21], "assign": [1, 4], "differ": [1, 4, 15, 20, 25], "scalar": [1, 4, 12], "appli": [1, 4, 12, 13], "becom": [1, 2, 4, 12], "fly": [1, 4, 12], "modif": [1, 4, 12], "dure": [1, 4, 12], "simul": [1, 3, 4, 11, 12, 21, 25], "via": [1, 4, 12], "setparamet": [1, 4, 12], "object": [1, 2, 3, 4, 11, 12, 13, 14, 21, 29], "warn": [1, 4, 12], "equal": [1, 4, 12, 13, 15, 19], "It": [1, 4, 5, 12, 14, 16, 21], "valid": [1, 4, 12], "arraylik": 1, "indic": [1, 4, 5, 13, 16, 17, 18, 23], "2d": [1, 4], "like": [1, 2, 4], "shape": [1, 4], "number": [1, 4, 5, 7, 8, 9, 10, 13, 15, 16, 19, 20], "per": [1, 2, 4], "assum": [1, 4, 15, 20], "mmunit": [1, 2, 12, 13, 19, 23], "compat": [1, 4, 12, 14], "md": [1, 4, 12, 14, 15], "dalton": [1, 4, 12, 14], "distanc": [1, 2, 4, 8, 9, 12, 13, 14, 19, 20, 22, 23, 24, 26], "nanomet": [1, 4, 5, 8, 9, 12, 13, 14, 19, 20], "time": [1, 4, 12, 14, 21, 22], "picosecond": [1, 3, 4, 11, 12, 14, 21], "temperatur": [1, 4, 12, 14], "kelvin": [1, 3, 4, 11, 12, 14, 21], "energi": [1, 2, 4, 12, 14, 27], "kilojoules_per_mol": [1, 4, 11, 12, 14, 21], "angl": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26], "radian": [1, 4, 11, 12, 14, 21], "doe": [1, 4, 5, 7, 10, 12, 14, 16], "have": [1, 4, 12, 14, 21], "dimensionless": [1, 2, 4, 7, 8, 9, 10, 12, 13, 14, 15, 19, 20, 23, 25], "t": [1, 12, 15, 29], "option": [1, 2, 4, 7, 8, 9, 10, 12, 13, 17, 18, 20, 21], "vectorquant": [1, 12], "lower": [1, 2], "upper": [1, 2], "when": [1, 12, 17, 18], "former": [1, 4], "entri": [1, 4], "latter": [1, 4], "global": [1, 4], "rais": [1, 4, 5, 7, 10, 15, 19], "valueerror": [1, 4, 5, 7, 10, 15, 19], "ar": [1, 2, 4, 5, 8, 10, 12, 13, 15, 16, 19, 20, 25], "specifi": [1, 4], "numpi": [1, 4, 14, 15], "np": [1, 4, 14, 15], "alaninedipeptidevacuum": [1, 3, 11, 12, 14, 15, 17, 18, 21], "angle1": 1, "10": [1, 16, 27], "angle2": 1, "15": [1, 7, 8, 9], "20": 1, "colvar": [1, 4], "kappa": [1, 11, 12, 21], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 3, 11, 12, 16, 21], "pi": [1, 2, 3, 11, 12, 14, 15, 21], "theta1": 1, "theta2": 1, "500": [1, 3, 11, 21], "429": 1, "479": 1, "kj": [1, 11, 12, 14, 21], "mol": [1, 11, 12, 14, 21], "2000": 1, "858": 1, "958": 1, "classmethod": 1, "fromopenmmforc": 1, "creat": [1, 16, 25], "convert": [1, 12], "ndarrai": [1, 4, 5, 14, 15, 16], "consid": [1, 2, 9, 10, 13, 19, 20], "onli": [1, 2, 5, 13, 16, 19, 20], "custom": [1, 3, 11, 21], "typeerror": 1, "app": [1, 3, 7, 8, 9, 10, 11, 16, 19, 20, 21, 25], "lysozymeimplicit": [1, 4, 7, 8, 9, 10, 19, 23, 25], "residu": [1, 2, 4, 5, 7, 8, 9, 10, 13, 15, 16, 19, 20, 25], "topologi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 19, 20, 21, 23, 25], "59": [1, 7, 8, 9, 10, 23, 25], "79": [1, 23], "helix_cont": [1, 7, 8, 9, 10, 25], "helixtorsioncont": [1, 24, 25, 26], "6": [1, 2, 3, 11, 12, 13, 15, 19, 21, 27], "num_atom": [1, 16, 17, 18, 25], "getnumparticl": [1, 9, 17, 18, 20, 25], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 4, 7, 8, 9, 10, 13, 15, 19, 20], "addglobalparamet": 1, "7": [1, 15, 21], "getforc": [1, 2, 13], "copi": 1, "item": 1, "harmonicbondforc": [1, 16], "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": 1, "start": [1, 13, 26], "setforcegroup": 1, "state": 1, "getstat": 1, "getenergi": 1, "getpotentialenergi": 1, "copy_valu": 1, "print": [1, 2, 7, 8, 9, 10, 18, 19, 20, 25, 29], "origin": [1, 9, 20], "6f": 1, "2094": 1, "312": 1, "3239": 1, "795": 1, "4226": 1, "05": 1, "02155": 1, "17": [1, 2, 10], "4528": 1, "group1": [2, 13, 19], "group2": [2, 13, 19], "nonbondedforc": [2, 13], "contrastgroup": 2, "kilojoul": 2, "mole": 2, "contrastsc": 2, "attraction_strength": 2, "strength": 2, "attract": 2, "between": [2, 4, 5, 6, 9, 13, 16, 19, 20, 23, 25], "two": [2, 4, 6, 12, 13, 19], "s_": 2, "rm": [2, 5, 7, 8, 9, 10, 16, 20, 22, 23], "attr": 2, "e_": 2, "ref": [2, 5, 7, 9, 10, 15, 16, 20], "bigg": 2, "g": [2, 4, 5, 9, 13, 19, 20], "_1": [2, 6, 13, 19], "substack": 2, "_2": [2, 6, 13, 19], "neq": [2, 13], "epsilon_": 2, "ij": 2, "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "varepsilon_0": 2, "r_": [2, 9, 13, 20], "elec": 2, "cutoff": [2, 13, 16], "permitt": 2, "empti": 2, "space": [2, 15, 27], "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": [2, 15], "sqrt": [2, 5, 9, 15, 16, 17, 20], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "provid": [2, 13, 15], "_3": 2, "contrast": 2, "One": [2, 13], "also": [2, 13], "scale": [2, 15], "factor": [2, 13], "alpha": [2, 7, 8, 9, 10, 20], "balanc": 2, "contribut": 2, "interact": 2, "overlap": 2, "even": [2, 7, 10], "self": [2, 13, 21], "On": 2, "hand": 2, "cannot": 2, "neither": 2, "nor": 2, "reduc": 2, "potenti": [2, 14, 27], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": [2, 15], "text": [2, 15, 29], "coulomb": [2, 27], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 25], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "give": 2, "zero": 2, "depend": [2, 12, 15], "detail": 2, "chosen": 2, "adopt": 2, "well": 2, "switch": [2, 13], "correspond": [2, 5, 9, 15, 16, 20], "taken": [2, 13], "non": [2, 13], "exclus": [2, 13], "except": [2, 5, 13], "involv": [2, 13], "either": [2, 5, 16], "turn": [2, 13], "iter": [2, 4, 5, 12, 15, 17, 18, 19], "real": [2, 7, 8, 9, 10, 13, 15, 19, 20], "normal": [2, 7, 8, 9, 10, 13, 19, 20, 25], "extract": 2, "regardless": 2, "float": [2, 3, 4, 11, 13, 15, 21, 23], "hostguestexplicit": [2, 13], "guest": 2, "b2": [2, 13], "host": 2, "cuc": 2, "cv1": 2, "femtosecond": [2, 3, 5, 11, 13, 16, 21, 25], "4912": 2, "hoh": [2, 13], "cv2": 2, "preservest": [2, 4, 13, 19, 20], "2063": 2, "cv3": 2, "2849": 2, "cv4": 2, "3880": 2, "8": [2, 3, 9, 10, 11, 12, 20, 21], "report": [3, 11, 21, 26], "emass": [3, 11, 21], "writer": [3, 11, 21], "data": [3, 11, 21], "collectivevari": [3, 12, 15, 25], "whose": [3, 9, 11, 14, 15, 20], "statedatareport": [3, 11, 26, 28], "math": [3, 11, 12, 21], "sy": [3, 11, 21], "stdout": [3, 11, 21], "14": [3, 11, 12, 21], "16": [3, 9, 11, 12, 21], "18": [3, 4, 7, 11, 21, 23, 27], "100": [3, 11, 16, 21], "step": [3, 4, 8, 9, 11, 13, 16, 19, 20, 21], "langevinintegr": [3, 11, 21], "300": [3, 11, 21], "setrandomnumberse": [3, 11, 21], "1234": [3, 11, 21], "setvelocitiestotemperatur": [3, 11, 21], "5678": [3, 11, 21], "append": [3, 11, 15, 21], "7102": 3, "04970": 3, "1221": 3, "05386": 3, "200": [3, 11, 21], "1573": 3, "04481": 3, "9959": 3, "05664": 3, "0859": 3, "04035": 3, "001": 3, "04506": 3, "400": [3, 11, 21], "8061": 3, "05399": 3, "0792": 3, "04992": 3, "654": 3, "04784": 3, "1139": 3, "05592": 3, "600": [3, 11, 21], "1390": 3, "05137": 3, "071": [3, 21], "05063": 3, "700": [3, 11, 21], "1133": 3, "04145": 3, "1047": [3, 12], "04724": 3, "800": [3, 11, 21], "7348": 3, "04123": 3, "004": 3, "05548": 3, "900": [3, 11, 21], "6273": 3, "03007": 3, "1277": 3, "05271": 3, "680": 3, "03749": 3, "9692": 3, "04450": 3, "gethead": [3, 11, 21], "strig": [3, 11], "header": [3, 11, 21], "weighbymass": [4, 17, 18, 19, 29], "centroid_funct": 4, "centroid": [4, 5, 16, 19], "split": 4, "big": [4, 23], "i_1": 4, "i_2": 4, "i_n": 4, "n_j": [4, 5], "k": [4, 8, 9, 20, 23], "weight": [4, 19], "redefin": 4, "m_j": 4, "total": [4, 5, 9, 13, 16, 17, 18, 19, 20], "atomicfunct": [4, 12, 24, 26], "customcentroidbondforc": 4, "arbitrari": 4, "_supportsarrai": [4, 23], "dtype": [4, 23], "_nestedsequ": [4, 23], "complex": [4, 23], "byte": [4, 23], "center": [4, 9, 15, 16, 17, 18, 20], "instead": [4, 13, 17, 18, 20, 25], "geometr": [4, 17, 18], "out": 4, "helic": 4, "res_coord": 4, "residuecoordin": [4, 24, 26], "115": 4, "124": 4, "126": [4, 27], "135": 4, "stepfunct": [4, 9, 13, 19, 20], "33": [4, 8], "recomput": 4, "g1": 4, "g2": 4, "9": [4, 15, 20, 27], "referenceposit": [5, 16], "numatom": [5, 9, 16, 20], "composite_rmsd": 5, "composit": 5, "root": [5, 9, 16, 20], "mean": [5, 9, 16, 20], "squar": [5, 9, 15, 16, 18, 20], "deviat": [5, 15, 16], "rmsd": [5, 9, 20, 24, 26], "current": [5, 16], "d_": [5, 8, 16, 20], "crm": 5, "min_": [5, 16], "mathbb": [5, 16], "atop": [5, 16], "rotat": [5, 9, 16, 20], "matrix": [5, 9, 15, 16, 20], "quaternion": [5, 16], "structur": [5, 16, 27], "respect": [5, 8, 10, 11, 15, 17, 18], "analog": 5, "you": 5, "instal": [5, 26], "cpp": 5, "conda": [5, 25], "packag": [5, 25], "sequenc": [5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 21, 25], "dict": [5, 12, 16], "map": [5, 16], "vector": [5, 15, 16], "need": [5, 7, 10, 16], "see": [5, 16], "below": [5, 16], "disjoint": [5, 19], "includ": [5, 16, 19, 21, 25], "those": [5, 16], "importerror": 5, "mm": 5, "pytest": 5, "hostguestvacuum": 5, "host_atom": 5, "guest_atom": 5, "try": 5, "skip": 5, "7320": 6, "thetarefer": 7, "88": 7, "degre": [7, 10, 12, 23], "toler": [7, 10], "halfexpon": [7, 8, 10], "helix_angle_cont": 7, "helix": [7, 8, 9, 10, 25], "content": [7, 8, 9, 10, 20, 25], "alpha_": [7, 8, 9, 10], "b_m": [7, 8, 10], "alpha_i": 7, "theta_": [7, 10], "tol": [7, 10], "carbon": [7, 8], "threshold": [7, 8, 9, 10, 13, 19, 20], "around": [7, 10], "smooth": [7, 8, 9, 10, 20], "boxcar": [7, 10], "2m": [7, 8, 10], "integ": [7, 8, 10, 20], "control": [7, 8, 10], "steep": [7, 8, 10], "note": [7, 10], "elev": [7, 10], "power": [7, 10, 25], "contigu": [7, 8, 9, 10, 20], "singl": [7, 8, 9, 10, 20], "chain": [7, 8, 9, 10, 20], "order": [7, 8, 9, 10, 20], "terminu": [7, 8, 9, 10, 20], "due": [7, 8, 10], "limit": [7, 8, 9, 10, 20], "maximum": [7, 8, 10], "37": [7, 8, 10, 11, 21], "some": [7, 10], "80": [7, 8, 9, 10, 25], "ly": [7, 8, 9, 10], "asp": [7, 8, 9, 10, 19], "glu": [7, 8, 9, 10, 19, 20], "il": [7, 8, 9, 10], "leu": [7, 8, 9, 10], "arg": [7, 8, 9, 10, 19], "7605": 7, "thresholddist": [8, 13, 19], "helix_hbond_cont": 8, "hydrogen": [8, 19], "bond": [8, 16], "hb": 8, "h": [8, 9, 13, 19, 20], "o": [8, 9, 20], "_k": [8, 9, 20], "oxygen": 8, "nitrogen": 8, "addit": [8, 20, 21], "880": 8, "thresholdrmsd": [9, 20], "08": [9, 20], "helix_rmsd_cont": 9, "r_0": [9, 13, 19, 20], "repres": [9, 12, 20], "ideal": [9, 20], "configur": [9, 12, 20], "everi": [9, 20], "beta": [9, 20, 27], "six": [9, 20], "involvend": [9, 20], "thu": [9, 20], "compris": [9, 20], "glycin": [9, 20], "miss": [9, 20], "replac": [9, 17, 18, 20], "hat": [9, 15, 16, 20], "rel": [9, 16, 20], "geometri": [9, 16, 20], "minim": [9, 20], "done": [9, 20], "divid": [9, 20], "n_": [9, 20], "wa": [9, 20], "introduc": [9, 20], "shown": [9, 20], "abov": [9, 20, 22], "ident": [9, 20], "paper": [9, 20], "written": [9, 20], "numer": [9, 14, 20, 22], "safe": [9, 20], "alpharmsd": 9, "plume": [9, 20, 23], "v2": [9, 20], "present": [9, 20, 21], "implement": [9, 20], "leq": [9, 20], "1024": [9, 20], "calcul": [9, 12, 19, 20, 22, 23, 27], "close": [9, 20, 25], "match": [9, 12, 20], "itertool": [9, 19, 20], "islic": [9, 19, 20], "getnumresidueblock": [9, 20], "normalized_helix_cont": 9, "98": 9, "998": 9, "phirefer": 10, "63": 10, "psirefer": 10, "41": [10, 11, 21], "25": [10, 11, 15, 21], "helix_torsion_cont": 10, "ramachandran": 10, "phi_i": 10, "phi_": 10, "psi_i": 10, "psi_": 10, "refenr": 10, "last": [10, 20], "thei": [10, 12, 16], "penultim": 10, "452": 10, "metacv": 11, "deriv": [11, 12, 21], "meta": [11, 12], "metacollectivevari": [11, 21, 24, 26], "associ": 11, "innervalu": 11, "inner": 11, "innermass": 11, "umbrella": [11, 21], "min": [11, 12, 20, 21], "dphi": [11, 21], "dpsi": [11, 21], "ab": [11, 12, 21], "phi0": [11, 12, 21], "psi0": [11, 21], "36849": 11, "40": [11, 21], "3718": 11, "88515": 11, "27": [11, 21], "9109": 11, "43112": 11, "12": [11, 13, 19, 21], "743": 11, "96786": 11, "97688": 11, "58383": 11, "8782": 11, "72482": 11, "2626": 11, "55836": 11, "3424": 11, "71046": 11, "11": [11, 21], "3498": 11, "43913": 11, "3804": 11, "7584": 11, "31": [11, 21], "1599": 11, "meta_collective_vari": 12, "c_1": 12, "c_2": 12, "ldot": [12, 20], "c_n": 12, "c_i": 12, "customcvforc": [12, 25], "instanc": [12, 14, 25, 29], "uniqu": 12, "symbol": 12, "settabl": 12, "Their": 12, "serv": 12, "driving_forc": 12, "delta": 12, "1e3": 12, "120": 12, "getparameterdefaultvalu": 12, "094": 12, "getparametervalu": 12, "548": 12, "getinnervalu": 12, "getinnereffectivemass": 12, "getparameterderiv": 12, "19": 12, "act": 12, "particl": 12, "dictionari": 12, "kei": 12, "getinnervari": 12, "tupl": [12, 23], "cutofffactor": 13, "switchfactor": 13, "number_of_contact": 13, "contact": [13, 19], "made": [13, 19], "otherwis": [13, 19], "For": [13, 19, 20], "trajectori": [13, 19, 23, 25], "analysi": [13, 19, 25], "fine": [13, 19], "make": [13, 15, 19], "heavisid": [13, 19], "molecular": [13, 19, 27], "dynam": [13, 19, 27], "howev": [13, 19, 20], "continu": [13, 19], "approxim": [13, 19], "geq": [13, 19], "follow": [13, 19, 21, 25], "fact": 13, "r_c": 13, "x_c": 13, "typic": 13, "so": 13, "discontinu": 13, "smoothli": 13, "off": 13, "x_": 13, "do": 13, "abruptli": 13, "both": [13, 20], "ignor": 13, "pair": [13, 23], "distinct": [13, 16], "count": 13, "onc": 13, "obtain": 13, "thereof": [13, 19], "being": [13, 15, 19], "multipli": 13, "els": 13, "extend": [13, 21], "nc": 13, "nc_normal": 13, "99999": [13, 19], "openmmforc": 14, "openmm_force_wrapp": 14, "xml": 14, "serial": [14, 26], "customangleforc": 14, "addangl": 14, "911": 14, "00538": 14, "metric": 15, "mileston": 15, "sigma": 15, "progress": 15, "z": 15, "path": 15, "dfrac": 15, "w_i": 15, "ln": 15, "gaussian": 15, "kernel": 15, "exp": 15, "locat": 15, "width": 15, "norm": 15, "diagon": 15, "element": 15, "characterist": 15, "appropri": 15, "relat": 15, "lambda": 15, "row": 15, "column": 15, "standard": 15, "path_progress_in_cv_spac": 15, "path_deviation_in_cv_spac": 15, "less": 15, "than": [15, 18], "phi_atom": [15, 23], "ac": [15, 27], "ala": [15, 20], "psi_atom": 15, "nme": 15, "path_var": 15, "var": 15, "50": 15, "superscript": 16, "denot": 16, "problem": 16, "belong": 16, "possibl": [16, 19, 25], "circumv": 16, "issu": 16, "getnullbondforc": 16, "result": 16, "alaninedipeptideimplicit": 16, "getnumatom": 16, "123138": 16, "null": 16, "connect": 16, "graph": 16, "waterbox": 16, "box_edg": 16, "angstrom": 16, "10436": 16, "r_g": [17, 18], "_c": [17, 18], "_m": [17, 18], "lack": 17, "parallel": [17, 18, 20], "might": [17, 18], "slow": 17, "larg": [17, 18], "radiusofgyrationsq": [17, 24, 26], "prefer": [17, 18], "2951": 17, "radius_of_gyration_sq": 18, "better": 18, "over": 18, "rgsq": 18, "0871": 18, "residuegroup1": 19, "residuegroup2": 19, "includehydrogen": 19, "residue_coordin": 19, "ha": 19, "125": 19, "142": 19, "trp": 19, "asn": 19, "gln": 19, "thr": [19, 20], "156": 19, "pro": 19, "gly": 19, "customintegr": 19, "26": [19, 21], "setreferencevalu": 19, "getreferencevalu": 19, "blocksiz": 20, "sheet_rmsd_cont": 20, "sheet": [20, 27], "beta_": 20, "minimum": 20, "subset": 20, "protein": [20, 25, 27], "antiparallel": 20, "minimim": 20, "choos": 20, "partit": 20, "block": 20, "n_1": 20, "n_2": 20, "n_m": 20, "compos": 20, "consecut": 20, "next": 20, "modifi": 20, "l_": 20, "l_k": 20, "n_i": 20, "n_k": 20, "antibetarmsd": 20, "parabetarmsd": 20, "srcimplicit": 20, "68": 20, "82": 20, "tyr": 20, "val": 20, "sheet_cont": 20, "28": 20, "0465": 20, "blockwise_sheet_cont": 20, "9859": 20, "file": 21, "reportinterv": 21, "kwarg": 21, "version": 21, "signatur": 21, "def": 21, "initi": 21, "perform": 21, "setup": 21, "befor": 21, "textiobas": 21, "write": [21, 29], "interv": 21, "customwrit": 21, "cvwriter": [21, 26, 28], "metacvwrit": [21, 26, 28], "371": 21, "463": 21, "910": 21, "558": 21, "74": 21, "199": 21, "9768": 21, "827": 21, "878": 21, "761": 21, "262": 21, "388": 21, "342": 21, "349": 21, "586": 21, "380": 21, "84": 21, "159": 21, "atom4": 22, "four": [22, 23, 25], "varphi": 22, "atan2": 22, "u": 22, "arctang": 22, "receiv": 22, "denomin": 22, "fourth": 22, "5707": 22, "firstlist": 23, "secondlist": 23, "torsion_similar": 23, "similar": 23, "co": 23, "1st": 23, "2nd": 23, "kth": 23, "dihcor": 23, "mdtraj": 23, "traj": 23, "from_openmm": 23, "compute_phi": 23, "valid_atom": 23, "659": 23, "attractionstrength": [24, 26], "centroidfunct": [24, 26], "compositermsd": [24, 26], "helixanglecont": [24, 25, 26], "helixhbondcont": [24, 25, 26], "helixrmsdcont": [24, 25, 26], "numberofcontact": [24, 26], "openmmforcewrapp": [24, 26], "pathincvspac": [24, 26], "sheetrmsdcont": [24, 26], "torsionsimilar": [24, 26], "python": 25, "pre": 25, "biasvari": 25, "metadynam": 25, "uf": 25, "har": 25, "environ": 25, "run": 25, "command": 25, "forg": 25, "mdtool": 25, "Or": 25, "mamba": 25, "your": 25, "script": 25, "jupyt": 25, "notebook": 25, "show": 25, "how": 25, "quantifi": 25, "modul": [25, 26], "t4": 25, "lysozym": 25, "l99a": 25, "longest": 25, "occur": 25, "lys60": 25, "arg80": 25, "final": 25, "round": 25, "seven": 25, "decim": 25, "place": 25, "output": 25, "9873989": 25, "93414": 25, "9946999": 25, "918571": 25, "expect": 25, "matter": 25, "star": 26, "introduct": 26, "usag": 26, "deseri": [26, 29], "bibliographi": 26, "search": 26, "page": 26, "christoph": 27, "chipot": 27, "andrew": 27, "pohoril": 27, "editor": 27, "free": 27, "springer": 27, "berlin": 27, "heidelberg": 27, "2007": 27, "url": 27, "http": 27, "doi": 27, "org": 27, "1007": 27, "978": 27, "540": 27, "38448": 27, "gabriela": 27, "b": 27, "correa": 27, "\u00e9": 27, "ssica": 27, "l": 27, "maciel": 27, "frederico": 27, "w": 27, "tavar": 27, "charll": 27, "abreu": 27, "new": 27, "formul": 27, "concert": 27, "alchem": 27, "van": 27, "der": 27, "waal": 27, "compon": 27, "solvat": 27, "journal": 27, "chemic": 27, "theori": 27, "5876": 27, "5889": 27, "octob": 27, "2022": 27, "1021": 27, "jctc": 27, "2c00563": 27, "fabio": 27, "pietrucci": 27, "alessandro": 27, "laio": 27, "effici": 27, "explor": 27, "applic": 27, "sh": 27, "gb": 27, "2197": 27, "2201": 27, "aug": 27, "2009": 27, "ct900202f": 27, "sven": 27, "hovm\u00f6ller": 27, "tupe": 27, "zhou": 27, "toma": 27, "ohlson": 27, "conform": 27, "amino": 27, "acid": 27, "acta": 27, "crystallographica": 27, "section": 27, "biolog": 27, "crystallographi": 27, "58": 27, "768": 27, "776": 27, "apr": 27, "2002": 27, "1107": 27, "s0907444902003359": 27, "marcella": 27, "iannuzzi": 27, "michel": 27, "parrinello": 27, "reactiv": 27, "surfac": 27, "car": 27, "physic": 27, "review": 27, "letter": 27, "jun": 27, "2003": 27, "1103": 27, "physrevlett": 27, "90": 27, "238302": 27, "david": 27, "branduardi": 27, "francesco": 27, "luigi": 27, "gervasio": 27, "054103": 27, "februari": 27, "1063": 27, "2432340": 27, "obj": 29, "iostream": 29, "io": 29, "stream": 29, "mode": 29, "stringio": 29, "read": 29, "seek": 29, "new_object": 29}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [4, 0, 1, "", "CentroidFunction"], [5, 0, 1, "", "CompositeRMSD"], [6, 0, 1, "", "Distance"], [7, 0, 1, "", "HelixAngleContent"], [8, 0, 1, "", "HelixHBondContent"], [9, 0, 1, "", "HelixRMSDContent"], [10, 0, 1, "", "HelixTorsionContent"], [12, 0, 1, "", "MetaCollectiveVariable"], [13, 0, 1, "", "NumberOfContacts"], [14, 0, 1, "", "OpenMMForceWrapper"], [15, 0, 1, "", "PathInCVSpace"], [16, 0, 1, "", "RMSD"], [17, 0, 1, "", "RadiusOfGyration"], [18, 0, 1, "", "RadiusOfGyrationSq"], [19, 0, 1, "", "ResidueCoordination"], [20, 0, 1, "", "SheetRMSDContent"], [22, 0, 1, "", "Torsion"], [23, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "addToSystem"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getMassUnit"], [0, 1, 1, "", "getName"], [0, 1, 1, "", "getPeriodicBounds"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "addToSystem"], [1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getMassUnit"], [1, 1, 1, "", "getName"], [1, 1, 1, "", "getPeriodicBounds"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "addToSystem"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getMassUnit"], [2, 1, 1, "", "getName"], [2, 1, 1, "", "getPeriodicBounds"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"]], "cvpack.CentroidFunction": [[4, 1, 1, "", "addToSystem"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getMassUnit"], [4, 1, 1, "", "getName"], [4, 1, 1, "", "getPeriodicBounds"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"]], "cvpack.CompositeRMSD": [[5, 1, 1, "", "addToSystem"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getMassUnit"], [5, 1, 1, "", "getName"], [5, 1, 1, "", "getPeriodicBounds"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"]], "cvpack.Distance": [[6, 1, 1, "", "addToSystem"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getMassUnit"], [6, 1, 1, "", "getName"], [6, 1, 1, "", "getPeriodicBounds"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"]], "cvpack.HelixAngleContent": [[7, 1, 1, "", "addToSystem"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getMassUnit"], [7, 1, 1, "", "getName"], [7, 1, 1, "", "getPeriodicBounds"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"]], "cvpack.HelixHBondContent": [[8, 1, 1, "", "addToSystem"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getMassUnit"], [8, 1, 1, "", "getName"], [8, 1, 1, "", "getPeriodicBounds"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"]], "cvpack.HelixRMSDContent": [[9, 1, 1, "", "addToSystem"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getMassUnit"], [9, 1, 1, "", "getName"], [9, 1, 1, "", "getPeriodicBounds"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"]], "cvpack.HelixTorsionContent": [[10, 1, 1, "", "addToSystem"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getMassUnit"], [10, 1, 1, "", "getName"], [10, 1, 1, "", "getPeriodicBounds"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"]], "cvpack.MetaCollectiveVariable": [[12, 1, 1, "", "addToSystem"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getInnerEffectiveMasses"], [12, 1, 1, "", "getInnerValues"], [12, 1, 1, "", "getInnerVariables"], [12, 1, 1, "", "getMassUnit"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getParameterDefaultValues"], [12, 1, 1, "", "getParameterDerivatives"], [12, 1, 1, "", "getParameterValues"], [12, 1, 1, "", "getPeriodicBounds"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"]], "cvpack.NumberOfContacts": [[13, 1, 1, "", "addToSystem"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getMassUnit"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getPeriodicBounds"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"]], "cvpack.OpenMMForceWrapper": [[14, 1, 1, "", "addToSystem"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getMassUnit"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getPeriodicBounds"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"]], "cvpack.PathInCVSpace": [[15, 1, 1, "", "addToSystem"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getMassUnit"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getPeriodicBounds"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"]], "cvpack.RMSD": [[16, 1, 1, "", "addToSystem"], [16, 1, 1, "", "getEffectiveMass"], [16, 1, 1, "", "getMassUnit"], [16, 1, 1, "", "getName"], [16, 1, 1, "", "getNullBondForce"], [16, 1, 1, "", "getPeriodicBounds"], [16, 1, 1, "", "getUnit"], [16, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyration": [[17, 1, 1, "", "addToSystem"], [17, 1, 1, "", "getEffectiveMass"], [17, 1, 1, "", "getMassUnit"], [17, 1, 1, "", "getName"], [17, 1, 1, "", "getPeriodicBounds"], [17, 1, 1, "", "getUnit"], [17, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyrationSq": [[18, 1, 1, "", "addToSystem"], [18, 1, 1, "", "getEffectiveMass"], [18, 1, 1, "", "getMassUnit"], [18, 1, 1, "", "getName"], [18, 1, 1, "", "getPeriodicBounds"], [18, 1, 1, "", "getUnit"], [18, 1, 1, "", "getValue"]], "cvpack.ResidueCoordination": [[19, 1, 1, "", "addToSystem"], [19, 1, 1, "", "getEffectiveMass"], [19, 1, 1, "", "getMassUnit"], [19, 1, 1, "", "getName"], [19, 1, 1, "", "getPeriodicBounds"], [19, 1, 1, "", "getReferenceValue"], [19, 1, 1, "", "getUnit"], [19, 1, 1, "", "getValue"], [19, 1, 1, "", "setReferenceValue"]], "cvpack.SheetRMSDContent": [[20, 1, 1, "", "addToSystem"], [20, 1, 1, "", "getEffectiveMass"], [20, 1, 1, "", "getMassUnit"], [20, 1, 1, "", "getName"], [20, 1, 1, "", "getPeriodicBounds"], [20, 1, 1, "", "getUnit"], [20, 1, 1, "", "getValue"]], "cvpack.Torsion": [[22, 1, 1, "", "addToSystem"], [22, 1, 1, "", "getEffectiveMass"], [22, 1, 1, "", "getMassUnit"], [22, 1, 1, "", "getName"], [22, 1, 1, "", "getPeriodicBounds"], [22, 1, 1, "", "getUnit"], [22, 1, 1, "", "getValue"]], "cvpack.TorsionSimilarity": [[23, 1, 1, "", "addToSystem"], [23, 1, 1, "", "getEffectiveMass"], [23, 1, 1, "", "getMassUnit"], [23, 1, 1, "", "getName"], [23, 1, 1, "", "getPeriodicBounds"], [23, 1, 1, "", "getUnit"], [23, 1, 1, "", "getValue"]], "cvpack.reporting": [[3, 0, 1, "", "CVWriter"], [11, 0, 1, "", "MetaCVWriter"], [21, 0, 1, "", "StateDataReporter"]], "cvpack.reporting.CVWriter": [[3, 1, 1, "", "getHeaders"], [3, 1, 1, "", "getValues"]], "cvpack.reporting.MetaCVWriter": [[11, 1, 1, "", "getHeaders"], [11, 1, 1, "", "getValues"]], "cvpack.serialization": [[29, 2, 1, "", "deserialize"], [29, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "cvwriter": 3, "centroidfunct": 4, "compositermsd": 5, "distanc": 6, "helixanglecont": 7, "helixhbondcont": 8, "helixrmsdcont": 9, "helixtorsioncont": 10, "metacvwrit": 11, "metacollectivevari": 12, "numberofcontact": 13, "openmmforcewrapp": 14, "pathincvspac": 15, "rmsd": 16, "radiusofgyr": 17, "radiusofgyrationsq": 18, "residuecoordin": 19, "sheetrmsdcont": 20, "statedatareport": 21, "torsion": 22, "torsionsimilar": 23, "collect": [24, 26], "variabl": [24, 26], "get": 25, "start": 25, "introduct": 25, "instal": 25, "usag": 25, "exampl": 25, "packag": 26, "content": 26, "indic": 26, "tabl": 26, "bibliographi": 27, "report": 28, "serial": 29}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CVWriter": [[3, "cvwriter"]], "CentroidFunction": [[4, "centroidfunction"]], "CompositeRMSD": [[5, "compositermsd"]], "Distance": [[6, "distance"]], "HelixAngleContent": [[7, "helixanglecontent"]], "HelixHBondContent": [[8, "helixhbondcontent"]], "HelixRMSDContent": [[9, "helixrmsdcontent"]], "HelixTorsionContent": [[10, "helixtorsioncontent"]], "MetaCVWriter": [[11, "metacvwriter"]], "MetaCollectiveVariable": [[12, "metacollectivevariable"]], "NumberOfContacts": [[13, "numberofcontacts"]], "OpenMMForceWrapper": [[14, "openmmforcewrapper"]], "PathInCVSpace": [[15, "pathincvspace"]], "RMSD": [[16, "rmsd"]], "RadiusOfGyration": [[17, "radiusofgyration"]], "RadiusOfGyrationSq": [[18, "radiusofgyrationsq"]], "ResidueCoordination": [[19, "residuecoordination"]], "SheetRMSDContent": [[20, "sheetrmsdcontent"]], "StateDataReporter": [[21, "statedatareporter"]], "Torsion": [[22, "torsion"]], "TorsionSimilarity": [[23, "torsionsimilarity"]], "Collective Variables": [[24, "collective-variables"]], "Getting Started": [[25, "getting-started"]], "Introduction": [[25, "introduction"]], "Installation": [[25, "installation"]], "Usage": [[25, "usage"]], "Example": [[25, "example"]], "Collective Variable Package": [[26, "collective-variable-package"]], "Contents": [[26, "contents"]], "Indices and tables": [[26, "indices-and-tables"]], "Bibliography": [[27, "bibliography"]], "Reporting": [[28, "reporting"]], "Serialization": [[29, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "addtosystem() (cvpack.angle method)": [[0, "cvpack.Angle.addToSystem"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getmassunit() (cvpack.angle method)": [[0, "cvpack.Angle.getMassUnit"]], "getname() (cvpack.angle method)": [[0, "cvpack.Angle.getName"]], "getperiodicbounds() (cvpack.angle method)": [[0, "cvpack.Angle.getPeriodicBounds"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "addtosystem() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.addToSystem"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getmassunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getMassUnit"]], "getname() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getName"]], "getperiodicbounds() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getPeriodicBounds"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "addtosystem() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.addToSystem"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getmassunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getMassUnit"]], "getname() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getName"]], "getperiodicbounds() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getPeriodicBounds"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "cvwriter (class in cvpack.reporting)": [[3, "cvpack.reporting.CVWriter"]], "getheaders() (cvpack.reporting.cvwriter method)": [[3, "cvpack.reporting.CVWriter.getHeaders"]], "getvalues() (cvpack.reporting.cvwriter method)": [[3, "cvpack.reporting.CVWriter.getValues"]], "centroidfunction (class in cvpack)": [[4, "cvpack.CentroidFunction"]], "addtosystem() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.addToSystem"]], "geteffectivemass() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getEffectiveMass"]], "getmassunit() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getMassUnit"]], "getname() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getName"]], "getperiodicbounds() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getPeriodicBounds"]], "getunit() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[4, "cvpack.CentroidFunction.getValue"]], "compositermsd (class in cvpack)": [[5, "cvpack.CompositeRMSD"]], "addtosystem() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.addToSystem"]], "geteffectivemass() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getEffectiveMass"]], "getmassunit() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getMassUnit"]], "getname() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getName"]], "getperiodicbounds() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getPeriodicBounds"]], "getunit() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getUnit"]], "getvalue() (cvpack.compositermsd method)": [[5, "cvpack.CompositeRMSD.getValue"]], "distance (class in cvpack)": [[6, "cvpack.Distance"]], "addtosystem() (cvpack.distance method)": [[6, "cvpack.Distance.addToSystem"]], "geteffectivemass() (cvpack.distance method)": [[6, "cvpack.Distance.getEffectiveMass"]], "getmassunit() (cvpack.distance method)": [[6, "cvpack.Distance.getMassUnit"]], "getname() (cvpack.distance method)": [[6, "cvpack.Distance.getName"]], "getperiodicbounds() (cvpack.distance method)": [[6, "cvpack.Distance.getPeriodicBounds"]], "getunit() (cvpack.distance method)": [[6, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[6, "cvpack.Distance.getValue"]], "helixanglecontent (class in cvpack)": [[7, "cvpack.HelixAngleContent"]], "addtosystem() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.addToSystem"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getEffectiveMass"]], "getmassunit() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getMassUnit"]], "getname() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getName"]], "getperiodicbounds() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getPeriodicBounds"]], "getunit() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[7, "cvpack.HelixAngleContent.getValue"]], "helixhbondcontent (class in cvpack)": [[8, "cvpack.HelixHBondContent"]], "addtosystem() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.addToSystem"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getEffectiveMass"]], "getmassunit() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getMassUnit"]], "getname() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getName"]], "getperiodicbounds() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getPeriodicBounds"]], "getunit() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[8, "cvpack.HelixHBondContent.getValue"]], "helixrmsdcontent (class in cvpack)": [[9, "cvpack.HelixRMSDContent"]], "addtosystem() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getMassUnit"]], "getname() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getName"]], "getperiodicbounds() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getPeriodicBounds"]], "getunit() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[9, "cvpack.HelixRMSDContent.getValue"]], "helixtorsioncontent (class in cvpack)": [[10, "cvpack.HelixTorsionContent"]], "addtosystem() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.addToSystem"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getmassunit() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getMassUnit"]], "getname() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getName"]], "getperiodicbounds() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getPeriodicBounds"]], "getunit() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[10, "cvpack.HelixTorsionContent.getValue"]], "metacvwriter (class in cvpack.reporting)": [[11, "cvpack.reporting.MetaCVWriter"]], "getheaders() (cvpack.reporting.metacvwriter method)": [[11, "cvpack.reporting.MetaCVWriter.getHeaders"]], "getvalues() (cvpack.reporting.metacvwriter method)": [[11, "cvpack.reporting.MetaCVWriter.getValues"]], "metacollectivevariable (class in cvpack)": [[12, "cvpack.MetaCollectiveVariable"]], "addtosystem() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.addToSystem"]], "geteffectivemass() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getEffectiveMass"]], "getinnereffectivemasses() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getInnerEffectiveMasses"]], "getinnervalues() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getInnerValues"]], "getinnervariables() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getInnerVariables"]], "getmassunit() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getMassUnit"]], "getname() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getName"]], "getparameterdefaultvalues() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getParameterDefaultValues"]], "getparameterderivatives() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getParameterDerivatives"]], "getparametervalues() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getParameterValues"]], "getperiodicbounds() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getPeriodicBounds"]], "getunit() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getUnit"]], "getvalue() (cvpack.metacollectivevariable method)": [[12, "cvpack.MetaCollectiveVariable.getValue"]], "numberofcontacts (class in cvpack)": [[13, "cvpack.NumberOfContacts"]], "addtosystem() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.addToSystem"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getEffectiveMass"]], "getmassunit() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getMassUnit"]], "getname() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getName"]], "getperiodicbounds() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getPeriodicBounds"]], "getunit() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[13, "cvpack.NumberOfContacts.getValue"]], "openmmforcewrapper (class in cvpack)": [[14, "cvpack.OpenMMForceWrapper"]], "addtosystem() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.addToSystem"]], "geteffectivemass() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getEffectiveMass"]], "getmassunit() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getMassUnit"]], "getname() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getName"]], "getperiodicbounds() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getPeriodicBounds"]], "getunit() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getUnit"]], "getvalue() (cvpack.openmmforcewrapper method)": [[14, "cvpack.OpenMMForceWrapper.getValue"]], "pathincvspace (class in cvpack)": [[15, "cvpack.PathInCVSpace"]], "addtosystem() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.addToSystem"]], "geteffectivemass() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getEffectiveMass"]], "getmassunit() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getMassUnit"]], "getname() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getName"]], "getperiodicbounds() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getPeriodicBounds"]], "getunit() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getUnit"]], "getvalue() (cvpack.pathincvspace method)": [[15, "cvpack.PathInCVSpace.getValue"]], "rmsd (class in cvpack)": [[16, "cvpack.RMSD"]], "addtosystem() (cvpack.rmsd method)": [[16, "cvpack.RMSD.addToSystem"]], "geteffectivemass() (cvpack.rmsd method)": [[16, "cvpack.RMSD.getEffectiveMass"]], "getmassunit() (cvpack.rmsd method)": [[16, "cvpack.RMSD.getMassUnit"]], "getname() (cvpack.rmsd method)": [[16, "cvpack.RMSD.getName"]], "getnullbondforce() (cvpack.rmsd method)": [[16, "cvpack.RMSD.getNullBondForce"]], "getperiodicbounds() (cvpack.rmsd method)": [[16, "cvpack.RMSD.getPeriodicBounds"]], "getunit() (cvpack.rmsd method)": [[16, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[16, "cvpack.RMSD.getValue"]], "radiusofgyration (class in cvpack)": [[17, "cvpack.RadiusOfGyration"]], "addtosystem() (cvpack.radiusofgyration method)": [[17, "cvpack.RadiusOfGyration.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[17, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyration method)": [[17, "cvpack.RadiusOfGyration.getMassUnit"]], "getname() (cvpack.radiusofgyration method)": [[17, "cvpack.RadiusOfGyration.getName"]], "getperiodicbounds() (cvpack.radiusofgyration method)": [[17, "cvpack.RadiusOfGyration.getPeriodicBounds"]], "getunit() (cvpack.radiusofgyration method)": [[17, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[17, "cvpack.RadiusOfGyration.getValue"]], "radiusofgyrationsq (class in cvpack)": [[18, "cvpack.RadiusOfGyrationSq"]], "addtosystem() (cvpack.radiusofgyrationsq method)": [[18, "cvpack.RadiusOfGyrationSq.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[18, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyrationsq method)": [[18, "cvpack.RadiusOfGyrationSq.getMassUnit"]], "getname() (cvpack.radiusofgyrationsq method)": [[18, "cvpack.RadiusOfGyrationSq.getName"]], "getperiodicbounds() (cvpack.radiusofgyrationsq method)": [[18, "cvpack.RadiusOfGyrationSq.getPeriodicBounds"]], "getunit() (cvpack.radiusofgyrationsq method)": [[18, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[18, "cvpack.RadiusOfGyrationSq.getValue"]], "residuecoordination (class in cvpack)": [[19, "cvpack.ResidueCoordination"]], "addtosystem() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.addToSystem"]], "geteffectivemass() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.getEffectiveMass"]], "getmassunit() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.getMassUnit"]], "getname() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.getName"]], "getperiodicbounds() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.getPeriodicBounds"]], "getreferencevalue() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.getReferenceValue"]], "getunit() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.getUnit"]], "getvalue() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.getValue"]], "setreferencevalue() (cvpack.residuecoordination method)": [[19, "cvpack.ResidueCoordination.setReferenceValue"]], "sheetrmsdcontent (class in cvpack)": [[20, "cvpack.SheetRMSDContent"]], "addtosystem() (cvpack.sheetrmsdcontent method)": [[20, "cvpack.SheetRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[20, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.sheetrmsdcontent method)": [[20, "cvpack.SheetRMSDContent.getMassUnit"]], "getname() (cvpack.sheetrmsdcontent method)": [[20, "cvpack.SheetRMSDContent.getName"]], "getperiodicbounds() (cvpack.sheetrmsdcontent method)": [[20, "cvpack.SheetRMSDContent.getPeriodicBounds"]], "getunit() (cvpack.sheetrmsdcontent method)": [[20, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[20, "cvpack.SheetRMSDContent.getValue"]], "statedatareporter (class in cvpack.reporting)": [[21, "cvpack.reporting.StateDataReporter"]], "torsion (class in cvpack)": [[22, "cvpack.Torsion"]], "addtosystem() (cvpack.torsion method)": [[22, "cvpack.Torsion.addToSystem"]], "geteffectivemass() (cvpack.torsion method)": [[22, "cvpack.Torsion.getEffectiveMass"]], "getmassunit() (cvpack.torsion method)": [[22, "cvpack.Torsion.getMassUnit"]], "getname() (cvpack.torsion method)": [[22, "cvpack.Torsion.getName"]], "getperiodicbounds() (cvpack.torsion method)": [[22, "cvpack.Torsion.getPeriodicBounds"]], "getunit() (cvpack.torsion method)": [[22, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[22, "cvpack.Torsion.getValue"]], "torsionsimilarity (class in cvpack)": [[23, "cvpack.TorsionSimilarity"]], "addtosystem() (cvpack.torsionsimilarity method)": [[23, "cvpack.TorsionSimilarity.addToSystem"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[23, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getmassunit() (cvpack.torsionsimilarity method)": [[23, "cvpack.TorsionSimilarity.getMassUnit"]], "getname() (cvpack.torsionsimilarity method)": [[23, "cvpack.TorsionSimilarity.getName"]], "getperiodicbounds() (cvpack.torsionsimilarity method)": [[23, "cvpack.TorsionSimilarity.getPeriodicBounds"]], "getunit() (cvpack.torsionsimilarity method)": [[23, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[23, "cvpack.TorsionSimilarity.getValue"]], "deserialize() (in module cvpack.serialization)": [[29, "cvpack.serialization.deserialize"]], "serialize() (in module cvpack.serialization)": [[29, "cvpack.serialization.serialize"]]}})