Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CentroidFunction", "api/CompositeRMSD", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/MetaCollectiveVariable", "api/NumberOfContacts", "api/OpenMMForceWrapper", "api/PathInCVSpace", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/ResidueCoordination", "api/SheetRMSDContent", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CentroidFunction.rst", "api/CompositeRMSD.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/MetaCollectiveVariable.rst", "api/NumberOfContacts.rst", "api/OpenMMForceWrapper.rst", "api/PathInCVSpace.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/ResidueCoordination.rst", "api/SheetRMSDContent.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CentroidFunction", "CompositeRMSD", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "MetaCollectiveVariable", "NumberOfContacts", "OpenMMForceWrapper", "PathInCVSpace", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "ResidueCoordination", "SheetRMSDContent", "Torsion", "TorsionSimilarity", "Python API", "Getting Started", "Collective Variable Package", "Bibliography", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25], "atom1": [0, 5, 19], "atom2": [0, 5, 19], "atom3": [0, 19], "pbc": [0, 1, 3, 5, 6, 7, 9, 15, 16, 17, 19, 20, 25], "fals": [0, 1, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 25], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25], "form": [0, 6, 8, 18, 19], "three": [0, 18], "atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20], "theta": [0, 6, 12], "bf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "mathrm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "aco": 0, "left": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "frac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "_": [0, 1, 3, 6, 7, 8, 12, 14, 18, 19, 20], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25], "cdot": [0, 19], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "right": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "where": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "j": [0, 1, 2, 3, 4, 8, 11, 15, 16, 17, 18, 19, 24], "_j": [0, 2, 3, 4, 8, 11, 15, 16, 17, 19], "_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "int": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20], "index": [0, 1, 2, 3, 4, 5, 11, 13, 14, 18, 19, 23], "first": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "second": [0, 2, 5, 9, 11, 17, 19, 20], "third": [0, 2, 19], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "whether": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24], "period": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "boundari": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 19, 20], "condit": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 19, 20], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "addparticl": [0, 1, 5, 19], "rang": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 16, 18, 19], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25], "addforc": [0, 1, 5, 14, 19, 22], "integr": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22], "verletintegr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "platform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22], "getplatformbynam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "vec3": [0, 4, 5, 13, 14, 19], "po": [0, 19], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25], "570796": 0, "rad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "addtosystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "setunusedforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "add": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "should": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "ad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "forc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "avail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "geteffectivemass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "q": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "defin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "m_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "sum_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "m_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "dq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "effici": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "onli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "evalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "quantiti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "backbon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "dihedr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "radiu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "gyrat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "alanin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "dipeptid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "molecul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "water": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "alaninedipeptideexplicit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "top": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "mdtraj_topologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "backbone_atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "select": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24], "ca": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "resid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "phi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "torsion": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "psi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "radius_of_gyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "radiusofgyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25], "cv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "05119": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "nm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "05186": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "30": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "946": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "getmassunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "measur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "getperiod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "getunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "1415": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "29514": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "function": [1, 2, 3, 6, 7, 8, 9, 10, 11, 17, 18, 19], "atomic_funct": 1, "A": [1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 18, 20, 24, 25], "gener": [1, 3], "coordin": [1, 3, 4, 14, 17, 18], "split": [1, 3], "m": [1, 3, 4, 6, 7, 9, 15, 16, 18], "each": [1, 3, 4, 10, 11, 13, 17, 18, 20], "f": [1, 2, 3, 10, 11, 13, 22], "dot": [1, 3], "user": [1, 3, 10], "th": [1, 3, 8, 10, 13, 14, 18, 20], "string": [1, 3, 10, 12], "can": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18], "ani": [1, 2, 3, 10, 11, 18, 20, 25], "express": [1, 3, 10], "support": [1, 3, 6, 7, 9, 10, 14], "customcompoundbondforc": 1, "contain": [1, 3, 4, 6, 9, 10, 12, 14, 25], "thei": [1, 3, 9, 10, 14], "must": [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 18], "pass": [1, 3, 10, 12], "keyword": [1, 3, 10], "argument": [1, 3, 4, 10, 14, 19], "constructor": [1, 3, 10], "scalar": [1, 3, 10], "arrai": [1, 3, 13], "length": [1, 3], "latter": [1, 3], "case": [1, 2, 3, 8, 11, 15, 16, 18, 22], "assign": [1, 3], "correspond": [1, 2, 3, 4, 8, 13, 14, 18], "It": [1, 3, 4, 10, 12, 14], "valid": [1, 3, 10], "arraylik": 1, "indic": [1, 3, 4, 11, 14, 15, 16, 20], "2d": [1, 3], "like": [1, 2, 3], "object": [1, 2, 3, 11, 12, 25], "shape": [1, 3], "number": [1, 3, 4, 6, 7, 8, 9, 11, 13, 14, 17, 18], "per": [1, 2, 3], "1d": [1, 3], "assum": [1, 3, 13, 18], "mmunit": [1, 2, 10, 11, 17, 20], "compat": [1, 3, 10, 12], "md": [1, 3, 10, 12, 13], "dalton": [1, 3, 10, 12], "distanc": [1, 2, 3, 7, 8, 10, 11, 12, 17, 18, 19, 20, 21, 23], "nanomet": [1, 3, 4, 7, 8, 10, 11, 12, 17, 18], "time": [1, 3, 10, 12, 19], "picosecond": [1, 3, 10, 12], "temperatur": [1, 3, 10, 12], "kelvin": [1, 3, 10, 12], "energi": [1, 2, 3, 10, 12, 24], "kilojoules_per_mol": [1, 3, 10, 12], "angl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "radian": [1, 3, 10, 12], "doe": [1, 3, 4, 6, 9, 10, 12, 14], "have": [1, 3, 10, 12], "dimensionless": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 20, 22], "t": [1, 10, 13, 25], "option": [1, 2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 18], "scalarquant": [1, 10], "when": [1, 15, 16], "entri": [1, 3], "rais": [1, 3, 4, 6, 9, 13, 17], "valueerror": [1, 3, 4, 6, 9, 13, 17], "ar": [1, 2, 3, 4, 7, 9, 10, 11, 13, 14, 17, 18, 22], "specifi": [1, 3], "numpi": [1, 3, 12, 13], "np": [1, 3, 12, 13], "alaninedipeptidevacuum": [1, 10, 12, 13, 15, 16], "angle1": 1, "10": [1, 14, 24], "angle2": 1, "15": [1, 6, 7, 8], "20": 1, "colvar": [1, 3], "k": [1, 3, 7, 8, 18, 20], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 10, 14], "pi": [1, 2, 10, 12, 13], "theta1": 1, "theta2": 1, "500": 1, "429": 1, "479": 1, "kj": [1, 10, 12], "mol": [1, 10, 12], "classmethod": 1, "fromopenmmforc": 1, "creat": [1, 14, 22], "convert": 1, "typeerror": 1, "app": [1, 6, 7, 8, 9, 14, 17, 18, 22], "lysozymeimplicit": [1, 3, 6, 7, 8, 9, 17, 20, 22], "residu": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 17, 18, 22], "topologi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 17, 18, 20, 22], "59": [1, 6, 7, 8, 9, 20, 22], "79": [1, 20], "helix_cont": [1, 6, 7, 8, 9, 22], "helixtorsioncont": [1, 21, 22, 23], "6": [1, 2, 10, 11, 13, 17, 24], "num_atom": [1, 14, 15, 16, 22], "getnumparticl": [1, 8, 15, 16, 18, 22], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 3, 6, 7, 8, 9, 11, 13, 17, 18], "addglobalparamet": 1, "7": [1, 13], "getnam": [1, 2, 11, 22], "getforc": [1, 2, 11], "copi": 1, "item": 1, "harmonicbondforc": [1, 14], "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": 1, "start": [1, 11, 23], "setforcegroup": 1, "state": 1, "getstat": 1, "getenergi": 1, "getpotentialenergi": 1, "copy_valu": 1, "print": [1, 2, 6, 7, 8, 9, 16, 17, 18, 22, 25], "origin": [1, 8, 18], "6f": 1, "2094": 1, "312": 1, "3239": 1, "795": 1, "4226": 1, "05": 1, "02155": 1, "17": [1, 2, 9], "4528": 1, "group1": [2, 11, 17], "group2": [2, 11, 17], "nonbondedforc": [2, 11], "contrastgroup": 2, "kilojoul": 2, "mole": 2, "contrastsc": 2, "attraction_strength": 2, "strength": 2, "attract": 2, "between": [2, 3, 4, 5, 8, 11, 14, 17, 18, 20, 22], "two": [2, 3, 5, 11, 17], "s_": 2, "rm": [2, 4, 6, 7, 8, 9, 14, 18, 19, 20], "attr": 2, "e_": 2, "ref": [2, 4, 6, 8, 9, 13, 14, 18], "bigg": 2, "g": [2, 3, 4, 8, 11, 17, 18], "_1": [2, 5, 11, 17], "substack": 2, "_2": [2, 5, 11, 17], "neq": [2, 11], "epsilon_": 2, "ij": 2, "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "varepsilon_0": 2, "r_": [2, 8, 11, 18], "elec": 2, "cutoff": [2, 11, 14], "permitt": 2, "empti": 2, "space": [2, 13, 24], "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": [2, 13], "sqrt": [2, 4, 8, 13, 14, 15, 18], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "one": [2, 8, 18, 22], "provid": [2, 11, 13], "_3": 2, "contrast": 2, "One": [2, 11], "also": [2, 11], "scale": [2, 13], "factor": [2, 11], "alpha": [2, 6, 7, 8, 9, 18], "balanc": 2, "contribut": 2, "interact": 2, "becom": [2, 10], "overlap": 2, "even": [2, 6, 9], "same": [2, 8, 14, 18], "self": [2, 11], "On": 2, "other": [2, 10], "hand": 2, "cannot": 2, "neither": 2, "nor": 2, "reduc": 2, "potenti": [2, 12, 24], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": [2, 13], "text": [2, 13, 25], "coulomb": [2, 24], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 22], "consid": [2, 8, 9, 11, 17, 18], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "give": 2, "lower": 2, "bound": [2, 3], "zero": 2, "upper": 2, "depend": [2, 10, 13], "detail": 2, "chosen": 2, "adopt": 2, "well": 2, "switch": [2, 11], "taken": [2, 11], "non": [2, 11], "exclus": [2, 11], "except": [2, 4, 11], "involv": [2, 11], "either": [2, 4, 14], "turn": [2, 11], "iter": [2, 3, 4, 10, 13, 15, 16, 17], "necessari": [2, 4, 14], "real": [2, 3, 6, 7, 8, 9, 11, 12, 13, 17, 18], "normal": [2, 6, 7, 8, 9, 11, 17, 18, 22], "extract": 2, "regardless": 2, "float": [2, 3, 11, 13, 20], "default": [2, 8, 11, 17, 18], "hostguestexplicit": [2, 11], "guest": 2, "b2": [2, 11], "host": 2, "cuc": 2, "cv1": 2, "femtosecond": [2, 4, 11, 14, 22], "4912": 2, "hoh": [2, 11], "cv2": 2, "reiniti": [2, 3, 11, 17, 18], "preservest": [2, 3, 11, 17, 18], "2063": 2, "cv3": 2, "2849": 2, "cv4": 2, "3880": 2, "8": [2, 8, 9, 10, 18], "weighbymass": [3, 15, 16, 17, 25], "centroid_funct": 3, "centroid": [3, 4, 14, 17], "big": [3, 20], "i_1": 3, "i_2": 3, "i_n": 3, "customcentroidbondforc": 3, "n_j": [3, 4], "weight": [3, 17], "redefin": 3, "m_j": 3, "total": [3, 4, 8, 11, 14, 15, 16, 17, 18], "list": [3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 20], "arbitrari": 3, "_supportsarrai": [3, 20], "dtype": [3, 20], "_nestedsequ": [3, 20], "complex": [3, 20], "byte": [3, 20], "center": [3, 8, 13, 14, 15, 16, 18], "instead": [3, 11, 15, 16, 18, 22], "geometr": [3, 15, 16], "out": 3, "itertool": [3, 8, 17, 18], "helic": 3, "res_coord": 3, "residuecoordin": [3, 21, 23], "115": 3, "124": 3, "126": [3, 24], "135": 3, "stepfunct": [3, 8, 11, 17, 18], "step": [3, 7, 8, 11, 14, 17, 18], "33": [3, 7], "recomput": 3, "product": 3, "9": [3, 13, 18, 24], "18": [3, 6, 20, 24], "g1": 3, "g2": 3, "referenceposit": [4, 14], "numatom": [4, 8, 14, 18], "composite_rmsd": 4, "composit": 4, "root": [4, 8, 14, 18], "mean": [4, 8, 14, 18], "squar": [4, 8, 13, 14, 16, 18], "deviat": [4, 13, 14], "rmsd": [4, 8, 18, 21, 23], "current": [4, 14], "d_": [4, 7, 14, 18], "crm": 4, "min_": [4, 14], "mathbb": [4, 14], "atop": [4, 14], "rotat": [4, 8, 14, 18], "matrix": [4, 8, 13, 14, 18], "quaternion": [4, 14], "structur": [4, 14, 24], "respect": [4, 7, 9, 13, 15, 16], "analog": 4, "To": [4, 11, 22], "you": 4, "instal": [4, 23], "cpp": 4, "conda": [4, 22], "packag": [4, 22], "ndarrai": [4, 13, 14], "sequenc": [4, 6, 7, 8, 9, 10, 11, 13, 14, 18, 22], "dict": [4, 10, 14], "map": [4, 14], "vector": [4, 13, 14], "all": [4, 14, 18, 20], "need": [4, 6, 9, 14], "below": [4, 14], "disjoint": [4, 17], "includ": [4, 14, 17, 22], "those": [4, 14], "importerror": 4, "mm": 4, "pytest": 4, "hostguestvacuum": 4, "host_atom": 4, "guest_atom": 4, "try": 4, "skip": 4, "7320": 5, "thetarefer": 6, "88": 6, "degre": [6, 9, 10, 20], "toler": [6, 9], "halfexpon": [6, 7, 9], "helix_angle_cont": 6, "helix": [6, 7, 8, 9, 22], "content": [6, 7, 8, 9, 18, 22], "alpha_": [6, 7, 8, 9], "b_m": [6, 7, 9], "alpha_i": 6, "theta_": [6, 9], "tol": [6, 9], "carbon": [6, 7], "threshold": [6, 7, 8, 9, 11, 17, 18], "around": [6, 9], "smooth": [6, 7, 8, 9, 18], "boxcar": [6, 9], "2m": [6, 7, 9], "integ": [6, 7, 9, 18], "control": [6, 7, 9], "steep": [6, 7, 9], "note": [6, 9], "elev": [6, 9], "power": [6, 9, 22], "contigu": [6, 7, 8, 9, 18], "singl": [6, 7, 8, 9, 18], "chain": [6, 7, 8, 9, 18], "order": [6, 7, 8, 9, 18], "terminu": [6, 7, 8, 9, 18], "due": [6, 7, 9], "limit": [6, 7, 8, 9, 18], "maximum": [6, 7, 9], "37": [6, 7, 9], "some": [6, 9], "80": [6, 7, 8, 9, 22], "ly": [6, 7, 8, 9], "asp": [6, 7, 8, 9, 17], "glu": [6, 7, 8, 9, 17, 18], "il": [6, 7, 8, 9], "leu": [6, 7, 8, 9], "arg": [6, 7, 8, 9, 17], "7605": 6, "thresholddist": [7, 11, 17], "helix_hbond_cont": 7, "hydrogen": [7, 17], "bond": [7, 14], "hb": 7, "h": [7, 8, 11, 17, 18], "o": [7, 8, 18], "_k": [7, 8, 18], "oxygen": 7, "nitrogen": 7, "addit": [7, 18], "880": 7, "thresholdrmsd": [8, 18], "08": [8, 18], "helix_rmsd_cont": 8, "r_0": [8, 11, 17, 18], "repres": [8, 10, 18], "ideal": [8, 18], "configur": [8, 10, 18], "whose": [8, 12, 13, 18], "everi": [8, 18], "beta": [8, 18, 24], "six": [8, 18], "involvend": [8, 18], "thu": [8, 18], "compris": [8, 18], "glycin": [8, 18], "miss": [8, 18], "replac": [8, 15, 16, 18], "hat": [8, 13, 14, 18], "rel": [8, 14, 18], "geometri": [8, 14, 18], "minim": [8, 18], "done": [8, 18], "divid": [8, 18], "n_": [8, 18], "wa": [8, 18], "introduc": [8, 18], "shown": [8, 18], "abov": [8, 18, 19], "ident": [8, 18], "paper": [8, 18], "written": [8, 18], "numer": [8, 12, 18, 19], "safe": [8, 18], "alpharmsd": 8, "plume": [8, 18, 20], "v2": [8, 18], "present": [8, 18], "implement": [8, 18], "leq": [8, 18], "1024": [8, 18], "calcul": [8, 10, 17, 18, 19, 20, 24], "requir": [8, 18], "close": [8, 18, 22], "match": [8, 10, 18], "islic": [8, 17, 18], "getnumresidueblock": [8, 18], "16": [8, 10], "normalized_helix_cont": 8, "98": 8, "998": 8, "phirefer": 9, "63": 9, "psirefer": 9, "41": 9, "25": [9, 13], "helix_torsion_cont": 9, "ramachandran": 9, "phi_i": 9, "phi_": 9, "psi_i": 9, "psi_": 9, "refenr": 9, "last": [9, 18], "penultim": 9, "452": 9, "collective_vari": 10, "meta_collective_vari": 10, "c_1": 10, "c_2": 10, "ldot": [10, 18], "c_n": 10, "c_i": 10, "customcvforc": [10, 22], "basecollectivevari": [10, 13], "instanc": [10, 12, 22, 25], "meta": 10, "uniqu": 10, "symbol": 10, "math": 10, "14": 10, "driving_forc": 10, "kappa": 10, "min": [10, 18], "delta": 10, "ab": 10, "phi0": 10, "120": 10, "548": 10, "getinnervalu": 10, "getinnereffectivemass": 10, "act": 10, "particl": 10, "dictionari": 10, "kei": 10, "cutofffactor": 11, "switchfactor": 11, "number_of_contact": 11, "contact": [11, 17], "equal": [11, 13, 17], "made": [11, 17], "otherwis": [11, 17], "For": [11, 17, 18], "trajectori": [11, 17, 20, 22], "analysi": [11, 17, 22], "fine": [11, 17], "make": [11, 13, 17], "heavisid": [11, 17], "molecular": [11, 17, 24], "dynam": [11, 17, 24], "howev": [11, 17, 18], "continu": [11, 17], "approxim": [11, 17], "geq": [11, 17], "By": [11, 17], "follow": [11, 17, 22], "12": [11, 17], "fact": 11, "r_c": 11, "x_c": 11, "typic": 11, "appli": 11, "so": 11, "avoid": 11, "discontinu": 11, "smoothli": 11, "off": 11, "x_": 11, "do": 11, "abruptli": 11, "allow": 11, "both": [11, 18], "ignor": 11, "pair": [11, 20], "distinct": [11, 14], "count": 11, "onc": 11, "obtain": 11, "thereof": [11, 17], "being": [11, 13, 17], "multipli": 11, "els": 11, "extend": 11, "nc": 11, "nc_normal": 11, "99999": [11, 17], "openmmforc": 12, "openmm_force_wrapp": 12, "xml": 12, "serial": [12, 23], "customangleforc": 12, "addangl": 12, "assert": 12, "isinst": 12, "911": 12, "00538": 12, "metric": 13, "mileston": 13, "sigma": 13, "progress": 13, "z": 13, "path": 13, "dfrac": 13, "w_i": 13, "ln": 13, "gaussian": 13, "kernel": 13, "exp": 13, "locat": 13, "width": 13, "norm": 13, "diagon": 13, "element": 13, "characterist": 13, "appropri": 13, "relat": 13, "lambda": 13, "row": 13, "column": 13, "standard": 13, "path_progress_in_cv_spac": 13, "path_deviation_in_cv_spac": 13, "less": 13, "than": [13, 16], "differ": [13, 18, 22], "phi_atom": [13, 20], "ac": [13, 24], "ala": [13, 18], "psi_atom": 13, "nme": 13, "path_var": 13, "var": 13, "append": 13, "50": 13, "superscript": 14, "denot": 14, "problem": 14, "belong": 14, "possibl": [14, 17, 22], "circumv": 14, "issu": 14, "call": [14, 20], "getnullbondforc": 14, "result": 14, "alaninedipeptideimplicit": 14, "getnumatom": 14, "123138": 14, "null": 14, "connect": 14, "graph": 14, "waterbox": 14, "box_edg": 14, "angstrom": 14, "100": 14, "10436": 14, "r_g": [15, 16], "_c": [15, 16], "_m": [15, 16], "lack": 15, "parallel": [15, 16, 18], "might": [15, 16], "slow": 15, "larg": [15, 16], "radiusofgyrationsq": [15, 21, 23], "prefer": [15, 16], "2951": 15, "radius_of_gyration_sq": 16, "better": 16, "over": 16, "rgsq": 16, "0871": 16, "residuegroup1": 17, "residuegroup2": 17, "includehydrogen": 17, "residue_coordin": 17, "ha": 17, "125": 17, "142": 17, "trp": 17, "asn": 17, "gln": 17, "thr": [17, 18], "156": 17, "pro": 17, "gly": 17, "customintegr": 17, "26": 17, "setreferencevalu": 17, "getreferencevalu": 17, "blocksiz": 18, "sheet_rmsd_cont": 18, "sheet": [18, 24], "beta_": 18, "minimum": 18, "subset": 18, "protein": [18, 22, 24], "antiparallel": 18, "minimim": 18, "choos": 18, "partit": 18, "block": 18, "n_1": 18, "n_2": 18, "n_m": 18, "compos": 18, "consecut": 18, "next": 18, "definit": 18, "modifi": 18, "l_": 18, "l_k": 18, "n_i": 18, "separ": [18, 19], "n_k": 18, "antibetarmsd": 18, "parabetarmsd": 18, "srcimplicit": 18, "68": 18, "82": 18, "tyr": 18, "val": 18, "sheet_cont": 18, "28": 18, "0465": 18, "blockwise_sheet_cont": 18, "9859": 18, "atom4": 19, "four": [19, 20, 22], "varphi": 19, "atan2": 19, "u": 19, "arctang": 19, "receiv": 19, "denomin": 19, "fourth": 19, "5707": 19, "firstlist": 20, "secondlist": 20, "torsion_similar": 20, "similar": 20, "co": 20, "1st": 20, "2nd": 20, "kth": 20, "dihcor": 20, "tupl": 20, "mdtraj": 20, "traj": 20, "from_openmm": 20, "compute_phi": 20, "valid_atom": 20, "659": 20, "atomicfunct": [21, 23], "attractionstrength": [21, 23], "centroidfunct": [21, 23], "compositermsd": [21, 23], "helixanglecont": [21, 22, 23], "helixhbondcont": [21, 22, 23], "helixrmsdcont": [21, 22, 23], "metacollectivevari": [21, 23], "numberofcontact": [21, 23], "openmmforcewrapp": [21, 23], "pathincvspac": [21, 23], "sheetrmsdcont": [21, 23], "torsionsimilar": [21, 23], "python": [22, 23], "pre": 22, "biasvari": 22, "metadynam": 22, "simul": 22, "collectivevari": 22, "uf": 22, "har": 22, "environ": 22, "run": 22, "command": 22, "forg": 22, "mdtool": 22, "Or": 22, "mamba": 22, "your": 22, "script": 22, "jupyt": 22, "notebook": 22, "show": 22, "how": 22, "quantifi": 22, "modul": [22, 23], "t4": 22, "lysozym": 22, "l99a": 22, "longest": 22, "occur": 22, "lys60": 22, "arg80": 22, "final": 22, "round": 22, "seven": 22, "decim": 22, "place": 22, "output": 22, "9873989": 22, "93414": 22, "9946999": 22, "918571": 22, "expect": 22, "matter": 22, "star": 23, "introduct": 23, "usag": 23, "api": 23, "deseri": [23, 25], "bibliographi": 23, "search": 23, "page": 23, "christoph": 24, "chipot": 24, "andrew": 24, "pohoril": 24, "editor": 24, "free": 24, "springer": 24, "berlin": 24, "heidelberg": 24, "2007": 24, "url": 24, "http": 24, "doi": 24, "org": 24, "1007": 24, "978": 24, "540": 24, "38448": 24, "gabriela": 24, "b": 24, "correa": 24, "\u00e9": 24, "ssica": 24, "l": 24, "maciel": 24, "frederico": 24, "w": 24, "tavar": 24, "charll": 24, "abreu": 24, "new": 24, "formul": 24, "concert": 24, "alchem": 24, "van": 24, "der": 24, "waal": 24, "compon": 24, "solvat": 24, "journal": 24, "chemic": 24, "theori": 24, "5876": 24, "5889": 24, "octob": 24, "2022": 24, "1021": 24, "jctc": 24, "2c00563": 24, "fabio": 24, "pietrucci": 24, "alessandro": 24, "laio": 24, "explor": 24, "applic": 24, "sh": 24, "gb": 24, "2197": 24, "2201": 24, "aug": 24, "2009": 24, "ct900202f": 24, "sven": 24, "hovm\u00f6ller": 24, "tupe": 24, "zhou": 24, "toma": 24, "ohlson": 24, "conform": 24, "amino": 24, "acid": 24, "acta": 24, "crystallographica": 24, "section": 24, "biolog": 24, "crystallographi": 24, "58": 24, "768": 24, "776": 24, "apr": 24, "2002": 24, "1107": 24, "s0907444902003359": 24, "marcella": 24, "iannuzzi": 24, "michel": 24, "parrinello": 24, "reactiv": 24, "surfac": 24, "car": 24, "physic": 24, "review": 24, "letter": 24, "jun": 24, "2003": 24, "1103": 24, "physrevlett": 24, "90": 24, "238302": 24, "david": 24, "branduardi": 24, "francesco": 24, "luigi": 24, "gervasio": 24, "054103": 24, "februari": 24, "1063": 24, "2432340": 24, "obj": 25, "iostream": 25, "io": 25, "stream": 25, "write": 25, "mode": 25, "stringio": 25, "read": 25, "seek": 25, "new_object": 25}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [3, 0, 1, "", "CentroidFunction"], [4, 0, 1, "", "CompositeRMSD"], [5, 0, 1, "", "Distance"], [6, 0, 1, "", "HelixAngleContent"], [7, 0, 1, "", "HelixHBondContent"], [8, 0, 1, "", "HelixRMSDContent"], [9, 0, 1, "", "HelixTorsionContent"], [10, 0, 1, "", "MetaCollectiveVariable"], [11, 0, 1, "", "NumberOfContacts"], [12, 0, 1, "", "OpenMMForceWrapper"], [13, 0, 1, "", "PathInCVSpace"], [14, 0, 1, "", "RMSD"], [15, 0, 1, "", "RadiusOfGyration"], [16, 0, 1, "", "RadiusOfGyrationSq"], [17, 0, 1, "", "ResidueCoordination"], [18, 0, 1, "", "SheetRMSDContent"], [19, 0, 1, "", "Torsion"], [20, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "addToSystem"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getMassUnit"], [0, 1, 1, "", "getPeriod"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "addToSystem"], [1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getMassUnit"], [1, 1, 1, "", "getPeriod"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "addToSystem"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getMassUnit"], [2, 1, 1, "", "getPeriod"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"]], "cvpack.CentroidFunction": [[3, 1, 1, "", "addToSystem"], [3, 1, 1, "", "getEffectiveMass"], [3, 1, 1, "", "getMassUnit"], [3, 1, 1, "", "getPeriod"], [3, 1, 1, "", "getUnit"], [3, 1, 1, "", "getValue"]], "cvpack.CompositeRMSD": [[4, 1, 1, "", "addToSystem"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getMassUnit"], [4, 1, 1, "", "getPeriod"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"]], "cvpack.Distance": [[5, 1, 1, "", "addToSystem"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getMassUnit"], [5, 1, 1, "", "getPeriod"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"]], "cvpack.HelixAngleContent": [[6, 1, 1, "", "addToSystem"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getMassUnit"], [6, 1, 1, "", "getPeriod"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"]], "cvpack.HelixHBondContent": [[7, 1, 1, "", "addToSystem"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getMassUnit"], [7, 1, 1, "", "getPeriod"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"]], "cvpack.HelixRMSDContent": [[8, 1, 1, "", "addToSystem"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getMassUnit"], [8, 1, 1, "", "getPeriod"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"]], "cvpack.HelixTorsionContent": [[9, 1, 1, "", "addToSystem"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getMassUnit"], [9, 1, 1, "", "getPeriod"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"]], "cvpack.MetaCollectiveVariable": [[10, 1, 1, "", "addToSystem"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getInnerEffectiveMasses"], [10, 1, 1, "", "getInnerValues"], [10, 1, 1, "", "getMassUnit"], [10, 1, 1, "", "getPeriod"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"]], "cvpack.NumberOfContacts": [[11, 1, 1, "", "addToSystem"], [11, 1, 1, "", "getEffectiveMass"], [11, 1, 1, "", "getMassUnit"], [11, 1, 1, "", "getPeriod"], [11, 1, 1, "", "getUnit"], [11, 1, 1, "", "getValue"]], "cvpack.OpenMMForceWrapper": [[12, 1, 1, "", "addToSystem"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getMassUnit"], [12, 1, 1, "", "getPeriod"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"]], "cvpack.PathInCVSpace": [[13, 1, 1, "", "addToSystem"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getMassUnit"], [13, 1, 1, "", "getPeriod"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"]], "cvpack.RMSD": [[14, 1, 1, "", "addToSystem"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getMassUnit"], [14, 1, 1, "", "getNullBondForce"], [14, 1, 1, "", "getPeriod"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyration": [[15, 1, 1, "", "addToSystem"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getMassUnit"], [15, 1, 1, "", "getPeriod"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyrationSq": [[16, 1, 1, "", "addToSystem"], [16, 1, 1, "", "getEffectiveMass"], [16, 1, 1, "", "getMassUnit"], [16, 1, 1, "", "getPeriod"], [16, 1, 1, "", "getUnit"], [16, 1, 1, "", "getValue"]], "cvpack.ResidueCoordination": [[17, 1, 1, "", "addToSystem"], [17, 1, 1, "", "getEffectiveMass"], [17, 1, 1, "", "getMassUnit"], [17, 1, 1, "", "getPeriod"], [17, 1, 1, "", "getReferenceValue"], [17, 1, 1, "", "getUnit"], [17, 1, 1, "", "getValue"], [17, 1, 1, "", "setReferenceValue"]], "cvpack.SheetRMSDContent": [[18, 1, 1, "", "addToSystem"], [18, 1, 1, "", "getEffectiveMass"], [18, 1, 1, "", "getMassUnit"], [18, 1, 1, "", "getPeriod"], [18, 1, 1, "", "getUnit"], [18, 1, 1, "", "getValue"]], "cvpack.Torsion": [[19, 1, 1, "", "addToSystem"], [19, 1, 1, "", "getEffectiveMass"], [19, 1, 1, "", "getMassUnit"], [19, 1, 1, "", "getPeriod"], [19, 1, 1, "", "getUnit"], [19, 1, 1, "", "getValue"]], "cvpack.TorsionSimilarity": [[20, 1, 1, "", "addToSystem"], [20, 1, 1, "", "getEffectiveMass"], [20, 1, 1, "", "getMassUnit"], [20, 1, 1, "", "getPeriod"], [20, 1, 1, "", "getUnit"], [20, 1, 1, "", "getValue"]], "cvpack.serialization": [[25, 2, 1, "", "deserialize"], [25, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "centroidfunct": 3, "compositermsd": 4, "distanc": 5, "helixanglecont": 6, "helixhbondcont": 7, "helixrmsdcont": 8, "helixtorsioncont": 9, "metacollectivevari": 10, "numberofcontact": 11, "openmmforcewrapp": 12, "pathincvspac": 13, "rmsd": 14, "radiusofgyr": 15, "radiusofgyrationsq": 16, "residuecoordin": 17, "sheetrmsdcont": 18, "torsion": 19, "torsionsimilar": 20, "python": 21, "api": 21, "get": 22, "start": 22, "introduct": 22, "instal": 22, "usag": 22, "exampl": 22, "collect": 23, "variabl": 23, "packag": 23, "content": 23, "indic": 23, "tabl": 23, "bibliographi": 24, "serial": 25}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CentroidFunction": [[3, "centroidfunction"]], "CompositeRMSD": [[4, "compositermsd"]], "Distance": [[5, "distance"]], "HelixAngleContent": [[6, "helixanglecontent"]], "HelixHBondContent": [[7, "helixhbondcontent"]], "HelixRMSDContent": [[8, "helixrmsdcontent"]], "HelixTorsionContent": [[9, "helixtorsioncontent"]], "MetaCollectiveVariable": [[10, "metacollectivevariable"]], "NumberOfContacts": [[11, "numberofcontacts"]], "OpenMMForceWrapper": [[12, "openmmforcewrapper"]], "PathInCVSpace": [[13, "pathincvspace"]], "RMSD": [[14, "rmsd"]], "RadiusOfGyration": [[15, "radiusofgyration"]], "RadiusOfGyrationSq": [[16, "radiusofgyrationsq"]], "ResidueCoordination": [[17, "residuecoordination"]], "SheetRMSDContent": [[18, "sheetrmsdcontent"]], "Torsion": [[19, "torsion"]], "TorsionSimilarity": [[20, "torsionsimilarity"]], "Python API": [[21, "python-api"]], "Getting Started": [[22, "getting-started"]], "Introduction": [[22, "introduction"]], "Installation": [[22, "installation"]], "Usage": [[22, "usage"]], "Example": [[22, "example"]], "Collective Variable Package": [[23, "collective-variable-package"]], "Contents": [[23, "contents"]], "Indices and tables": [[23, "indices-and-tables"]], "Bibliography": [[24, "bibliography"]], "Serialization": [[25, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "addtosystem() (cvpack.angle method)": [[0, "cvpack.Angle.addToSystem"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getmassunit() (cvpack.angle method)": [[0, "cvpack.Angle.getMassUnit"]], "getperiod() (cvpack.angle method)": [[0, "cvpack.Angle.getPeriod"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "addtosystem() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.addToSystem"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getmassunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getMassUnit"]], "getperiod() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getPeriod"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "addtosystem() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.addToSystem"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getmassunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getMassUnit"]], "getperiod() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getPeriod"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "centroidfunction (class in cvpack)": [[3, "cvpack.CentroidFunction"]], "addtosystem() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.addToSystem"]], "geteffectivemass() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getEffectiveMass"]], "getmassunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getMassUnit"]], "getperiod() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getPeriod"]], "getunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getValue"]], "compositermsd (class in cvpack)": [[4, "cvpack.CompositeRMSD"]], "addtosystem() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.addToSystem"]], "geteffectivemass() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getEffectiveMass"]], "getmassunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getMassUnit"]], "getperiod() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getPeriod"]], "getunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getUnit"]], "getvalue() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getValue"]], "distance (class in cvpack)": [[5, "cvpack.Distance"]], "addtosystem() (cvpack.distance method)": [[5, "cvpack.Distance.addToSystem"]], "geteffectivemass() (cvpack.distance method)": [[5, "cvpack.Distance.getEffectiveMass"]], "getmassunit() (cvpack.distance method)": [[5, "cvpack.Distance.getMassUnit"]], "getperiod() (cvpack.distance method)": [[5, "cvpack.Distance.getPeriod"]], "getunit() (cvpack.distance method)": [[5, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[5, "cvpack.Distance.getValue"]], "helixanglecontent (class in cvpack)": [[6, "cvpack.HelixAngleContent"]], "addtosystem() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.addToSystem"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getEffectiveMass"]], "getmassunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getMassUnit"]], "getperiod() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getPeriod"]], "getunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getValue"]], "helixhbondcontent (class in cvpack)": [[7, "cvpack.HelixHBondContent"]], "addtosystem() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.addToSystem"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getEffectiveMass"]], "getmassunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getMassUnit"]], "getperiod() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getPeriod"]], "getunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getValue"]], "helixrmsdcontent (class in cvpack)": [[8, "cvpack.HelixRMSDContent"]], "addtosystem() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getMassUnit"]], "getperiod() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getPeriod"]], "getunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getValue"]], "helixtorsioncontent (class in cvpack)": [[9, "cvpack.HelixTorsionContent"]], "addtosystem() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.addToSystem"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getmassunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getMassUnit"]], "getperiod() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getPeriod"]], "getunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getValue"]], "metacollectivevariable (class in cvpack)": [[10, "cvpack.MetaCollectiveVariable"]], "addtosystem() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.addToSystem"]], "geteffectivemass() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getEffectiveMass"]], "getinnereffectivemasses() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getInnerEffectiveMasses"]], "getinnervalues() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getInnerValues"]], "getmassunit() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getMassUnit"]], "getperiod() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getPeriod"]], "getunit() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getUnit"]], "getvalue() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getValue"]], "numberofcontacts (class in cvpack)": [[11, "cvpack.NumberOfContacts"]], "addtosystem() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.addToSystem"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getEffectiveMass"]], "getmassunit() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getMassUnit"]], "getperiod() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getPeriod"]], "getunit() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getValue"]], "openmmforcewrapper (class in cvpack)": [[12, "cvpack.OpenMMForceWrapper"]], "addtosystem() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.addToSystem"]], "geteffectivemass() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getEffectiveMass"]], "getmassunit() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getMassUnit"]], "getperiod() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getPeriod"]], "getunit() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getUnit"]], "getvalue() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getValue"]], "pathincvspace (class in cvpack)": [[13, "cvpack.PathInCVSpace"]], "addtosystem() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.addToSystem"]], "geteffectivemass() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getEffectiveMass"]], "getmassunit() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getMassUnit"]], "getperiod() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getPeriod"]], "getunit() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getUnit"]], "getvalue() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getValue"]], "rmsd (class in cvpack)": [[14, "cvpack.RMSD"]], "addtosystem() (cvpack.rmsd method)": [[14, "cvpack.RMSD.addToSystem"]], "geteffectivemass() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getEffectiveMass"]], "getmassunit() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getMassUnit"]], "getnullbondforce() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getNullBondForce"]], "getperiod() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getPeriod"]], "getunit() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getValue"]], "radiusofgyration (class in cvpack)": [[15, "cvpack.RadiusOfGyration"]], "addtosystem() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getMassUnit"]], "getperiod() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getPeriod"]], "getunit() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getValue"]], "radiusofgyrationsq (class in cvpack)": [[16, "cvpack.RadiusOfGyrationSq"]], "addtosystem() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getMassUnit"]], "getperiod() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getPeriod"]], "getunit() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getValue"]], "residuecoordination (class in cvpack)": [[17, "cvpack.ResidueCoordination"]], "addtosystem() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.addToSystem"]], "geteffectivemass() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.getEffectiveMass"]], "getmassunit() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.getMassUnit"]], "getperiod() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.getPeriod"]], "getreferencevalue() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.getReferenceValue"]], "getunit() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.getUnit"]], "getvalue() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.getValue"]], "setreferencevalue() (cvpack.residuecoordination method)": [[17, "cvpack.ResidueCoordination.setReferenceValue"]], "sheetrmsdcontent (class in cvpack)": [[18, "cvpack.SheetRMSDContent"]], "addtosystem() (cvpack.sheetrmsdcontent method)": [[18, "cvpack.SheetRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[18, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.sheetrmsdcontent method)": [[18, "cvpack.SheetRMSDContent.getMassUnit"]], "getperiod() (cvpack.sheetrmsdcontent method)": [[18, "cvpack.SheetRMSDContent.getPeriod"]], "getunit() (cvpack.sheetrmsdcontent method)": [[18, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[18, "cvpack.SheetRMSDContent.getValue"]], "torsion (class in cvpack)": [[19, "cvpack.Torsion"]], "addtosystem() (cvpack.torsion method)": [[19, "cvpack.Torsion.addToSystem"]], "geteffectivemass() (cvpack.torsion method)": [[19, "cvpack.Torsion.getEffectiveMass"]], "getmassunit() (cvpack.torsion method)": [[19, "cvpack.Torsion.getMassUnit"]], "getperiod() (cvpack.torsion method)": [[19, "cvpack.Torsion.getPeriod"]], "getunit() (cvpack.torsion method)": [[19, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[19, "cvpack.Torsion.getValue"]], "torsionsimilarity (class in cvpack)": [[20, "cvpack.TorsionSimilarity"]], "addtosystem() (cvpack.torsionsimilarity method)": [[20, "cvpack.TorsionSimilarity.addToSystem"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[20, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getmassunit() (cvpack.torsionsimilarity method)": [[20, "cvpack.TorsionSimilarity.getMassUnit"]], "getperiod() (cvpack.torsionsimilarity method)": [[20, "cvpack.TorsionSimilarity.getPeriod"]], "getunit() (cvpack.torsionsimilarity method)": [[20, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[20, "cvpack.TorsionSimilarity.getValue"]], "deserialize() (in module cvpack.serialization)": [[25, "cvpack.serialization.deserialize"]], "serialize() (in module cvpack.serialization)": [[25, "cvpack.serialization.serialize"]]}})