Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CentroidFunction", "api/CompositeRMSD", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/NumberOfContacts", "api/OpenMMForceWrapper", "api/PathInCVSpace", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/ResidueCoordination", "api/SheetRMSDContent", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CentroidFunction.rst", "api/CompositeRMSD.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/NumberOfContacts.rst", "api/OpenMMForceWrapper.rst", "api/PathInCVSpace.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/ResidueCoordination.rst", "api/SheetRMSDContent.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CentroidFunction", "CompositeRMSD", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "NumberOfContacts", "OpenMMForceWrapper", "PathInCVSpace", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "ResidueCoordination", "SheetRMSDContent", "Torsion", "TorsionSimilarity", "Python API", "Getting Started", "Collective Variable Package", "Bibliography", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "atom1": [0, 5, 18], "atom2": [0, 5, 18], "atom3": [0, 18], "pbc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24], "form": [0, 6, 8, 17, 18], "three": [0, 17], "atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "theta": [0, 6, 11], "bf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "mathrm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "aco": 0, "left": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "frac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "_": [0, 1, 2, 3, 6, 7, 8, 12, 17, 18, 19], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24], "cdot": [0, 18], "3": [0, 1, 2, 6, 7, 8, 9, 10, 12, 13, 17, 18, 23], "right": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "where": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "j": [0, 1, 2, 3, 4, 8, 10, 14, 15, 16, 17, 18, 23], "_j": [0, 2, 3, 4, 8, 10, 14, 15, 16, 18], "_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "first": [0, 2, 5, 9, 10, 16, 18, 19], "second": [0, 2, 5, 9, 10, 16, 18, 19], "third": [0, 2, 18], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "whether": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23], "period": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "boundari": [0, 1, 2, 3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19], "condit": [0, 1, 2, 3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 18, 19], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "addparticl": [0, 1, 5, 18], "rang": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "addforc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "integr": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 21], "verletintegr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "platform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "getplatformbynam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "vec3": [0, 4, 5, 12, 13, 18], "po": [0, 18], "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "digit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "570796": [0, 18], "rad": [0, 11, 18], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "classmethod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "getargu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "inspect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "argument": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "need": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "construct": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "instanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "A": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24], "dictionari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "annot": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "tupl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "ordereddict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "radiusofgyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "item": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "f": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "iter": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "weighbymass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "geteffectivemass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "q": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "defin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "m_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "sum_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "m_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "dq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "round": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "precis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "after": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "decim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "scientif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "notat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "more": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "effici": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "onli": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "forc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "see": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23], "should": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "evalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "alaninedipeptideimplicit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "peptid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "topologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "residu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "hoh": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "radius_of_gyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24], "setforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "setunusedforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "30": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "94693": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "getperiod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "getunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "measur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "setunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "ascend": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "order": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "unus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "own": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "search": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "wa": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "rais": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "runtimeerror": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], "alreadi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "function": [1, 2, 3, 6, 7, 8, 9, 10, 16, 17, 18], "true": [1, 2, 3, 10, 16, 17, 21], "gener": [1, 3], "coordin": [1, 3, 4, 13, 16, 17], "split": [1, 3], "m": [1, 3, 4, 6, 7, 9, 14, 15, 17], "each": [1, 3, 4, 10, 12, 16, 17, 19], "dot": [1, 3], "user": [1, 3], "th": [1, 3, 8, 12, 13, 17, 19], "string": [1, 3, 11], "ani": [1, 2, 3, 10, 17, 24], "express": [1, 3], "support": [1, 3, 6, 7, 9, 13], "customcompoundbondforc": 1, "contain": [1, 3, 4, 6, 9, 11, 13, 24], "thei": [1, 3, 9, 13], "must": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17], "pass": [1, 3, 11], "keyword": [1, 3], "constructor": [1, 3], "scalar": [1, 3], "arrai": [1, 3, 12], "length": [1, 3], "In": [1, 2, 3, 7, 8, 10, 14, 15, 17, 19], "latter": [1, 3], "case": [1, 2, 3, 8, 10, 14, 15, 17, 21], "assign": [1, 3], "correspond": [1, 2, 3, 4, 8, 12, 13, 17], "str": [1, 3, 8, 10, 11, 16, 17], "It": [1, 3, 4, 11, 13], "valid": [1, 3], "arraylik": 1, "indic": [1, 3, 4, 10, 13, 14, 15, 19], "2d": [1, 3], "like": [1, 2, 3], "object": [1, 2, 3, 10, 11, 24], "shape": [1, 3], "per": [1, 2, 3], "1d": [1, 3], "assum": [1, 3, 12, 17], "mmunit": [1, 2, 10, 16, 19], "compat": [1, 3, 11], "md": [1, 3, 11, 12], "dalton": [1, 3, 11], "distanc": [1, 2, 3, 7, 8, 10, 11, 16, 17, 20, 22], "nanomet": [1, 3, 4, 7, 8, 10, 11, 16, 17], "time": [1, 3, 11, 18], "picosecond": [1, 3, 11], "temperatur": [1, 3, 11], "kelvin": [1, 3, 11], "energi": [1, 2, 3, 11, 23], "kilojoules_per_mol": [1, 3, 11], "angl": [1, 3, 6, 9, 11, 18, 19, 20, 22], "radian": [1, 3, 11], "doe": [1, 3, 4, 6, 9, 11, 13], "have": [1, 3, 11], "dimensionless": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 21], "t": [1, 12], "scalarquant": 1, "quantiti": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], "entri": [1, 3], "valueerror": [1, 3, 4, 6, 9, 12, 16], "numpi": [1, 3, 11, 12], "np": [1, 3, 11, 12], "alaninedipeptidevacuum": [1, 11, 12, 14, 15], "angle1": 1, "5": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 23], "10": [1, 13, 23], "angle2": 1, "15": [1, 6, 7, 8], "20": 1, "colvar": [1, 3], "k": [1, 3, 7, 8, 17, 19], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 13], "pi": [1, 2, 11, 12], "7": [1, 3, 12, 13, 17, 21], "theta1": 1, "value_in_unit": 1, "theta2": 1, "500": 1, "429": 1, "479": 1, "kj": [1, 11], "mol": [1, 11], "fromopenmmforc": 1, "creat": [1, 13, 21], "convert": 1, "typeerror": 1, "app": [1, 6, 7, 8, 9, 13, 16, 17, 21], "lysozymeimplicit": [1, 3, 6, 7, 8, 9, 16, 19, 21], "59": [1, 6, 7, 8, 9, 19, 21], "79": [1, 6, 7, 9, 19], "helix_cont": [1, 6, 7, 8, 9, 21], "helixtorsioncont": [1, 20, 21, 22], "num_atom": [1, 13, 14, 15, 21], "getnumparticl": [1, 8, 14, 15, 17, 21], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 3, 6, 7, 8, 9, 10, 12, 16, 17], "addglobalparamet": 1, "getnam": [1, 2, 10, 21], "getforc": [1, 2, 10], "copi": 1, "harmonicbondforc": 1, "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": 1, "start": [1, 10, 22], "state": 1, "getstat": 1, "getenergi": 1, "getpotentialenergi": 1, "copy_valu": 1, "origin": [1, 8, 17], "6f": 1, "2094": 1, "312483": 1, "312": 1, "3239": 1, "795215": 1, "795": 1, "4226": 1, "051934": 1, "052": 1, "021558": 1, "17": [1, 9], "452849": 1, "45285": [1, 9], "group1": [2, 10, 16], "group2": [2, 10, 16], "nonbondedforc": [2, 10], "contrastgroup": 2, "kilojoul": 2, "mole": 2, "strength": 2, "attract": 2, "between": [2, 3, 4, 5, 8, 10, 13, 16, 17, 19, 21], "two": [2, 3, 5, 10, 16], "s_": 2, "rm": [2, 4, 6, 7, 8, 9, 13, 17, 18, 19], "attr": 2, "e_": 2, "ref": [2, 4, 6, 8, 9, 12, 13, 17], "bigg": 2, "g": [2, 3, 4, 8, 10, 16, 17], "_1": [2, 5, 10, 16], "substack": 2, "_2": [2, 5, 10, 16], "neq": [2, 10], "epsilon_": 2, "ij": 2, "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "4": [2, 4, 7, 8, 9, 10, 12, 13, 17, 18, 23], "varepsilon_0": 2, "r_": [2, 8, 10, 17], "c": [2, 4, 6, 7, 8, 9, 12, 17, 21, 23], "elec": 2, "cutoff": [2, 10, 13], "permitt": 2, "empti": 2, "space": [2, 12, 23], "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": [2, 12], "sqrt": [2, 4, 8, 12, 13, 14, 17], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "provid": [2, 10, 12], "_3": 2, "contrast": 2, "becom": 2, "overlap": 2, "even": [2, 6, 9], "same": [2, 8, 13, 17], "self": [2, 10], "On": 2, "other": 2, "hand": 2, "cannot": 2, "neither": 2, "nor": 2, "reduc": 2, "potenti": [2, 11, 23], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": [2, 12], "text": [2, 12, 24], "coulomb": [2, 23], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 21], "consid": [2, 8, 9, 10, 16, 17], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "interact": 2, "give": 2, "lower": 2, "bound": [2, 3], "zero": 2, "upper": 2, "depend": 2, "detail": 2, "chosen": 2, "adopt": 2, "well": 2, "switch": [2, 10], "taken": [2, 10], "non": [2, 10], "exclus": [2, 10], "except": [2, 4, 10], "involv": [2, 10], "either": [2, 4, 13], "turn": [2, 10], "necessari": [2, 4, 13], "real": [2, 3, 6, 7, 8, 9, 10, 11, 12, 16, 17], "normal": [2, 6, 7, 8, 9, 10, 16, 17, 21], "One": [2, 10], "also": [2, 10], "extract": 2, "regardless": 2, "hostguestexplicit": [2, 10], "guest": 2, "b2": [2, 10], "host": 2, "cuc": 2, "cv1": 2, "femtosecond": [2, 4, 10, 13, 21], "4912": 2, "water": 2, "cv2": 2, "reiniti": [2, 3, 10, 16, 17], "preservest": [2, 3, 10, 16, 17], "2063": 2, "cv3": 2, "2849": 2, "centroid": [3, 4, 13, 16], "big": [3, 19], "i_1": 3, "i_2": 3, "i_n": 3, "customcentroidbondforc": 3, "n_j": [3, 4], "weight": [3, 16], "redefin": 3, "m_j": 3, "total": [3, 4, 8, 10, 13, 14, 15, 16, 17], "arbitrari": 3, "_supportsarrai": 3, "dtype": 3, "_nestedsequ": 3, "float": [3, 10, 12], "complex": 3, "byte": 3, "center": [3, 8, 12, 13, 14, 15, 17], "instead": [3, 10, 14, 15, 17, 21], "geometr": [3, 14, 15], "out": 3, "itertool": [3, 8, 16, 17], "helic": 3, "res_coord": 3, "residuecoordin": [3, 20, 22], "115": 3, "124": 3, "126": [3, 23], "135": 3, "stepfunct": [3, 8, 10, 16, 17], "step": [3, 7, 8, 10, 13, 16, 17], "33": [3, 7], "recomput": 3, "product": 3, "9": [3, 12, 17, 23], "18": [3, 6, 19, 23], "g1": 3, "g2": 3, "referenceposit": [4, 13], "numatom": [4, 8, 13, 17], "composit": 4, "root": [4, 8, 13, 17], "mean": [4, 8, 13, 17], "squar": [4, 8, 12, 13, 15, 17], "deviat": [4, 12, 13], "rmsd": [4, 8, 17, 20, 22], "current": [4, 13], "d_": [4, 7, 13, 17], "crm": 4, "min_": [4, 13], "mathbb": [4, 13], "atop": [4, 13], "rotat": [4, 8, 13, 17], "matrix": [4, 8, 12, 13, 17], "quaternion": [4, 13], "structur": [4, 13, 23], "respect": [4, 7, 9, 12, 14, 15], "analog": 4, "To": [4, 10, 21], "you": 4, "instal": [4, 22], "cpp": 4, "conda": [4, 21], "packag": [4, 21], "ndarrai": [4, 12, 13], "sequenc": [4, 6, 7, 8, 9, 10, 12, 13, 17, 21], "dict": [4, 13], "map": [4, 13], "vector": [4, 12, 13], "below": [4, 13], "disjoint": [4, 16], "includ": [4, 13, 16, 21], "those": [4, 13], "importerror": 4, "mm": 4, "pytest": 4, "hostguestvacuum": 4, "host_atom": 4, "guest_atom": 4, "try": 4, "composite_rmsd": 4, "skip": 4, "nm": [4, 5, 11, 13, 14, 15], "73205": 5, "thetarefer": 6, "88": 6, "degre": [6, 9, 19], "toler": [6, 9], "halfexpon": [6, 7, 9], "alpha": [6, 7, 8, 9, 17], "helix": [6, 7, 8, 9, 21], "content": [6, 7, 8, 9, 17, 21], "alpha_": [6, 7, 8, 9], "b_m": [6, 7, 9], "alpha_i": 6, "theta_": [6, 9], "tol": [6, 9], "carbon": [6, 7], "threshold": [6, 7, 8, 9, 10, 16, 17], "around": [6, 9], "smooth": [6, 7, 8, 9, 17], "boxcar": [6, 9], "2m": [6, 7, 9], "integ": [6, 7, 9, 17], "control": [6, 7, 9], "steep": [6, 7, 9], "note": [6, 9], "elev": [6, 9], "power": [6, 9, 21], "contigu": [6, 7, 8, 9, 17], "singl": [6, 7, 8, 9, 17], "chain": [6, 7, 8, 9, 17], "terminu": [6, 7, 8, 9, 17], "due": [6, 7, 9], "limit": [6, 7, 8, 9, 17], "maximum": [6, 7, 9], "37": [6, 7, 9], "some": [6, 9], "ly": [6, 7, 8, 9], "asp": [6, 7, 8, 9, 16], "glu": [6, 7, 8, 9, 16, 17], "il": [6, 7, 8, 9], "leu": [6, 7, 8, 9], "76058": 6, "thresholddist": [7, 10, 16], "hydrogen": [7, 16], "bond": [7, 13], "hb": 7, "h": [7, 8, 10, 16, 17], "o": [7, 8, 17], "_k": [7, 8, 17], "oxygen": 7, "backbon": [7, 19], "nitrogen": 7, "addit": [7, 17], "88038": 7, "thresholdrmsd": [8, 17], "08": [8, 17], "8": [8, 9, 17], "r_0": [8, 10, 16, 17], "repres": [8, 17], "select": [8, 17, 19], "ideal": [8, 17], "configur": [8, 17], "whose": [8, 11, 12, 17], "everi": [8, 17], "beta": [8, 17, 23], "six": [8, 17], "involvend": [8, 17], "thu": [8, 17], "compris": [8, 17], "glycin": [8, 17], "miss": [8, 17], "replac": [8, 14, 15, 17], "hat": [8, 12, 13, 17], "rel": [8, 13, 17], "geometri": [8, 13, 17], "minim": [8, 17], "done": [8, 17], "divid": [8, 17], "n_": [8, 17], "introduc": [8, 17], "shown": [8, 17], "abov": [8, 17, 18], "ident": [8, 17], "paper": [8, 17], "written": [8, 17], "numer": [8, 11, 17, 18], "safe": [8, 17], "alpharmsd": 8, "plume": [8, 17, 19], "v2": [8, 17], "present": [8, 17], "implement": [8, 17], "leq": [8, 17], "1024": [8, 17], "calcul": [8, 16, 17, 23], "requir": [8, 17], "close": [8, 17, 21], "match": [8, 17], "islic": [8, 16, 17], "80": [8, 21], "getnumresidueblock": [8, 17], "16": 8, "981": 8, "phirefer": 9, "63": 9, "psirefer": 9, "41": 9, "25": [9, 12], "ramachandran": 9, "phi": [9, 12, 19], "psi": [9, 12], "phi_i": 9, "phi_": 9, "psi_i": 9, "psi_": 9, "dihedr": 9, "refenr": 9, "last": [9, 17], "penultim": 9, "cutofffactor": 10, "switchfactor": 10, "contact": [10, 16], "equal": [10, 12, 16], "made": [10, 16], "otherwis": [10, 16], "For": [10, 16, 17], "trajectori": [10, 16, 19, 21], "analysi": [10, 16, 21], "fine": [10, 16], "make": [10, 12, 16], "heavisid": [10, 16], "molecular": [10, 16, 23], "dynam": [10, 16, 23], "howev": [10, 16, 17], "continu": [10, 16], "approxim": [10, 16], "geq": [10, 16], "By": [10, 16], "follow": [10, 16, 21], "12": [10, 16], "fact": 10, "r_c": 10, "x_c": 10, "typic": 10, "appli": 10, "so": 10, "avoid": 10, "discontinu": 10, "smoothli": 10, "off": 10, "x_": 10, "do": 10, "abruptli": 10, "allow": 10, "both": [10, 17], "ignor": 10, "pair": [10, 19], "distinct": [10, 13], "count": 10, "onc": 10, "obtain": 10, "thereof": [10, 16], "being": [10, 12, 16], "factor": 10, "multipli": 10, "els": 10, "extend": 10, "nc": 10, "nc_normal": 10, "openmmforc": 11, "xml": 11, "serial": [11, 22], "customangleforc": 11, "addangl": 11, "cv": [11, 12, 21], "assert": 11, "isinst": 11, "911": 11, "00538": 11, "metric": 12, "mileston": 12, "sigma": 12, "scale": 12, "progress": 12, "z": 12, "path": 12, "dfrac": 12, "w_i": 12, "ln": 12, "gaussian": 12, "kernel": 12, "exp": 12, "locat": 12, "width": 12, "norm": 12, "diagon": 12, "element": 12, "characterist": 12, "appropri": 12, "relat": 12, "lambda": 12, "basecollectivevari": 12, "row": 12, "column": 12, "standard": 12, "less": 12, "than": [12, 15], "differ": [12, 17, 21], "phi_atom": [12, 19], "ac": [12, 23], "ala": [12, 17], "ca": 12, "psi_atom": 12, "nme": 12, "torsion": [12, 19, 20, 22], "path_var": 12, "var": 12, "append": 12, "50": 12, "superscript": 13, "denot": 13, "problem": 13, "belong": 13, "molecul": [13, 21], "possibl": [13, 16, 21], "circumv": 13, "issu": 13, "call": [13, 19], "getnullbondforc": 13, "ad": [13, 21], "result": 13, "getnumatom": 13, "1231383": 13, "null": 13, "connect": 13, "graph": 13, "waterbox": 13, "box_edg": 13, "angstrom": 13, "100": 13, "104363": 13, "radiu": [14, 15], "gyrat": [14, 15], "r_g": [14, 15], "_c": [14, 15], "_m": [14, 15], "lack": 14, "parallel": [14, 15, 17], "might": [14, 15], "slow": 14, "larg": [14, 15], "radiusofgyrationsq": [14, 20, 22], "prefer": [14, 15], "2951431": 14, "better": 15, "over": 15, "rgsq": 15, "0871": 15, "residuegroup1": 16, "residuegroup2": 16, "includehydrogen": 16, "ha": 16, "125": 16, "142": 16, "trp": 16, "asn": 16, "gln": 16, "thr": [16, 17], "156": 16, "pro": 16, "gly": 16, "residue_coordin": 16, "customintegr": 16, "26": 16, "setreferencevalu": 16, "getreferencevalu": 16, "blocksiz": 17, "sheet": [17, 23], "beta_": 17, "min": 17, "minimum": 17, "subset": 17, "protein": [17, 21, 23], "antiparallel": 17, "minimim": 17, "choos": 17, "partit": 17, "block": 17, "n_1": 17, "n_2": 17, "ldot": 17, "n_m": 17, "compos": 17, "consecut": 17, "next": 17, "definit": 17, "modifi": 17, "l_": 17, "l_k": 17, "n_i": 17, "separ": [17, 18], "n_k": 17, "antibetarmsd": 17, "parabetarmsd": 17, "srcimplicit": 17, "68": 17, "82": 17, "tyr": 17, "val": 17, "sheet_cont": 17, "28": 17, "0466": 17, "blockwise_sheet_cont": 17, "98594": 17, "atom4": 18, "four": [18, 19, 21], "varphi": 18, "atan2": 18, "u": 18, "arctang": 18, "receiv": 18, "denomin": 18, "fourth": 18, "firstlist": 19, "secondlist": 19, "similar": 19, "co": 19, "1st": 19, "2nd": 19, "kth": 19, "dihcor": 19, "mdtraj": 19, "traj": 19, "from_openmm": 19, "compute_phi": 19, "valid_atom": 19, "top": 19, "resid": 19, "torsion_similar": 19, "65992": 19, "atomicfunct": [20, 22], "attractionstrength": [20, 22], "centroidfunct": [20, 22], "compositermsd": [20, 22], "helixanglecont": [20, 21, 22], "helixhbondcont": [20, 21, 22], "helixrmsdcont": [20, 21, 22], "numberofcontact": [20, 22], "openmmforcewrapp": [20, 22], "pathincvspac": [20, 22], "sheetrmsdcont": [20, 22], "torsionsimilar": [20, 22], "python": [21, 22], "pre": 21, "customcvforc": 21, "biasvari": 21, "metadynam": 21, "simul": 21, "collectivevari": 21, "uf": 21, "har": 21, "environ": 21, "run": 21, "command": 21, "forg": 21, "mdtool": 21, "Or": 21, "mamba": 21, "your": 21, "script": 21, "jupyt": 21, "notebook": 21, "show": 21, "how": 21, "quantifi": 21, "modul": [21, 22], "t4": 21, "lysozym": 21, "l99a": 21, "longest": 21, "occur": 21, "lys60": 21, "arg80": 21, "final": 21, "seven": 21, "place": 21, "output": 21, "9873989": 21, "93414": 21, "9946999": 21, "918571": 21, "expect": 21, "matter": 21, "star": 22, "introduct": 22, "usag": 22, "api": 22, "deseri": [22, 24], "bibliographi": 22, "page": 22, "christoph": 23, "chipot": 23, "andrew": 23, "pohoril": 23, "editor": 23, "free": 23, "springer": 23, "berlin": 23, "heidelberg": 23, "2007": 23, "url": 23, "http": 23, "doi": 23, "org": 23, "1007": 23, "978": 23, "540": 23, "38448": 23, "gabriela": 23, "b": 23, "correa": 23, "\u00e9": 23, "ssica": 23, "l": 23, "maciel": 23, "frederico": 23, "w": 23, "tavar": 23, "charll": 23, "abreu": 23, "new": 23, "formul": 23, "concert": 23, "alchem": 23, "van": 23, "der": 23, "waal": 23, "compon": 23, "solvat": 23, "journal": 23, "chemic": 23, "theori": 23, "5876": 23, "5889": 23, "octob": 23, "2022": 23, "1021": 23, "jctc": 23, "2c00563": 23, "fabio": 23, "pietrucci": 23, "alessandro": 23, "laio": 23, "explor": 23, "applic": 23, "sh": 23, "gb": 23, "2197": 23, "2201": 23, "aug": 23, "2009": 23, "ct900202f": 23, "sven": 23, "hovm\u00f6ller": 23, "tupe": 23, "zhou": 23, "toma": 23, "ohlson": 23, "conform": 23, "amino": 23, "acid": 23, "acta": 23, "crystallographica": 23, "section": 23, "biolog": 23, "crystallographi": 23, "58": 23, "768": 23, "776": 23, "apr": 23, "2002": 23, "1107": 23, "s0907444902003359": 23, "marcella": 23, "iannuzzi": 23, "michel": 23, "parrinello": 23, "reactiv": 23, "surfac": 23, "car": 23, "physic": 23, "review": 23, "letter": 23, "jun": 23, "2003": 23, "1103": 23, "physrevlett": 23, "90": 23, "238302": 23, "david": 23, "branduardi": 23, "francesco": 23, "luigi": 23, "gervasio": 23, "054103": 23, "februari": 23, "1063": 23, "2432340": 23, "obj": 24, "iostream": 24, "io": 24, "stream": 24, "write": 24, "mode": 24, "stringio": 24, "read": 24, "seek": 24, "new_object": 24}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [3, 0, 1, "", "CentroidFunction"], [4, 0, 1, "", "CompositeRMSD"], [5, 0, 1, "", "Distance"], [6, 0, 1, "", "HelixAngleContent"], [7, 0, 1, "", "HelixHBondContent"], [8, 0, 1, "", "HelixRMSDContent"], [9, 0, 1, "", "HelixTorsionContent"], [10, 0, 1, "", "NumberOfContacts"], [11, 0, 1, "", "OpenMMForceWrapper"], [12, 0, 1, "", "PathInCVSpace"], [13, 0, 1, "", "RMSD"], [14, 0, 1, "", "RadiusOfGyration"], [15, 0, 1, "", "RadiusOfGyrationSq"], [16, 0, 1, "", "ResidueCoordination"], [17, 0, 1, "", "SheetRMSDContent"], [18, 0, 1, "", "Torsion"], [19, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "getArguments"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getPeriod"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"], [0, 1, 1, "", "setUnit"], [0, 1, 1, "", "setUnusedForceGroup"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getArguments"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getPeriod"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"], [1, 1, 1, "", "setUnit"], [1, 1, 1, "", "setUnusedForceGroup"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "getArguments"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getPeriod"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"], [2, 1, 1, "", "setUnit"], [2, 1, 1, "", "setUnusedForceGroup"]], "cvpack.CentroidFunction": [[3, 1, 1, "", "getArguments"], [3, 1, 1, "", "getEffectiveMass"], [3, 1, 1, "", "getPeriod"], [3, 1, 1, "", "getUnit"], [3, 1, 1, "", "getValue"], [3, 1, 1, "", "setUnit"], [3, 1, 1, "", "setUnusedForceGroup"]], "cvpack.CompositeRMSD": [[4, 1, 1, "", "getArguments"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getPeriod"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"], [4, 1, 1, "", "setUnit"], [4, 1, 1, "", "setUnusedForceGroup"]], "cvpack.Distance": [[5, 1, 1, "", "getArguments"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getPeriod"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"], [5, 1, 1, "", "setUnit"], [5, 1, 1, "", "setUnusedForceGroup"]], "cvpack.HelixAngleContent": [[6, 1, 1, "", "getArguments"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getPeriod"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"], [6, 1, 1, "", "setUnit"], [6, 1, 1, "", "setUnusedForceGroup"]], "cvpack.HelixHBondContent": [[7, 1, 1, "", "getArguments"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getPeriod"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"], [7, 1, 1, "", "setUnit"], [7, 1, 1, "", "setUnusedForceGroup"]], "cvpack.HelixRMSDContent": [[8, 1, 1, "", "getArguments"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getPeriod"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"], [8, 1, 1, "", "setUnit"], [8, 1, 1, "", "setUnusedForceGroup"]], "cvpack.HelixTorsionContent": [[9, 1, 1, "", "getArguments"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getPeriod"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"], [9, 1, 1, "", "setUnit"], [9, 1, 1, "", "setUnusedForceGroup"]], "cvpack.NumberOfContacts": [[10, 1, 1, "", "getArguments"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getPeriod"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"], [10, 1, 1, "", "setUnit"], [10, 1, 1, "", "setUnusedForceGroup"]], "cvpack.OpenMMForceWrapper": [[11, 1, 1, "", "getArguments"], [11, 1, 1, "", "getEffectiveMass"], [11, 1, 1, "", "getPeriod"], [11, 1, 1, "", "getUnit"], [11, 1, 1, "", "getValue"], [11, 1, 1, "", "setUnit"], [11, 1, 1, "", "setUnusedForceGroup"]], "cvpack.PathInCVSpace": [[12, 1, 1, "", "getArguments"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getPeriod"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"], [12, 1, 1, "", "setUnit"], [12, 1, 1, "", "setUnusedForceGroup"]], "cvpack.RMSD": [[13, 1, 1, "", "getArguments"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getNullBondForce"], [13, 1, 1, "", "getPeriod"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"], [13, 1, 1, "", "setUnit"], [13, 1, 1, "", "setUnusedForceGroup"]], "cvpack.RadiusOfGyration": [[14, 1, 1, "", "getArguments"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getPeriod"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"], [14, 1, 1, "", "setUnit"], [14, 1, 1, "", "setUnusedForceGroup"]], "cvpack.RadiusOfGyrationSq": [[15, 1, 1, "", "getArguments"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getPeriod"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"], [15, 1, 1, "", "setUnit"], [15, 1, 1, "", "setUnusedForceGroup"]], "cvpack.ResidueCoordination": [[16, 1, 1, "", "getArguments"], [16, 1, 1, "", "getEffectiveMass"], [16, 1, 1, "", "getPeriod"], [16, 1, 1, "", "getReferenceValue"], [16, 1, 1, "", "getUnit"], [16, 1, 1, "", "getValue"], [16, 1, 1, "", "setReferenceValue"], [16, 1, 1, "", "setUnit"], [16, 1, 1, "", "setUnusedForceGroup"]], "cvpack.SheetRMSDContent": [[17, 1, 1, "", "getArguments"], [17, 1, 1, "", "getEffectiveMass"], [17, 1, 1, "", "getPeriod"], [17, 1, 1, "", "getUnit"], [17, 1, 1, "", "getValue"], [17, 1, 1, "", "setUnit"], [17, 1, 1, "", "setUnusedForceGroup"]], "cvpack.Torsion": [[18, 1, 1, "", "getArguments"], [18, 1, 1, "", "getEffectiveMass"], [18, 1, 1, "", "getPeriod"], [18, 1, 1, "", "getUnit"], [18, 1, 1, "", "getValue"], [18, 1, 1, "", "setUnit"], [18, 1, 1, "", "setUnusedForceGroup"]], "cvpack.TorsionSimilarity": [[19, 1, 1, "", "getArguments"], [19, 1, 1, "", "getEffectiveMass"], [19, 1, 1, "", "getPeriod"], [19, 1, 1, "", "getUnit"], [19, 1, 1, "", "getValue"], [19, 1, 1, "", "setUnit"], [19, 1, 1, "", "setUnusedForceGroup"]], "cvpack.serializer": [[24, 2, 1, "", "deserialize"], [24, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "centroidfunct": 3, "compositermsd": 4, "distanc": 5, "helixanglecont": 6, "helixhbondcont": 7, "helixrmsdcont": 8, "helixtorsioncont": 9, "numberofcontact": 10, "openmmforcewrapp": 11, "pathincvspac": 12, "rmsd": 13, "radiusofgyr": 14, "radiusofgyrationsq": 15, "residuecoordin": 16, "sheetrmsdcont": 17, "torsion": 18, "torsionsimilar": 19, "python": 20, "api": 20, "get": 21, "start": 21, "introduct": 21, "instal": 21, "usag": 21, "exampl": 21, "collect": 22, "variabl": 22, "packag": 22, "content": 22, "indic": 22, "tabl": 22, "bibliographi": 23, "serial": 24}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CentroidFunction": [[3, "centroidfunction"]], "CompositeRMSD": [[4, "compositermsd"]], "Distance": [[5, "distance"]], "HelixAngleContent": [[6, "helixanglecontent"]], "HelixHBondContent": [[7, "helixhbondcontent"]], "HelixRMSDContent": [[8, "helixrmsdcontent"]], "HelixTorsionContent": [[9, "helixtorsioncontent"]], "NumberOfContacts": [[10, "numberofcontacts"]], "OpenMMForceWrapper": [[11, "openmmforcewrapper"]], "PathInCVSpace": [[12, "pathincvspace"]], "RMSD": [[13, "rmsd"]], "RadiusOfGyration": [[14, "radiusofgyration"]], "RadiusOfGyrationSq": [[15, "radiusofgyrationsq"]], "ResidueCoordination": [[16, "residuecoordination"]], "SheetRMSDContent": [[17, "sheetrmsdcontent"]], "Torsion": [[18, "torsion"]], "TorsionSimilarity": [[19, "torsionsimilarity"]], "Python API": [[20, "python-api"]], "Getting Started": [[21, "getting-started"]], "Introduction": [[21, "introduction"]], "Installation": [[21, "installation"]], "Usage": [[21, "usage"]], "Example": [[21, "example"]], "Collective Variable Package": [[22, "collective-variable-package"]], "Contents": [[22, "contents"]], "Indices and tables": [[22, "indices-and-tables"]], "Bibliography": [[23, "bibliography"]], "Serialization": [[24, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "getarguments() (cvpack.angle class method)": [[0, "cvpack.Angle.getArguments"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getperiod() (cvpack.angle method)": [[0, "cvpack.Angle.getPeriod"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "setunit() (cvpack.angle method)": [[0, "cvpack.Angle.setUnit"]], "setunusedforcegroup() (cvpack.angle method)": [[0, "cvpack.Angle.setUnusedForceGroup"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "getarguments() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.getArguments"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getperiod() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getPeriod"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "setunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.setUnit"]], "setunusedforcegroup() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.setUnusedForceGroup"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "getarguments() (cvpack.attractionstrength class method)": [[2, "cvpack.AttractionStrength.getArguments"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getperiod() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getPeriod"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "setunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.setUnit"]], "setunusedforcegroup() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.setUnusedForceGroup"]], "centroidfunction (class in cvpack)": [[3, "cvpack.CentroidFunction"]], "getarguments() (cvpack.centroidfunction class method)": [[3, "cvpack.CentroidFunction.getArguments"]], "geteffectivemass() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getEffectiveMass"]], "getperiod() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getPeriod"]], "getunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getValue"]], "setunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.setUnit"]], "setunusedforcegroup() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.setUnusedForceGroup"]], "compositermsd (class in cvpack)": [[4, "cvpack.CompositeRMSD"]], "getarguments() (cvpack.compositermsd class method)": [[4, "cvpack.CompositeRMSD.getArguments"]], "geteffectivemass() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getEffectiveMass"]], "getperiod() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getPeriod"]], "getunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getUnit"]], "getvalue() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getValue"]], "setunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.setUnit"]], "setunusedforcegroup() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.setUnusedForceGroup"]], "distance (class in cvpack)": [[5, "cvpack.Distance"]], "getarguments() (cvpack.distance class method)": [[5, "cvpack.Distance.getArguments"]], "geteffectivemass() (cvpack.distance method)": [[5, "cvpack.Distance.getEffectiveMass"]], "getperiod() (cvpack.distance method)": [[5, "cvpack.Distance.getPeriod"]], "getunit() (cvpack.distance method)": [[5, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[5, "cvpack.Distance.getValue"]], "setunit() (cvpack.distance method)": [[5, "cvpack.Distance.setUnit"]], "setunusedforcegroup() (cvpack.distance method)": [[5, "cvpack.Distance.setUnusedForceGroup"]], "helixanglecontent (class in cvpack)": [[6, "cvpack.HelixAngleContent"]], "getarguments() (cvpack.helixanglecontent class method)": [[6, "cvpack.HelixAngleContent.getArguments"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getEffectiveMass"]], "getperiod() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getPeriod"]], "getunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getValue"]], "setunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.setUnit"]], "setunusedforcegroup() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.setUnusedForceGroup"]], "helixhbondcontent (class in cvpack)": [[7, "cvpack.HelixHBondContent"]], "getarguments() (cvpack.helixhbondcontent class method)": [[7, "cvpack.HelixHBondContent.getArguments"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getEffectiveMass"]], "getperiod() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getPeriod"]], "getunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getValue"]], "setunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.setUnit"]], "setunusedforcegroup() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.setUnusedForceGroup"]], "helixrmsdcontent (class in cvpack)": [[8, "cvpack.HelixRMSDContent"]], "getarguments() (cvpack.helixrmsdcontent class method)": [[8, "cvpack.HelixRMSDContent.getArguments"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getperiod() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getPeriod"]], "getunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getValue"]], "setunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.setUnit"]], "setunusedforcegroup() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.setUnusedForceGroup"]], "helixtorsioncontent (class in cvpack)": [[9, "cvpack.HelixTorsionContent"]], "getarguments() (cvpack.helixtorsioncontent class method)": [[9, "cvpack.HelixTorsionContent.getArguments"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getperiod() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getPeriod"]], "getunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getValue"]], "setunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.setUnit"]], "setunusedforcegroup() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.setUnusedForceGroup"]], "numberofcontacts (class in cvpack)": [[10, "cvpack.NumberOfContacts"]], "getarguments() (cvpack.numberofcontacts class method)": [[10, "cvpack.NumberOfContacts.getArguments"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.getEffectiveMass"]], "getperiod() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.getPeriod"]], "getunit() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.getValue"]], "setunit() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.setUnit"]], "setunusedforcegroup() (cvpack.numberofcontacts method)": [[10, "cvpack.NumberOfContacts.setUnusedForceGroup"]], "openmmforcewrapper (class in cvpack)": [[11, "cvpack.OpenMMForceWrapper"]], "getarguments() (cvpack.openmmforcewrapper class method)": [[11, "cvpack.OpenMMForceWrapper.getArguments"]], "geteffectivemass() (cvpack.openmmforcewrapper method)": [[11, "cvpack.OpenMMForceWrapper.getEffectiveMass"]], "getperiod() (cvpack.openmmforcewrapper method)": [[11, "cvpack.OpenMMForceWrapper.getPeriod"]], "getunit() (cvpack.openmmforcewrapper method)": [[11, "cvpack.OpenMMForceWrapper.getUnit"]], "getvalue() (cvpack.openmmforcewrapper method)": [[11, "cvpack.OpenMMForceWrapper.getValue"]], "setunit() (cvpack.openmmforcewrapper method)": [[11, "cvpack.OpenMMForceWrapper.setUnit"]], "setunusedforcegroup() (cvpack.openmmforcewrapper method)": [[11, "cvpack.OpenMMForceWrapper.setUnusedForceGroup"]], "pathincvspace (class in cvpack)": [[12, "cvpack.PathInCVSpace"]], "getarguments() (cvpack.pathincvspace class method)": [[12, "cvpack.PathInCVSpace.getArguments"]], "geteffectivemass() (cvpack.pathincvspace method)": [[12, "cvpack.PathInCVSpace.getEffectiveMass"]], "getperiod() (cvpack.pathincvspace method)": [[12, "cvpack.PathInCVSpace.getPeriod"]], "getunit() (cvpack.pathincvspace method)": [[12, "cvpack.PathInCVSpace.getUnit"]], "getvalue() (cvpack.pathincvspace method)": [[12, "cvpack.PathInCVSpace.getValue"]], "setunit() (cvpack.pathincvspace method)": [[12, "cvpack.PathInCVSpace.setUnit"]], "setunusedforcegroup() (cvpack.pathincvspace method)": [[12, "cvpack.PathInCVSpace.setUnusedForceGroup"]], "rmsd (class in cvpack)": [[13, "cvpack.RMSD"]], "getarguments() (cvpack.rmsd class method)": [[13, "cvpack.RMSD.getArguments"]], "geteffectivemass() (cvpack.rmsd method)": [[13, "cvpack.RMSD.getEffectiveMass"]], "getnullbondforce() (cvpack.rmsd method)": [[13, "cvpack.RMSD.getNullBondForce"]], "getperiod() (cvpack.rmsd method)": [[13, "cvpack.RMSD.getPeriod"]], "getunit() (cvpack.rmsd method)": [[13, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[13, "cvpack.RMSD.getValue"]], "setunit() (cvpack.rmsd method)": [[13, "cvpack.RMSD.setUnit"]], "setunusedforcegroup() (cvpack.rmsd method)": [[13, "cvpack.RMSD.setUnusedForceGroup"]], "radiusofgyration (class in cvpack)": [[14, "cvpack.RadiusOfGyration"]], "getarguments() (cvpack.radiusofgyration class method)": [[14, "cvpack.RadiusOfGyration.getArguments"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[14, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getperiod() (cvpack.radiusofgyration method)": [[14, "cvpack.RadiusOfGyration.getPeriod"]], "getunit() (cvpack.radiusofgyration method)": [[14, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[14, "cvpack.RadiusOfGyration.getValue"]], "setunit() (cvpack.radiusofgyration method)": [[14, "cvpack.RadiusOfGyration.setUnit"]], "setunusedforcegroup() (cvpack.radiusofgyration method)": [[14, "cvpack.RadiusOfGyration.setUnusedForceGroup"]], "radiusofgyrationsq (class in cvpack)": [[15, "cvpack.RadiusOfGyrationSq"]], "getarguments() (cvpack.radiusofgyrationsq class method)": [[15, "cvpack.RadiusOfGyrationSq.getArguments"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[15, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getperiod() (cvpack.radiusofgyrationsq method)": [[15, "cvpack.RadiusOfGyrationSq.getPeriod"]], "getunit() (cvpack.radiusofgyrationsq method)": [[15, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[15, "cvpack.RadiusOfGyrationSq.getValue"]], "setunit() (cvpack.radiusofgyrationsq method)": [[15, "cvpack.RadiusOfGyrationSq.setUnit"]], "setunusedforcegroup() (cvpack.radiusofgyrationsq method)": [[15, "cvpack.RadiusOfGyrationSq.setUnusedForceGroup"]], "residuecoordination (class in cvpack)": [[16, "cvpack.ResidueCoordination"]], "getarguments() (cvpack.residuecoordination class method)": [[16, "cvpack.ResidueCoordination.getArguments"]], "geteffectivemass() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.getEffectiveMass"]], "getperiod() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.getPeriod"]], "getreferencevalue() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.getReferenceValue"]], "getunit() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.getUnit"]], "getvalue() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.getValue"]], "setreferencevalue() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.setReferenceValue"]], "setunit() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.setUnit"]], "setunusedforcegroup() (cvpack.residuecoordination method)": [[16, "cvpack.ResidueCoordination.setUnusedForceGroup"]], "sheetrmsdcontent (class in cvpack)": [[17, "cvpack.SheetRMSDContent"]], "getarguments() (cvpack.sheetrmsdcontent class method)": [[17, "cvpack.SheetRMSDContent.getArguments"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[17, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getperiod() (cvpack.sheetrmsdcontent method)": [[17, "cvpack.SheetRMSDContent.getPeriod"]], "getunit() (cvpack.sheetrmsdcontent method)": [[17, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[17, "cvpack.SheetRMSDContent.getValue"]], "setunit() (cvpack.sheetrmsdcontent method)": [[17, "cvpack.SheetRMSDContent.setUnit"]], "setunusedforcegroup() (cvpack.sheetrmsdcontent method)": [[17, "cvpack.SheetRMSDContent.setUnusedForceGroup"]], "torsion (class in cvpack)": [[18, "cvpack.Torsion"]], "getarguments() (cvpack.torsion class method)": [[18, "cvpack.Torsion.getArguments"]], "geteffectivemass() (cvpack.torsion method)": [[18, "cvpack.Torsion.getEffectiveMass"]], "getperiod() (cvpack.torsion method)": [[18, "cvpack.Torsion.getPeriod"]], "getunit() (cvpack.torsion method)": [[18, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[18, "cvpack.Torsion.getValue"]], "setunit() (cvpack.torsion method)": [[18, "cvpack.Torsion.setUnit"]], "setunusedforcegroup() (cvpack.torsion method)": [[18, "cvpack.Torsion.setUnusedForceGroup"]], "torsionsimilarity (class in cvpack)": [[19, "cvpack.TorsionSimilarity"]], "getarguments() (cvpack.torsionsimilarity class method)": [[19, "cvpack.TorsionSimilarity.getArguments"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[19, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getperiod() (cvpack.torsionsimilarity method)": [[19, "cvpack.TorsionSimilarity.getPeriod"]], "getunit() (cvpack.torsionsimilarity method)": [[19, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[19, "cvpack.TorsionSimilarity.getValue"]], "setunit() (cvpack.torsionsimilarity method)": [[19, "cvpack.TorsionSimilarity.setUnit"]], "setunusedforcegroup() (cvpack.torsionsimilarity method)": [[19, "cvpack.TorsionSimilarity.setUnusedForceGroup"]], "deserialize() (in module cvpack.serializer)": [[24, "cvpack.serializer.deserialize"]], "serialize() (in module cvpack.serializer)": [[24, "cvpack.serializer.serialize"]]}})