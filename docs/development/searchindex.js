Search.setIndex({"docnames": ["api/Angle", "api/AtomicFunction", "api/AttractionStrength", "api/CentroidFunction", "api/CompositeRMSD", "api/Distance", "api/HelixAngleContent", "api/HelixHBondContent", "api/HelixRMSDContent", "api/HelixTorsionContent", "api/MetaCollectiveVariable", "api/NumberOfContacts", "api/OpenMMForceWrapper", "api/PathInCVSpace", "api/RMSD", "api/RadiusOfGyration", "api/RadiusOfGyrationSq", "api/Reporter", "api/ResidueCoordination", "api/SheetRMSDContent", "api/Torsion", "api/TorsionSimilarity", "api/index", "getting_started", "index", "references", "serialization"], "filenames": ["api/Angle.rst", "api/AtomicFunction.rst", "api/AttractionStrength.rst", "api/CentroidFunction.rst", "api/CompositeRMSD.rst", "api/Distance.rst", "api/HelixAngleContent.rst", "api/HelixHBondContent.rst", "api/HelixRMSDContent.rst", "api/HelixTorsionContent.rst", "api/MetaCollectiveVariable.rst", "api/NumberOfContacts.rst", "api/OpenMMForceWrapper.rst", "api/PathInCVSpace.rst", "api/RMSD.rst", "api/RadiusOfGyration.rst", "api/RadiusOfGyrationSq.rst", "api/Reporter.rst", "api/ResidueCoordination.rst", "api/SheetRMSDContent.rst", "api/Torsion.rst", "api/TorsionSimilarity.rst", "api/index.rst", "getting_started.rst", "index.rst", "references.rst", "serialization.rst"], "titles": ["Angle", "AtomicFunction", "AttractionStrength", "CentroidFunction", "CompositeRMSD", "Distance", "HelixAngleContent", "HelixHBondContent", "HelixRMSDContent", "HelixTorsionContent", "MetaCollectiveVariable", "NumberOfContacts", "OpenMMForceWrapper", "PathInCVSpace", "RMSD", "RadiusOfGyration", "RadiusOfGyrationSq", "Reporter", "ResidueCoordination", "SheetRMSDContent", "Torsion", "TorsionSimilarity", "Collective Variables", "Getting Started", "Collective Variable Package", "Bibliography", "Serialization"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26], "cvpack": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26], "atom1": [0, 5, 20], "atom2": [0, 5, 20], "atom3": [0, 20], "pbc": [0, 1, 3, 5, 6, 7, 9, 15, 16, 18, 20, 21, 26], "fals": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26], "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26], "form": [0, 6, 8, 19, 20], "three": [0, 1, 3, 19], "atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21], "theta": [0, 6, 12], "bf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "r": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25], "mathrm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "aco": 0, "left": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "frac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "_": [0, 1, 3, 6, 7, 8, 12, 14, 19, 20, 21], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26], "cdot": [0, 20], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25], "right": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "where": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "j": [0, 1, 2, 3, 4, 8, 11, 15, 16, 18, 19, 20, 25], "_j": [0, 2, 3, 4, 8, 11, 15, 16, 18, 20], "_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26], "int": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 19, 20, 21], "index": [0, 1, 2, 3, 4, 5, 11, 13, 14, 17, 19, 20, 24], "first": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "second": [0, 2, 5, 9, 11, 18, 20, 21], "third": [0, 2, 20], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "whether": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20, 21], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25], "period": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "boundari": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 15, 16, 18, 20, 21], "condit": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 15, 16, 18, 20, 21], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25], "variabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26], "openmm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "addparticl": [0, 1, 5, 20], "rang": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 16, 19, 20], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26], "addforc": [0, 1, 5, 14, 20, 23], "integr": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23], "verletintegr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "platform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23], "getplatformbynam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23], "refer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23], "context": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "posit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "setposit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "vec3": [0, 1, 3, 4, 5, 12, 13, 14, 20], "po": [0, 20], "getvalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 26], "570796": 0, "rad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "addtosystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "setunusedforcegroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "add": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26], "which": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "should": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "ad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "forc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "avail": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "geteffectivemass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "allowreiniti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "comput": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25], "effect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "mass": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "q": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "defin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "m_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "eff": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "sum_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "n": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "m_i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "dq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25], "share": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "other": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24], "evalu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "requir": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "reiniti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "twice": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "each": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "call": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "ineffici": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "avoid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "To": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "allow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "behavior": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "must": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "By": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25], "necessari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26], "quantiti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "backbon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "dihedr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "radiu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "gyrat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "alanin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "dipeptid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "molecul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "water": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26], "openmmtool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "testsystem": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "alaninedipeptideexplicit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "top": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "mdtraj_topologi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "backbone_atom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "select": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25], "ca": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "resid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "phi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "torsion": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25], "psi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25], "radius_of_gyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26], "radiusofgyr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 26], "cv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "05119": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "nm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "05186": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "30": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "946": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "getmassunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24], "unit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "measur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "getnam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23], "getperiodicbound": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "bound": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "union": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "getunit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "1415": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "29514": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "function": [1, 2, 3, 6, 7, 8, 9, 10, 11, 18, 19, 20], "periodicbound": [1, 3, 10, 12], "atomic_funct": 1, "A": [1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 19, 21, 25, 26], "gener": [1, 3], "coordin": [1, 3, 4, 14, 18, 19], "m": [1, 3, 4, 6, 7, 9, 15, 16, 19], "f": [1, 2, 3, 10, 11, 13, 23], "dot": [1, 3], "user": [1, 3, 10, 17], "th": [1, 3, 8, 10, 13, 14, 19, 21], "string": [1, 3, 10, 12], "can": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19], "ani": [1, 2, 3, 10, 11, 19, 21, 26], "express": [1, 3, 10], "support": [1, 3, 6, 7, 9, 10, 14], "customcompoundbondforc": [1, 3, 10], "contain": [1, 3, 4, 6, 9, 10, 12, 14, 26], "pass": [1, 3, 10, 12, 17], "one": [1, 2, 3, 8, 10, 19, 23], "wai": [1, 3, 10], "semicolon": [1, 3, 10], "separ": [1, 3, 10, 17, 19, 20], "definit": [1, 3, 10, 19], "describ": [1, 3, 10], "document": [1, 3, 10], "case": [1, 2, 3, 8, 10, 11, 15, 16, 19, 23], "same": [1, 2, 3, 8, 10, 14, 17, 19], "all": [1, 3, 4, 10, 14, 19, 21], "1d": [1, 3], "arrai": [1, 3, 13], "list": [1, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 21], "length": [1, 3], "keyword": [1, 3, 10], "argument": [1, 3, 4, 10, 14, 20], "constructor": [1, 3, 10, 17], "assign": [1, 3], "differ": [1, 3, 13, 17, 19, 23], "scalar": [1, 3, 10], "appli": [1, 3, 10, 11], "becom": [1, 2, 3, 10], "fly": [1, 3, 10], "modif": [1, 3, 10], "dure": [1, 3, 10, 17], "simul": [1, 3, 10, 17, 23], "via": [1, 3, 10], "setparamet": [1, 3, 10], "object": [1, 2, 3, 10, 11, 12, 17, 26], "warn": [1, 3, 10], "equal": [1, 3, 10, 11, 13, 18], "It": [1, 3, 4, 10, 12, 14], "valid": [1, 3, 10], "arraylik": 1, "indic": [1, 3, 4, 11, 14, 15, 16, 21], "2d": [1, 3], "like": [1, 2, 3, 17], "shape": [1, 3], "number": [1, 3, 4, 6, 7, 8, 9, 11, 13, 14, 18, 19], "per": [1, 2, 3], "assum": [1, 3, 13, 19], "mmunit": [1, 2, 10, 11, 18, 21], "compat": [1, 3, 10, 12], "md": [1, 3, 10, 12, 13], "dalton": [1, 3, 10, 12], "distanc": [1, 2, 3, 7, 8, 10, 11, 12, 18, 19, 20, 21, 22, 24], "nanomet": [1, 3, 4, 7, 8, 10, 11, 12, 18, 19], "time": [1, 3, 10, 12, 17, 20], "picosecond": [1, 3, 10, 12, 17], "temperatur": [1, 3, 10, 12], "kelvin": [1, 3, 10, 12, 17], "energi": [1, 2, 3, 10, 12, 25], "kilojoules_per_mol": [1, 3, 10, 12, 17], "angl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24], "radian": [1, 3, 10, 12], "doe": [1, 3, 4, 6, 9, 10, 12, 14], "have": [1, 3, 10, 12], "dimensionless": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 23], "t": [1, 10, 13, 26], "option": [1, 2, 3, 6, 7, 8, 9, 10, 11, 15, 16, 19], "vectorquant": [1, 10], "lower": [1, 2], "upper": [1, 2], "when": [1, 15, 16], "former": [1, 3], "entri": [1, 3], "latter": [1, 3], "global": [1, 3], "rais": [1, 3, 4, 6, 9, 13, 17, 18], "valueerror": [1, 3, 4, 6, 9, 13, 17, 18], "ar": [1, 2, 3, 4, 7, 9, 10, 11, 13, 14, 17, 18, 19, 23], "specifi": [1, 3, 17], "numpi": [1, 3, 12, 13], "np": [1, 3, 12, 13], "alaninedipeptidevacuum": [1, 10, 12, 13, 15, 16, 17], "angle1": 1, "10": [1, 14, 25], "angle2": 1, "15": [1, 6, 7, 8], "20": 1, "colvar": [1, 3], "kappa": [1, 10], "p1": 1, "p2": 1, "p3": 1, "theta0": 1, "1000": [1, 10, 14, 17], "pi": [1, 2, 10, 12, 13, 17], "theta1": 1, "theta2": 1, "500": [1, 17], "429": 1, "479": 1, "kj": [1, 10, 12, 17], "mol": [1, 10, 12, 17], "2000": 1, "858": 1, "958": 1, "classmethod": 1, "fromopenmmforc": 1, "creat": [1, 14, 17, 23], "convert": 1, "ndarrai": [1, 3, 4, 12, 13, 14], "consid": [1, 2, 8, 9, 11, 18, 19], "onli": [1, 2, 4, 11, 14, 18, 19], "custom": 1, "typeerror": 1, "app": [1, 6, 7, 8, 9, 14, 17, 18, 19, 23], "lysozymeimplicit": [1, 3, 6, 7, 8, 9, 18, 21, 23], "residu": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 18, 19, 23], "topologi": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23], "59": [1, 6, 7, 8, 9, 21, 23], "79": [1, 21], "helix_cont": [1, 6, 7, 8, 9, 23], "helixtorsioncont": [1, 22, 23, 24], "6": [1, 2, 10, 11, 13, 17, 18, 25], "num_atom": [1, 14, 15, 16, 23], "getnumparticl": [1, 8, 15, 16, 19, 23], "mean_x": 1, "customexternalforc": 1, "x": [1, 2, 3, 6, 7, 8, 9, 11, 13, 18, 19], "addglobalparamet": 1, "7": [1, 13, 17], "getforc": [1, 2, 11], "copi": 1, "item": 1, "harmonicbondforc": [1, 14], "harmonicangleforc": 1, "periodictorsionforc": 1, "enumer": 1, "start": [1, 11, 24], "setforcegroup": 1, "state": 1, "getstat": 1, "getenergi": 1, "getpotentialenergi": 1, "copy_valu": 1, "print": [1, 2, 6, 7, 8, 9, 16, 18, 19, 23, 26], "origin": [1, 8, 19], "6f": 1, "2094": 1, "312": 1, "3239": 1, "795": 1, "4226": 1, "05": [1, 17], "02155": 1, "17": [1, 2, 9], "4528": 1, "group1": [2, 11, 18], "group2": [2, 11, 18], "nonbondedforc": [2, 11], "contrastgroup": 2, "kilojoul": 2, "mole": 2, "contrastsc": 2, "attraction_strength": 2, "strength": 2, "attract": 2, "between": [2, 3, 4, 5, 8, 11, 14, 17, 18, 19, 21, 23], "two": [2, 3, 5, 10, 11, 18], "s_": 2, "rm": [2, 4, 6, 7, 8, 9, 14, 19, 20, 21], "attr": 2, "e_": 2, "ref": [2, 4, 6, 8, 9, 13, 14, 19], "bigg": 2, "g": [2, 3, 4, 8, 11, 18, 19], "_1": [2, 5, 11, 18], "substack": 2, "_2": [2, 5, 11, 18], "neq": [2, 11], "epsilon_": 2, "ij": 2, "u_": 2, "disp": 2, "sigma_": 2, "q_jq_i": 2, "q_i": 2, "q_j": 2, "varepsilon_0": 2, "r_": [2, 8, 11, 19], "elec": 2, "cutoff": [2, 11, 14], "permitt": 2, "empti": [2, 17], "space": [2, 13, 25], "charg": 2, "lennard": 2, "jone": 2, "lorentz": 2, "berthelot": 2, "mix": 2, "rule": 2, "e": [2, 13, 17], "sqrt": [2, 4, 8, 13, 14, 15, 19], "epsilon_i": 2, "epsilon_j": 2, "sigma_i": 2, "sigma_j": 2, "provid": [2, 11, 13], "_3": 2, "contrast": 2, "One": [2, 11], "also": [2, 11], "scale": [2, 13], "factor": [2, 11], "alpha": [2, 6, 7, 8, 9, 19], "balanc": 2, "contribut": 2, "interact": 2, "overlap": 2, "even": [2, 6, 9], "self": [2, 11], "On": 2, "hand": 2, "cannot": 2, "neither": 2, "nor": 2, "reduc": 2, "potenti": [2, 12, 25], "highli": 2, "soften": 2, "repuls": 2, "part": 2, "y": 2, "quad": [2, 13], "text": [2, 13, 26], "coulomb": [2, 25], "decai": 2, "reaction": 2, "field": 2, "screen": [2, 23], "perfect": 2, "conductor": 2, "surround": 2, "medium": 2, "electrostat": 2, "give": 2, "zero": 2, "depend": [2, 10, 13], "detail": 2, "chosen": 2, "adopt": 2, "well": 2, "switch": [2, 11], "correspond": [2, 4, 8, 13, 14, 19], "taken": [2, 11], "non": [2, 11], "exclus": [2, 11], "except": [2, 4, 11], "involv": [2, 11], "either": [2, 4, 14], "turn": [2, 11], "iter": [2, 3, 4, 10, 13, 15, 16, 18], "real": [2, 6, 7, 8, 9, 11, 13, 18, 19], "normal": [2, 6, 7, 8, 9, 11, 18, 19, 23], "extract": 2, "regardless": 2, "float": [2, 3, 11, 13, 21], "hostguestexplicit": [2, 11], "guest": 2, "b2": [2, 11], "host": 2, "cuc": 2, "cv1": 2, "femtosecond": [2, 4, 11, 14, 17, 23], "4912": 2, "hoh": [2, 11], "cv2": 2, "preservest": [2, 3, 11, 18, 19], "2063": 2, "cv3": 2, "2849": 2, "cv4": 2, "3880": 2, "8": [2, 8, 9, 10, 17, 19], "weighbymass": [3, 15, 16, 18, 26], "centroid_funct": 3, "centroid": [3, 4, 14, 18], "split": 3, "big": [3, 21], "i_1": 3, "i_2": 3, "i_n": 3, "n_j": [3, 4], "k": [3, 7, 8, 19, 21], "weight": [3, 18], "redefin": 3, "m_j": 3, "total": [3, 4, 8, 11, 14, 15, 16, 18, 19], "atomicfunct": [3, 10, 22, 24], "customcentroidbondforc": 3, "arbitrari": 3, "_supportsarrai": [3, 21], "dtype": [3, 21], "_nestedsequ": [3, 21], "complex": [3, 21], "byte": [3, 21], "center": [3, 8, 13, 14, 15, 16, 19], "instead": [3, 11, 15, 16, 19, 23], "geometr": [3, 15, 16], "out": 3, "helic": 3, "res_coord": 3, "residuecoordin": [3, 22, 24], "115": 3, "124": 3, "126": [3, 25], "135": 3, "stepfunct": [3, 8, 11, 18, 19], "step": [3, 7, 8, 11, 14, 17, 18, 19], "33": [3, 7], "recomput": 3, "g1": 3, "g2": 3, "9": [3, 13, 19, 25], "18": [3, 6, 17, 21, 25], "referenceposit": [4, 14], "numatom": [4, 8, 14, 19], "composite_rmsd": 4, "composit": 4, "root": [4, 8, 14, 19], "mean": [4, 8, 14, 19], "squar": [4, 8, 13, 14, 16, 19], "deviat": [4, 13, 14], "rmsd": [4, 8, 19, 22, 24], "current": [4, 14, 17], "d_": [4, 7, 14, 19], "crm": 4, "min_": [4, 14], "mathbb": [4, 14], "atop": [4, 14], "rotat": [4, 8, 14, 19], "matrix": [4, 8, 13, 14, 19], "quaternion": [4, 14], "structur": [4, 14, 25], "respect": [4, 7, 9, 13, 15, 16], "analog": 4, "you": 4, "instal": [4, 24], "cpp": 4, "conda": [4, 23], "packag": [4, 23], "sequenc": [4, 6, 7, 8, 9, 10, 11, 13, 14, 17, 19, 23], "dict": [4, 10, 14], "map": [4, 14], "vector": [4, 13, 14], "need": [4, 6, 9, 14], "see": [4, 14, 17], "below": [4, 14, 17], "disjoint": [4, 18], "includ": [4, 14, 18, 23], "those": [4, 14], "importerror": 4, "mm": 4, "pytest": 4, "hostguestvacuum": 4, "host_atom": 4, "guest_atom": 4, "try": 4, "skip": 4, "7320": 5, "thetarefer": 6, "88": 6, "degre": [6, 9, 10, 21], "toler": [6, 9], "halfexpon": [6, 7, 9], "helix_angle_cont": 6, "helix": [6, 7, 8, 9, 23], "content": [6, 7, 8, 9, 19, 23], "alpha_": [6, 7, 8, 9], "b_m": [6, 7, 9], "alpha_i": 6, "theta_": [6, 9], "tol": [6, 9], "carbon": [6, 7], "threshold": [6, 7, 8, 9, 11, 18, 19], "around": [6, 9], "smooth": [6, 7, 8, 9, 19], "boxcar": [6, 9], "2m": [6, 7, 9], "integ": [6, 7, 9, 19], "control": [6, 7, 9], "steep": [6, 7, 9], "note": [6, 9], "elev": [6, 9], "power": [6, 9, 23], "contigu": [6, 7, 8, 9, 19], "singl": [6, 7, 8, 9, 19], "chain": [6, 7, 8, 9, 19], "order": [6, 7, 8, 9, 19], "terminu": [6, 7, 8, 9, 19], "due": [6, 7, 9], "limit": [6, 7, 8, 9, 19], "maximum": [6, 7, 9], "37": [6, 7, 9], "some": [6, 9], "80": [6, 7, 8, 9, 23], "ly": [6, 7, 8, 9], "asp": [6, 7, 8, 9, 18], "glu": [6, 7, 8, 9, 18, 19], "il": [6, 7, 8, 9], "leu": [6, 7, 8, 9], "arg": [6, 7, 8, 9, 18], "7605": 6, "thresholddist": [7, 11, 18], "helix_hbond_cont": 7, "hydrogen": [7, 18], "bond": [7, 14], "hb": 7, "h": [7, 8, 11, 18, 19], "o": [7, 8, 19], "_k": [7, 8, 19], "oxygen": 7, "nitrogen": 7, "addit": [7, 19], "880": 7, "thresholdrmsd": [8, 19], "08": [8, 19], "helix_rmsd_cont": 8, "r_0": [8, 11, 18, 19], "repres": [8, 10, 19], "ideal": [8, 19], "configur": [8, 10, 17, 19], "whose": [8, 12, 13, 17, 19], "everi": [8, 19], "beta": [8, 19, 25], "six": [8, 19], "involvend": [8, 19], "thu": [8, 19], "compris": [8, 19], "glycin": [8, 19], "miss": [8, 19], "replac": [8, 15, 16, 19], "hat": [8, 13, 14, 19], "rel": [8, 14, 19], "geometri": [8, 14, 19], "minim": [8, 19], "done": [8, 19], "divid": [8, 19], "n_": [8, 19], "wa": [8, 19], "introduc": [8, 19], "shown": [8, 19], "abov": [8, 19, 20], "ident": [8, 19], "paper": [8, 19], "written": [8, 17, 19], "numer": [8, 12, 19, 20], "safe": [8, 19], "alpharmsd": 8, "plume": [8, 19, 21], "v2": [8, 19], "present": [8, 19], "implement": [8, 19], "leq": [8, 19], "1024": [8, 19], "calcul": [8, 10, 18, 19, 20, 21, 25], "close": [8, 19, 23], "match": [8, 10, 19], "itertool": [8, 18, 19], "islic": [8, 18, 19], "getnumresidueblock": [8, 19], "16": [8, 10, 17], "normalized_helix_cont": 8, "98": 8, "998": 8, "phirefer": 9, "63": 9, "psirefer": 9, "41": 9, "25": [9, 13], "helix_torsion_cont": 9, "ramachandran": 9, "phi_i": 9, "phi_": 9, "psi_i": 9, "psi_": 9, "refenr": 9, "last": [9, 19], "thei": [9, 10, 14], "penultim": 9, "452": 9, "meta_collective_vari": 10, "c_1": 10, "c_2": 10, "ldot": [10, 19], "c_n": 10, "c_i": 10, "customcvforc": [10, 23], "collectivevari": [10, 13, 17, 23], "instanc": [10, 12, 23, 26], "meta": [10, 17], "uniqu": 10, "symbol": 10, "math": 10, "14": [10, 17], "driving_forc": 10, "min": [10, 17, 19], "delta": 10, "ab": [10, 17], "phi0": 10, "120": 10, "548": 10, "getinnervalu": 10, "getinnereffectivemass": 10, "act": 10, "particl": 10, "dictionari": 10, "kei": 10, "getinnervari": 10, "tupl": [10, 21], "cutofffactor": 11, "switchfactor": 11, "number_of_contact": 11, "contact": [11, 18], "made": [11, 18], "otherwis": [11, 18], "For": [11, 18, 19], "trajectori": [11, 18, 21, 23], "analysi": [11, 18, 23], "fine": [11, 18], "make": [11, 13, 18], "heavisid": [11, 18], "molecular": [11, 18, 25], "dynam": [11, 18, 25], "howev": [11, 18, 19], "continu": [11, 18], "approxim": [11, 18], "geq": [11, 18], "follow": [11, 18, 23], "12": [11, 18], "fact": 11, "r_c": 11, "x_c": 11, "typic": 11, "so": 11, "discontinu": 11, "smoothli": 11, "off": 11, "x_": 11, "do": 11, "abruptli": 11, "both": [11, 17, 19], "ignor": 11, "pair": [11, 21], "distinct": [11, 14], "count": 11, "onc": 11, "obtain": 11, "thereof": [11, 18], "being": [11, 13, 18], "multipli": 11, "els": 11, "extend": 11, "nc": 11, "nc_normal": 11, "99999": [11, 18], "openmmforc": 12, "openmm_force_wrapp": 12, "xml": 12, "serial": [12, 24], "customangleforc": 12, "addangl": 12, "assert": 12, "isinst": 12, "911": 12, "00538": 12, "metric": 13, "mileston": 13, "sigma": 13, "progress": 13, "z": 13, "path": 13, "dfrac": 13, "w_i": 13, "ln": 13, "gaussian": 13, "kernel": 13, "exp": 13, "locat": 13, "width": 13, "norm": 13, "diagon": 13, "element": 13, "characterist": 13, "appropri": 13, "relat": 13, "lambda": 13, "row": 13, "column": [13, 17], "standard": 13, "path_progress_in_cv_spac": 13, "path_deviation_in_cv_spac": 13, "less": 13, "than": [13, 16], "phi_atom": [13, 21], "ac": [13, 25], "ala": [13, 19], "psi_atom": 13, "nme": 13, "path_var": 13, "var": 13, "append": [13, 17], "50": [13, 17], "superscript": 14, "denot": 14, "problem": 14, "belong": 14, "possibl": [14, 18, 23], "circumv": 14, "issu": 14, "getnullbondforc": 14, "result": 14, "alaninedipeptideimplicit": 14, "getnumatom": 14, "123138": 14, "null": 14, "connect": 14, "graph": 14, "waterbox": 14, "box_edg": 14, "angstrom": 14, "100": [14, 17], "10436": 14, "r_g": [15, 16], "_c": [15, 16], "_m": [15, 16], "lack": 15, "parallel": [15, 16, 19], "might": [15, 16], "slow": 15, "larg": [15, 16], "radiusofgyrationsq": [15, 22, 24], "prefer": [15, 16], "2951": 15, "radius_of_gyration_sq": 16, "better": 16, "over": 16, "rgsq": 16, "0871": 16, "file": 17, "reportinterv": 17, "metacv": 17, "write": [17, 26], "data": 17, "regular": 17, "interv": 17, "boolean": 17, "flag": 17, "comma": 17, "csv": 17, "format": 17, "textiobas": 17, "These": 17, "metacollectivevari": [17, 22, 24], "inner": 17, "omit": 17, "header": 17, "line": 17, "exist": 17, "sy": 17, "stdout": 17, "umbrella": 17, "dphi": 17, "dpsi": 17, "141592653589793": 17, "langevinintegr": 17, "300": 17, "setrandomnumberse": 17, "1234": 17, "setvelocitiestotemperatur": 17, "5678": 17, "11": 17, "2618": 17, "8774": 17, "3684": 17, "04388": 17, "0217": 17, "05552": 17, "200": 17, "46382": 17, "8803": 17, "8851": 17, "04968": 17, "8971": 17, "05230": 17, "55804": 17, "9086": 17, "4311": 17, "04637": 17, "4905": 17, "03721": 17, "400": 17, "19945": 17, "6824": 17, "9678": 17, "05449": 17, "6577": 17, "04840": 17, "82728": 17, "0253": 17, "5838": 17, "04584": 17, "0367": 17, "05485": 17, "600": 17, "76160": 17, "9099": 17, "7248": 17, "04772": 17, "8706": 17, "05212": 17, "700": 17, "38895": 17, "3273": 17, "5583": 17, "04999": 17, "8714": 17, "04674": 17, "800": 17, "07166": 17, "00028746": 17, "7104": 17, "05321": 17, "7314": 17, "05418": 17, "900": 17, "58602": 17, "4899": 17, "4391": 17, "04096": 17, "9917": 17, "04675": 17, "8404": 17, "1011": 17, "7584": 17, "04951": 17, "9295": 17, "05030": 17, "residuegroup1": 18, "residuegroup2": 18, "includehydrogen": 18, "residue_coordin": 18, "ha": 18, "125": 18, "142": 18, "trp": 18, "asn": 18, "gln": 18, "thr": [18, 19], "156": 18, "pro": 18, "gly": 18, "customintegr": 18, "26": 18, "setreferencevalu": 18, "getreferencevalu": 18, "blocksiz": 19, "sheet_rmsd_cont": 19, "sheet": [19, 25], "beta_": 19, "minimum": 19, "subset": 19, "protein": [19, 23, 25], "antiparallel": 19, "minimim": 19, "choos": 19, "partit": 19, "block": 19, "n_1": 19, "n_2": 19, "n_m": 19, "compos": 19, "consecut": 19, "next": 19, "modifi": 19, "l_": 19, "l_k": 19, "n_i": 19, "n_k": 19, "antibetarmsd": 19, "parabetarmsd": 19, "srcimplicit": 19, "68": 19, "82": 19, "tyr": 19, "val": 19, "sheet_cont": 19, "28": 19, "0465": 19, "blockwise_sheet_cont": 19, "9859": 19, "atom4": 20, "four": [20, 21, 23], "varphi": 20, "atan2": 20, "u": 20, "arctang": 20, "receiv": 20, "denomin": 20, "fourth": 20, "5707": 20, "firstlist": 21, "secondlist": 21, "torsion_similar": 21, "similar": 21, "co": 21, "1st": 21, "2nd": 21, "kth": 21, "dihcor": 21, "mdtraj": 21, "traj": 21, "from_openmm": 21, "compute_phi": 21, "valid_atom": 21, "659": 21, "attractionstrength": [22, 24], "centroidfunct": [22, 24], "compositermsd": [22, 24], "helixanglecont": [22, 23, 24], "helixhbondcont": [22, 23, 24], "helixrmsdcont": [22, 23, 24], "numberofcontact": [22, 24], "openmmforcewrapp": [22, 24], "pathincvspac": [22, 24], "sheetrmsdcont": [22, 24], "torsionsimilar": [22, 24], "report": [22, 24], "python": 23, "pre": 23, "biasvari": 23, "metadynam": 23, "uf": 23, "har": 23, "environ": 23, "run": 23, "command": 23, "forg": 23, "mdtool": 23, "Or": 23, "mamba": 23, "your": 23, "script": 23, "jupyt": 23, "notebook": 23, "show": 23, "how": 23, "quantifi": 23, "modul": [23, 24], "t4": 23, "lysozym": 23, "l99a": 23, "longest": 23, "occur": 23, "lys60": 23, "arg80": 23, "final": 23, "round": 23, "seven": 23, "decim": 23, "place": 23, "output": 23, "9873989": 23, "93414": 23, "9946999": 23, "918571": 23, "expect": 23, "matter": 23, "star": 24, "introduct": 24, "usag": 24, "deseri": [24, 26], "bibliographi": 24, "search": 24, "page": 24, "christoph": 25, "chipot": 25, "andrew": 25, "pohoril": 25, "editor": 25, "free": 25, "springer": 25, "berlin": 25, "heidelberg": 25, "2007": 25, "url": 25, "http": 25, "doi": 25, "org": 25, "1007": 25, "978": 25, "540": 25, "38448": 25, "gabriela": 25, "b": 25, "correa": 25, "\u00e9": 25, "ssica": 25, "l": 25, "maciel": 25, "frederico": 25, "w": 25, "tavar": 25, "charll": 25, "abreu": 25, "new": 25, "formul": 25, "concert": 25, "alchem": 25, "van": 25, "der": 25, "waal": 25, "compon": 25, "solvat": 25, "journal": 25, "chemic": 25, "theori": 25, "5876": 25, "5889": 25, "octob": 25, "2022": 25, "1021": 25, "jctc": 25, "2c00563": 25, "fabio": 25, "pietrucci": 25, "alessandro": 25, "laio": 25, "effici": 25, "explor": 25, "applic": 25, "sh": 25, "gb": 25, "2197": 25, "2201": 25, "aug": 25, "2009": 25, "ct900202f": 25, "sven": 25, "hovm\u00f6ller": 25, "tupe": 25, "zhou": 25, "toma": 25, "ohlson": 25, "conform": 25, "amino": 25, "acid": 25, "acta": 25, "crystallographica": 25, "section": 25, "biolog": 25, "crystallographi": 25, "58": 25, "768": 25, "776": 25, "apr": 25, "2002": 25, "1107": 25, "s0907444902003359": 25, "marcella": 25, "iannuzzi": 25, "michel": 25, "parrinello": 25, "reactiv": 25, "surfac": 25, "car": 25, "physic": 25, "review": 25, "letter": 25, "jun": 25, "2003": 25, "1103": 25, "physrevlett": 25, "90": 25, "238302": 25, "david": 25, "branduardi": 25, "francesco": 25, "luigi": 25, "gervasio": 25, "054103": 25, "februari": 25, "1063": 25, "2432340": 25, "obj": 26, "iostream": 26, "io": 26, "stream": 26, "mode": 26, "stringio": 26, "read": 26, "seek": 26, "new_object": 26}, "objects": {"cvpack": [[0, 0, 1, "", "Angle"], [1, 0, 1, "", "AtomicFunction"], [2, 0, 1, "", "AttractionStrength"], [3, 0, 1, "", "CentroidFunction"], [4, 0, 1, "", "CompositeRMSD"], [5, 0, 1, "", "Distance"], [6, 0, 1, "", "HelixAngleContent"], [7, 0, 1, "", "HelixHBondContent"], [8, 0, 1, "", "HelixRMSDContent"], [9, 0, 1, "", "HelixTorsionContent"], [10, 0, 1, "", "MetaCollectiveVariable"], [11, 0, 1, "", "NumberOfContacts"], [12, 0, 1, "", "OpenMMForceWrapper"], [13, 0, 1, "", "PathInCVSpace"], [14, 0, 1, "", "RMSD"], [15, 0, 1, "", "RadiusOfGyration"], [16, 0, 1, "", "RadiusOfGyrationSq"], [17, 0, 1, "", "Reporter"], [18, 0, 1, "", "ResidueCoordination"], [19, 0, 1, "", "SheetRMSDContent"], [20, 0, 1, "", "Torsion"], [21, 0, 1, "", "TorsionSimilarity"]], "cvpack.Angle": [[0, 1, 1, "", "addToSystem"], [0, 1, 1, "", "getEffectiveMass"], [0, 1, 1, "", "getMassUnit"], [0, 1, 1, "", "getName"], [0, 1, 1, "", "getPeriodicBounds"], [0, 1, 1, "", "getUnit"], [0, 1, 1, "", "getValue"]], "cvpack.AtomicFunction": [[1, 1, 1, "", "addToSystem"], [1, 1, 1, "", "fromOpenMMForce"], [1, 1, 1, "", "getEffectiveMass"], [1, 1, 1, "", "getMassUnit"], [1, 1, 1, "", "getName"], [1, 1, 1, "", "getPeriodicBounds"], [1, 1, 1, "", "getUnit"], [1, 1, 1, "", "getValue"]], "cvpack.AttractionStrength": [[2, 1, 1, "", "addToSystem"], [2, 1, 1, "", "getEffectiveMass"], [2, 1, 1, "", "getMassUnit"], [2, 1, 1, "", "getName"], [2, 1, 1, "", "getPeriodicBounds"], [2, 1, 1, "", "getUnit"], [2, 1, 1, "", "getValue"]], "cvpack.CentroidFunction": [[3, 1, 1, "", "addToSystem"], [3, 1, 1, "", "getEffectiveMass"], [3, 1, 1, "", "getMassUnit"], [3, 1, 1, "", "getName"], [3, 1, 1, "", "getPeriodicBounds"], [3, 1, 1, "", "getUnit"], [3, 1, 1, "", "getValue"]], "cvpack.CompositeRMSD": [[4, 1, 1, "", "addToSystem"], [4, 1, 1, "", "getEffectiveMass"], [4, 1, 1, "", "getMassUnit"], [4, 1, 1, "", "getName"], [4, 1, 1, "", "getPeriodicBounds"], [4, 1, 1, "", "getUnit"], [4, 1, 1, "", "getValue"]], "cvpack.Distance": [[5, 1, 1, "", "addToSystem"], [5, 1, 1, "", "getEffectiveMass"], [5, 1, 1, "", "getMassUnit"], [5, 1, 1, "", "getName"], [5, 1, 1, "", "getPeriodicBounds"], [5, 1, 1, "", "getUnit"], [5, 1, 1, "", "getValue"]], "cvpack.HelixAngleContent": [[6, 1, 1, "", "addToSystem"], [6, 1, 1, "", "getEffectiveMass"], [6, 1, 1, "", "getMassUnit"], [6, 1, 1, "", "getName"], [6, 1, 1, "", "getPeriodicBounds"], [6, 1, 1, "", "getUnit"], [6, 1, 1, "", "getValue"]], "cvpack.HelixHBondContent": [[7, 1, 1, "", "addToSystem"], [7, 1, 1, "", "getEffectiveMass"], [7, 1, 1, "", "getMassUnit"], [7, 1, 1, "", "getName"], [7, 1, 1, "", "getPeriodicBounds"], [7, 1, 1, "", "getUnit"], [7, 1, 1, "", "getValue"]], "cvpack.HelixRMSDContent": [[8, 1, 1, "", "addToSystem"], [8, 1, 1, "", "getEffectiveMass"], [8, 1, 1, "", "getMassUnit"], [8, 1, 1, "", "getName"], [8, 1, 1, "", "getPeriodicBounds"], [8, 1, 1, "", "getUnit"], [8, 1, 1, "", "getValue"]], "cvpack.HelixTorsionContent": [[9, 1, 1, "", "addToSystem"], [9, 1, 1, "", "getEffectiveMass"], [9, 1, 1, "", "getMassUnit"], [9, 1, 1, "", "getName"], [9, 1, 1, "", "getPeriodicBounds"], [9, 1, 1, "", "getUnit"], [9, 1, 1, "", "getValue"]], "cvpack.MetaCollectiveVariable": [[10, 1, 1, "", "addToSystem"], [10, 1, 1, "", "getEffectiveMass"], [10, 1, 1, "", "getInnerEffectiveMasses"], [10, 1, 1, "", "getInnerValues"], [10, 1, 1, "", "getInnerVariables"], [10, 1, 1, "", "getMassUnit"], [10, 1, 1, "", "getName"], [10, 1, 1, "", "getPeriodicBounds"], [10, 1, 1, "", "getUnit"], [10, 1, 1, "", "getValue"]], "cvpack.NumberOfContacts": [[11, 1, 1, "", "addToSystem"], [11, 1, 1, "", "getEffectiveMass"], [11, 1, 1, "", "getMassUnit"], [11, 1, 1, "", "getName"], [11, 1, 1, "", "getPeriodicBounds"], [11, 1, 1, "", "getUnit"], [11, 1, 1, "", "getValue"]], "cvpack.OpenMMForceWrapper": [[12, 1, 1, "", "addToSystem"], [12, 1, 1, "", "getEffectiveMass"], [12, 1, 1, "", "getMassUnit"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getPeriodicBounds"], [12, 1, 1, "", "getUnit"], [12, 1, 1, "", "getValue"]], "cvpack.PathInCVSpace": [[13, 1, 1, "", "addToSystem"], [13, 1, 1, "", "getEffectiveMass"], [13, 1, 1, "", "getMassUnit"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getPeriodicBounds"], [13, 1, 1, "", "getUnit"], [13, 1, 1, "", "getValue"]], "cvpack.RMSD": [[14, 1, 1, "", "addToSystem"], [14, 1, 1, "", "getEffectiveMass"], [14, 1, 1, "", "getMassUnit"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getNullBondForce"], [14, 1, 1, "", "getPeriodicBounds"], [14, 1, 1, "", "getUnit"], [14, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyration": [[15, 1, 1, "", "addToSystem"], [15, 1, 1, "", "getEffectiveMass"], [15, 1, 1, "", "getMassUnit"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getPeriodicBounds"], [15, 1, 1, "", "getUnit"], [15, 1, 1, "", "getValue"]], "cvpack.RadiusOfGyrationSq": [[16, 1, 1, "", "addToSystem"], [16, 1, 1, "", "getEffectiveMass"], [16, 1, 1, "", "getMassUnit"], [16, 1, 1, "", "getName"], [16, 1, 1, "", "getPeriodicBounds"], [16, 1, 1, "", "getUnit"], [16, 1, 1, "", "getValue"]], "cvpack.ResidueCoordination": [[18, 1, 1, "", "addToSystem"], [18, 1, 1, "", "getEffectiveMass"], [18, 1, 1, "", "getMassUnit"], [18, 1, 1, "", "getName"], [18, 1, 1, "", "getPeriodicBounds"], [18, 1, 1, "", "getReferenceValue"], [18, 1, 1, "", "getUnit"], [18, 1, 1, "", "getValue"], [18, 1, 1, "", "setReferenceValue"]], "cvpack.SheetRMSDContent": [[19, 1, 1, "", "addToSystem"], [19, 1, 1, "", "getEffectiveMass"], [19, 1, 1, "", "getMassUnit"], [19, 1, 1, "", "getName"], [19, 1, 1, "", "getPeriodicBounds"], [19, 1, 1, "", "getUnit"], [19, 1, 1, "", "getValue"]], "cvpack.Torsion": [[20, 1, 1, "", "addToSystem"], [20, 1, 1, "", "getEffectiveMass"], [20, 1, 1, "", "getMassUnit"], [20, 1, 1, "", "getName"], [20, 1, 1, "", "getPeriodicBounds"], [20, 1, 1, "", "getUnit"], [20, 1, 1, "", "getValue"]], "cvpack.TorsionSimilarity": [[21, 1, 1, "", "addToSystem"], [21, 1, 1, "", "getEffectiveMass"], [21, 1, 1, "", "getMassUnit"], [21, 1, 1, "", "getName"], [21, 1, 1, "", "getPeriodicBounds"], [21, 1, 1, "", "getUnit"], [21, 1, 1, "", "getValue"]], "cvpack.serialization": [[26, 2, 1, "", "deserialize"], [26, 2, 1, "", "serialize"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"angl": 0, "atomicfunct": 1, "attractionstrength": 2, "centroidfunct": 3, "compositermsd": 4, "distanc": 5, "helixanglecont": 6, "helixhbondcont": 7, "helixrmsdcont": 8, "helixtorsioncont": 9, "metacollectivevari": 10, "numberofcontact": 11, "openmmforcewrapp": 12, "pathincvspac": 13, "rmsd": 14, "radiusofgyr": 15, "radiusofgyrationsq": 16, "report": 17, "residuecoordin": 18, "sheetrmsdcont": 19, "torsion": 20, "torsionsimilar": 21, "collect": [22, 24], "variabl": [22, 24], "other": 22, "class": 22, "get": 23, "start": 23, "introduct": 23, "instal": 23, "usag": 23, "exampl": 23, "packag": 24, "content": 24, "indic": 24, "tabl": 24, "bibliographi": 25, "serial": 26}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Angle": [[0, "angle"]], "AtomicFunction": [[1, "atomicfunction"]], "AttractionStrength": [[2, "attractionstrength"]], "CentroidFunction": [[3, "centroidfunction"]], "CompositeRMSD": [[4, "compositermsd"]], "Distance": [[5, "distance"]], "HelixAngleContent": [[6, "helixanglecontent"]], "HelixHBondContent": [[7, "helixhbondcontent"]], "HelixRMSDContent": [[8, "helixrmsdcontent"]], "HelixTorsionContent": [[9, "helixtorsioncontent"]], "MetaCollectiveVariable": [[10, "metacollectivevariable"]], "NumberOfContacts": [[11, "numberofcontacts"]], "OpenMMForceWrapper": [[12, "openmmforcewrapper"]], "PathInCVSpace": [[13, "pathincvspace"]], "RMSD": [[14, "rmsd"]], "RadiusOfGyration": [[15, "radiusofgyration"]], "RadiusOfGyrationSq": [[16, "radiusofgyrationsq"]], "Reporter": [[17, "reporter"]], "ResidueCoordination": [[18, "residuecoordination"]], "SheetRMSDContent": [[19, "sheetrmsdcontent"]], "Torsion": [[20, "torsion"]], "TorsionSimilarity": [[21, "torsionsimilarity"]], "Collective Variables": [[22, "collective-variables"]], "Other Classes": [[22, "other-classes"]], "Getting Started": [[23, "getting-started"]], "Introduction": [[23, "introduction"]], "Installation": [[23, "installation"]], "Usage": [[23, "usage"]], "Example": [[23, "example"]], "Collective Variable Package": [[24, "collective-variable-package"]], "Contents": [[24, "contents"]], "Indices and tables": [[24, "indices-and-tables"]], "Bibliography": [[25, "bibliography"]], "Serialization": [[26, "serialization"]]}, "indexentries": {"angle (class in cvpack)": [[0, "cvpack.Angle"]], "addtosystem() (cvpack.angle method)": [[0, "cvpack.Angle.addToSystem"]], "geteffectivemass() (cvpack.angle method)": [[0, "cvpack.Angle.getEffectiveMass"]], "getmassunit() (cvpack.angle method)": [[0, "cvpack.Angle.getMassUnit"]], "getname() (cvpack.angle method)": [[0, "cvpack.Angle.getName"]], "getperiodicbounds() (cvpack.angle method)": [[0, "cvpack.Angle.getPeriodicBounds"]], "getunit() (cvpack.angle method)": [[0, "cvpack.Angle.getUnit"]], "getvalue() (cvpack.angle method)": [[0, "cvpack.Angle.getValue"]], "atomicfunction (class in cvpack)": [[1, "cvpack.AtomicFunction"]], "addtosystem() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.addToSystem"]], "fromopenmmforce() (cvpack.atomicfunction class method)": [[1, "cvpack.AtomicFunction.fromOpenMMForce"]], "geteffectivemass() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getEffectiveMass"]], "getmassunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getMassUnit"]], "getname() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getName"]], "getperiodicbounds() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getPeriodicBounds"]], "getunit() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getUnit"]], "getvalue() (cvpack.atomicfunction method)": [[1, "cvpack.AtomicFunction.getValue"]], "attractionstrength (class in cvpack)": [[2, "cvpack.AttractionStrength"]], "addtosystem() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.addToSystem"]], "geteffectivemass() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getEffectiveMass"]], "getmassunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getMassUnit"]], "getname() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getName"]], "getperiodicbounds() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getPeriodicBounds"]], "getunit() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getUnit"]], "getvalue() (cvpack.attractionstrength method)": [[2, "cvpack.AttractionStrength.getValue"]], "centroidfunction (class in cvpack)": [[3, "cvpack.CentroidFunction"]], "addtosystem() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.addToSystem"]], "geteffectivemass() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getEffectiveMass"]], "getmassunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getMassUnit"]], "getname() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getName"]], "getperiodicbounds() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getPeriodicBounds"]], "getunit() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getUnit"]], "getvalue() (cvpack.centroidfunction method)": [[3, "cvpack.CentroidFunction.getValue"]], "compositermsd (class in cvpack)": [[4, "cvpack.CompositeRMSD"]], "addtosystem() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.addToSystem"]], "geteffectivemass() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getEffectiveMass"]], "getmassunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getMassUnit"]], "getname() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getName"]], "getperiodicbounds() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getPeriodicBounds"]], "getunit() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getUnit"]], "getvalue() (cvpack.compositermsd method)": [[4, "cvpack.CompositeRMSD.getValue"]], "distance (class in cvpack)": [[5, "cvpack.Distance"]], "addtosystem() (cvpack.distance method)": [[5, "cvpack.Distance.addToSystem"]], "geteffectivemass() (cvpack.distance method)": [[5, "cvpack.Distance.getEffectiveMass"]], "getmassunit() (cvpack.distance method)": [[5, "cvpack.Distance.getMassUnit"]], "getname() (cvpack.distance method)": [[5, "cvpack.Distance.getName"]], "getperiodicbounds() (cvpack.distance method)": [[5, "cvpack.Distance.getPeriodicBounds"]], "getunit() (cvpack.distance method)": [[5, "cvpack.Distance.getUnit"]], "getvalue() (cvpack.distance method)": [[5, "cvpack.Distance.getValue"]], "helixanglecontent (class in cvpack)": [[6, "cvpack.HelixAngleContent"]], "addtosystem() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.addToSystem"]], "geteffectivemass() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getEffectiveMass"]], "getmassunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getMassUnit"]], "getname() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getName"]], "getperiodicbounds() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getPeriodicBounds"]], "getunit() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getUnit"]], "getvalue() (cvpack.helixanglecontent method)": [[6, "cvpack.HelixAngleContent.getValue"]], "helixhbondcontent (class in cvpack)": [[7, "cvpack.HelixHBondContent"]], "addtosystem() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.addToSystem"]], "geteffectivemass() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getEffectiveMass"]], "getmassunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getMassUnit"]], "getname() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getName"]], "getperiodicbounds() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getPeriodicBounds"]], "getunit() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getUnit"]], "getvalue() (cvpack.helixhbondcontent method)": [[7, "cvpack.HelixHBondContent.getValue"]], "helixrmsdcontent (class in cvpack)": [[8, "cvpack.HelixRMSDContent"]], "addtosystem() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getMassUnit"]], "getname() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getName"]], "getperiodicbounds() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getPeriodicBounds"]], "getunit() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getUnit"]], "getvalue() (cvpack.helixrmsdcontent method)": [[8, "cvpack.HelixRMSDContent.getValue"]], "helixtorsioncontent (class in cvpack)": [[9, "cvpack.HelixTorsionContent"]], "addtosystem() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.addToSystem"]], "geteffectivemass() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getEffectiveMass"]], "getmassunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getMassUnit"]], "getname() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getName"]], "getperiodicbounds() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getPeriodicBounds"]], "getunit() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getUnit"]], "getvalue() (cvpack.helixtorsioncontent method)": [[9, "cvpack.HelixTorsionContent.getValue"]], "metacollectivevariable (class in cvpack)": [[10, "cvpack.MetaCollectiveVariable"]], "addtosystem() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.addToSystem"]], "geteffectivemass() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getEffectiveMass"]], "getinnereffectivemasses() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getInnerEffectiveMasses"]], "getinnervalues() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getInnerValues"]], "getinnervariables() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getInnerVariables"]], "getmassunit() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getMassUnit"]], "getname() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getName"]], "getperiodicbounds() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getPeriodicBounds"]], "getunit() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getUnit"]], "getvalue() (cvpack.metacollectivevariable method)": [[10, "cvpack.MetaCollectiveVariable.getValue"]], "numberofcontacts (class in cvpack)": [[11, "cvpack.NumberOfContacts"]], "addtosystem() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.addToSystem"]], "geteffectivemass() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getEffectiveMass"]], "getmassunit() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getMassUnit"]], "getname() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getName"]], "getperiodicbounds() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getPeriodicBounds"]], "getunit() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getUnit"]], "getvalue() (cvpack.numberofcontacts method)": [[11, "cvpack.NumberOfContacts.getValue"]], "openmmforcewrapper (class in cvpack)": [[12, "cvpack.OpenMMForceWrapper"]], "addtosystem() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.addToSystem"]], "geteffectivemass() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getEffectiveMass"]], "getmassunit() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getMassUnit"]], "getname() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getName"]], "getperiodicbounds() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getPeriodicBounds"]], "getunit() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getUnit"]], "getvalue() (cvpack.openmmforcewrapper method)": [[12, "cvpack.OpenMMForceWrapper.getValue"]], "pathincvspace (class in cvpack)": [[13, "cvpack.PathInCVSpace"]], "addtosystem() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.addToSystem"]], "geteffectivemass() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getEffectiveMass"]], "getmassunit() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getMassUnit"]], "getname() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getName"]], "getperiodicbounds() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getPeriodicBounds"]], "getunit() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getUnit"]], "getvalue() (cvpack.pathincvspace method)": [[13, "cvpack.PathInCVSpace.getValue"]], "rmsd (class in cvpack)": [[14, "cvpack.RMSD"]], "addtosystem() (cvpack.rmsd method)": [[14, "cvpack.RMSD.addToSystem"]], "geteffectivemass() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getEffectiveMass"]], "getmassunit() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getMassUnit"]], "getname() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getName"]], "getnullbondforce() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getNullBondForce"]], "getperiodicbounds() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getPeriodicBounds"]], "getunit() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getUnit"]], "getvalue() (cvpack.rmsd method)": [[14, "cvpack.RMSD.getValue"]], "radiusofgyration (class in cvpack)": [[15, "cvpack.RadiusOfGyration"]], "addtosystem() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getMassUnit"]], "getname() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getName"]], "getperiodicbounds() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getPeriodicBounds"]], "getunit() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getUnit"]], "getvalue() (cvpack.radiusofgyration method)": [[15, "cvpack.RadiusOfGyration.getValue"]], "radiusofgyrationsq (class in cvpack)": [[16, "cvpack.RadiusOfGyrationSq"]], "addtosystem() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.addToSystem"]], "geteffectivemass() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getEffectiveMass"]], "getmassunit() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getMassUnit"]], "getname() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getName"]], "getperiodicbounds() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getPeriodicBounds"]], "getunit() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getUnit"]], "getvalue() (cvpack.radiusofgyrationsq method)": [[16, "cvpack.RadiusOfGyrationSq.getValue"]], "reporter (class in cvpack)": [[17, "cvpack.Reporter"]], "residuecoordination (class in cvpack)": [[18, "cvpack.ResidueCoordination"]], "addtosystem() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.addToSystem"]], "geteffectivemass() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.getEffectiveMass"]], "getmassunit() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.getMassUnit"]], "getname() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.getName"]], "getperiodicbounds() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.getPeriodicBounds"]], "getreferencevalue() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.getReferenceValue"]], "getunit() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.getUnit"]], "getvalue() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.getValue"]], "setreferencevalue() (cvpack.residuecoordination method)": [[18, "cvpack.ResidueCoordination.setReferenceValue"]], "sheetrmsdcontent (class in cvpack)": [[19, "cvpack.SheetRMSDContent"]], "addtosystem() (cvpack.sheetrmsdcontent method)": [[19, "cvpack.SheetRMSDContent.addToSystem"]], "geteffectivemass() (cvpack.sheetrmsdcontent method)": [[19, "cvpack.SheetRMSDContent.getEffectiveMass"]], "getmassunit() (cvpack.sheetrmsdcontent method)": [[19, "cvpack.SheetRMSDContent.getMassUnit"]], "getname() (cvpack.sheetrmsdcontent method)": [[19, "cvpack.SheetRMSDContent.getName"]], "getperiodicbounds() (cvpack.sheetrmsdcontent method)": [[19, "cvpack.SheetRMSDContent.getPeriodicBounds"]], "getunit() (cvpack.sheetrmsdcontent method)": [[19, "cvpack.SheetRMSDContent.getUnit"]], "getvalue() (cvpack.sheetrmsdcontent method)": [[19, "cvpack.SheetRMSDContent.getValue"]], "torsion (class in cvpack)": [[20, "cvpack.Torsion"]], "addtosystem() (cvpack.torsion method)": [[20, "cvpack.Torsion.addToSystem"]], "geteffectivemass() (cvpack.torsion method)": [[20, "cvpack.Torsion.getEffectiveMass"]], "getmassunit() (cvpack.torsion method)": [[20, "cvpack.Torsion.getMassUnit"]], "getname() (cvpack.torsion method)": [[20, "cvpack.Torsion.getName"]], "getperiodicbounds() (cvpack.torsion method)": [[20, "cvpack.Torsion.getPeriodicBounds"]], "getunit() (cvpack.torsion method)": [[20, "cvpack.Torsion.getUnit"]], "getvalue() (cvpack.torsion method)": [[20, "cvpack.Torsion.getValue"]], "torsionsimilarity (class in cvpack)": [[21, "cvpack.TorsionSimilarity"]], "addtosystem() (cvpack.torsionsimilarity method)": [[21, "cvpack.TorsionSimilarity.addToSystem"]], "geteffectivemass() (cvpack.torsionsimilarity method)": [[21, "cvpack.TorsionSimilarity.getEffectiveMass"]], "getmassunit() (cvpack.torsionsimilarity method)": [[21, "cvpack.TorsionSimilarity.getMassUnit"]], "getname() (cvpack.torsionsimilarity method)": [[21, "cvpack.TorsionSimilarity.getName"]], "getperiodicbounds() (cvpack.torsionsimilarity method)": [[21, "cvpack.TorsionSimilarity.getPeriodicBounds"]], "getunit() (cvpack.torsionsimilarity method)": [[21, "cvpack.TorsionSimilarity.getUnit"]], "getvalue() (cvpack.torsionsimilarity method)": [[21, "cvpack.TorsionSimilarity.getValue"]], "deserialize() (in module cvpack.serialization)": [[26, "cvpack.serialization.deserialize"]], "serialize() (in module cvpack.serialization)": [[26, "cvpack.serialization.serialize"]]}})